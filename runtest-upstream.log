RUNTIME_DIR=runtime4 /usr/local/home/lmaurer/.opam/4.14.1/bin/dune build --root=. --workspace=duneconf/boot.ws  main_native.exe boot_ocamlopt.exe tools/ocamlmklib.exe tools/ocamldep.exe tools/objinfo.exe ocamltest/ocamltest.native
RUNTIME_DIR=runtime4 /usr/local/home/lmaurer/.opam/4.14.1/bin/dune build --root=. --workspace=duneconf/runtime_stdlib.ws --only-package=ocaml_runtime_stdlib @install
rm -rf _build/runtime_stdlib_install
cp -l -R _build/install/runtime_stdlib _build/runtime_stdlib_install
RUNTIME_DIR=runtime4 SYSTEM=linux MODEL=default \
          ASPP="gcc -c" ASPPFLAGS="" \
          /usr/local/home/lmaurer/.opam/4.14.1/bin/dune build --root=. --workspace=duneconf/main.ws \
          --only-package=ocaml @install \
          flambda-backend/testsuite/tools/expect.exe \
          flambda-backend/testsuite/tools/codegen_main.exe \
          flambda-backend/testsuite/tools/asmgen_amd64.o \
          testsuite/lib/lib.cm{,x}a \
          testsuite/lib/testing.cm{,x}a \
          ./tools/dumpobj.bc
rm -rf _install
mkdir -p _install/{bin,lib/ocaml}
cp -l _build/runtime_stdlib_install/bin/* _install/bin/
cp -l _build/install/main/bin/* _install/bin/
( cd _install/bin; for i in *.opt; do ln -s $i ${i%.opt}; done )
cp -l -R _build/runtime_stdlib_install/lib/ocaml_runtime_stdlib/* _install/lib/ocaml/
rm -f _install/lib/ocaml/{META,dune-package,Makefile.config,dynlink.cmxa}
cp -l -R _build/install/main/lib/ocaml/* _install/lib/ocaml/
if [ "xno" == "xyes" ] ; \
then \
          for libdir in unix str dynlink bigarray ; do \
    mv _install/lib/ocaml/${libdir}/* _install/lib/ocaml/ ; \
            rmdir _install/lib/ocaml/${libdir} ; \
          done \
fi
rm -f _install/lib/ocaml/{META,dune-package}
rm -f _install/lib/ocaml/compiler-libs/*.cmo
cp -l {_build/install/main,_install}/lib/ocaml/compiler-libs/topstart.cmo
for file in top opttop; do \
  cp -f _install/lib/ocaml/compiler-libs/${file}dirs.{cmi,mli,cmt,cmti} _install/lib/ocaml; \
done
shopt -s nullglob; for file in _build/main/./.ocaml{bytecomp,common,middleend,optcomp}.objs/{byte/*.{cmi,cma,cmt,cmti},native/*.{cmx,cmxa,cmxs}}; do \
  cp -l $file _install/lib/ocaml/compiler-libs/ ; \
done
mkdir _install/lib/stublibs
cp _build/main/parser.cmly _install/lib/ocaml/compiler-libs/
find _build/main/ \( -name "flambda2*.cmi" \
          -or -name "flambda2*.cmti" -or -name "flambda2*.cmt" \) \
          -exec cp -f {} _install/lib/ocaml/compiler-libs \;
cp: '_build/main/middle_end/flambda2/to_cmm/.flambda2_to_cmm.objs/byte/flambda2_to_cmm.cmt' and '_install/lib/ocaml/compiler-libs/flambda2_to_cmm.cmt' are the same file
cp: '_build/main/middle_end/flambda2/to_cmm/.flambda2_to_cmm.objs/byte/flambda2_to_cmm.cmi' and '_install/lib/ocaml/compiler-libs/flambda2_to_cmm.cmi' are the same file
cp: '_build/main/middle_end/flambda2/to_cmm/.flambda2_to_cmm.objs/byte/flambda2_to_cmm__To_cmm.cmt' and '_install/lib/ocaml/compiler-libs/flambda2_to_cmm__To_cmm.cmt' are the same file
cp: '_build/main/middle_end/flambda2/to_cmm/.flambda2_to_cmm.objs/byte/flambda2_to_cmm__To_cmm.cmi' and '_install/lib/ocaml/compiler-libs/flambda2_to_cmm__To_cmm.cmi' are the same file
rm -rf _runtest
mkdir _runtest
ln -s ../_install _runtest/_install
cp -l -a ./testsuite _runtest/testsuite
# replace backend-specific testsuite/tools with their new versions
rm -f _runtest/testsuite/tools/*
cp -a flambda-backend/testsuite/tools/* _runtest/testsuite/tools/
cp _build/main/flambda-backend/testsuite/tools/expect.exe _runtest/testsuite/tools/expect
chmod 755 _runtest/testsuite/tools/expect
cp _build/main/flambda-backend/testsuite/tools/codegen_main.exe \
          _runtest/testsuite/tools/codegen
chmod 755 _runtest/testsuite/tools/codegen
cp _build/main/flambda-backend/testsuite/tools/asmgen_*.o \
          _runtest/testsuite/tools/
cp _build/main/testsuite/lib/lib.{a,cmxa,cma} \
          _runtest/testsuite/lib/
cp _build/main/testsuite/lib/.lib.objs/byte/lib.cm* \
          _runtest/testsuite/lib/
cp _build/main/testsuite/lib/.lib.objs/native/lib.cm* \
          _runtest/testsuite/lib/
cp _build/main/testsuite/lib/testing.{a,cmxa,cma} \
          _runtest/testsuite/lib/
cp _build/main/testsuite/lib/.testing.objs/byte/testing.cm* \
          _runtest/testsuite/lib/
cp _build/main/testsuite/lib/.testing.objs/native/testing.cm* \
          _runtest/testsuite/lib/
# replace backend-specific testsuite/tests/asmcomp with their new versions
rm _runtest/testsuite/tests/asmcomp/*
cp -a flambda-backend/testsuite/tests/asmcomp/* _runtest/testsuite/tests/asmcomp/
# replace backend-specific testsuite/tests/asmgen with their new versions
rm _runtest/testsuite/tests/asmgen/*
cp -a flambda-backend/testsuite/tests/asmgen/* _runtest/testsuite/tests/asmgen/
# replace backend-specific testsuite/tests/unboxed-primitive-args with their new versions
rm _runtest/testsuite/tests/unboxed-primitive-args/*
cp -a flambda-backend/testsuite/tests/unboxed-primitive-args/* _runtest/testsuite/tests/unboxed-primitive-args/
# add extension library tests that are not supported by the upstream compiler
rm _runtest/testsuite/tests/lib-extensions/*
cp -a flambda-backend/testsuite/tests/lib-extensions/* _runtest/testsuite/tests/lib-extensions
cp ./Makefile.* _runtest/
(cd _runtest; \
 for exe in _install/bin/*; do ln -s $exe; done; \
         ln -s . boot; \
 for exe in ocamlc ocamlopt ocamllex; do \
   rm -f $exe; ln -s $exe.byte $exe; \
         touch ocamlc.opt ocamlopt.opt; \
 done; \
 ln -s _install/lib/ocaml stdlib; \
 mkdir runtime4; \
 for f in ocamlrun* stdlib/caml stdlib/stublibs/* runtime4/caml/threads.h; do \
   ln -s ../$f runtime4/`basename $f`; \
 done; \
 ln -s . lex; ln -s . yacc; \
 ln -s _install/lib/ocaml/compiler-libs compilerlibs; \
 mkdir -p otherlibs/{unix,dynlink/native,str,bigarray,runtime_events}; \
 ln -s ../stdlib/threads otherlibs/systhreads4; \
         cp -l stdlib/unix/{lib,}unix* otherlibs/unix; \
         cp -l stdlib/dynlink/dynlink* otherlibs/dynlink; \
         cp -l stdlib/str/{lib,}str* otherlibs/str; \
 for universe in upstream_compatible stable beta alpha ; do \
	mkdir -p otherlibs/{stdlib_,}${universe}; \
	cp -l stdlib/stdlib_${universe}/* otherlibs/stdlib_${universe}; \
	cp -l stdlib/${universe}/* otherlibs/${universe}; \
 done; \
     if [[ x"runtime4" = x"runtime" ]]; then \
     cp -l stdlib/runtime_events/{lib,}runtime_events* otherlibs/runtime_events; \
     fi; \
 ln -s ../_build/main/./toplevel/byte/.ocamltoplevel.objs/byte toplevel; \
)
cp: cannot stat 'stdlib/upstream_compatible/*': No such file or directory
cp: cannot stat 'stdlib/stable/*': No such file or directory
cp: cannot stat 'stdlib/beta/*': No such file or directory
cp: cannot stat 'stdlib/alpha/*': No such file or directory
# Various directories are put on the -I paths by tools/Makefile;
# utils/ is one such, so we just dump the .cm* files in there for
# various things.
mkdir _runtest/utils
cp _install/lib/ocaml/compiler-libs/*.{cmi,cmx} _runtest/utils
cp _build/main/./.ocamlcommon.objs/byte/*.cmo _runtest/utils
rm -f _runtest/utils/{topdirs,opttopdirs}.cmi
cp _install/lib/ocaml/*.{cmi,cma,a,cmxa} _runtest/utils
cp _install/lib/ocaml/{unix,str,dynlink}/*.{cmi,cma,a,cmxa} _runtest/utils
cp _build/main/./.ocamlcommon.objs/native/config.o _runtest/utils
# Needed for tests/warnings
cp ./utils/warnings.ml _runtest/utils
# Suppress linker errors about -I directories not existing.
for dir in asmcomp bytecomp driver file_formats lambda middle_end \
  parsing typing; do ln -s utils _runtest/$dir; done
# stublibs
mkdir -p _runtest/lib/ocaml/stublibs/
cp _build/install/main/lib/ocaml/stublibs/*.so _runtest/lib/ocaml/stublibs
# ocamldebug
mkdir _runtest/debugger4
ln -s ../ocamldebug _runtest/debugger4
cp _build/main/./debugger4/.ocamldebug.objs/byte/*.cm* \
  _runtest/debugger4
# The ast_invariants test needs VERSION to be present.  In fact ideally
# we should have all the source files in _runtest too for this test,
# but for the moment we accept it being a weaker check.  We're not
# working on parts of the compiler that deal with the AST anyway in
# this repo.
touch _runtest/VERSION
# tools
mkdir _runtest/tools
ln -s ../_install/bin/ocamlmklib.byte _runtest/tools/ocamlmklib
ln -s ../_install/bin/ocamlobjinfo.byte _runtest/tools/ocamlobjinfo
ln -s ../_install/bin/dumpobj.byte _runtest/tools/dumpobj
rm _runtest/ocamldoc
mkdir _runtest/ocamldoc
ln -s ../../_install/bin/ocamldoc.byte _runtest/ocamldoc/ocamldoc
cp _build/main/./ocamldoc/.odoc_lib.objs/byte/*.cm* _runtest/ocamldoc
# ocamltest itself
mkdir _runtest/ocamltest
cp _build/default/ocamltest/ocamltest.native _runtest/ocamltest/ocamltest
if [ "flambda2" = "flambda2" ]; then \
  for dir in `cd testsuite; ls -1 -d tests/*`; do \
    if ! grep -q "^  $dir " flambda-backend/testsuite/flambda2-test-list; then \
      echo "  $dir"; \
    fi; \
  done > _runtest/flambda2-test-list; \
fi
(export OCAMLSRCDIR=$(pwd)/_runtest; \
 export CAML_LD_LIBRARY_PATH=$(pwd)/_runtest/lib/ocaml/stublibs; \
 if $(which gfortran > /dev/null 2>&1); then \
   export LIBRARY_PATH=$(dirname $(gfortran -print-file-name=libgfortran.a)); \
 fi; \
 cd _runtest/testsuite \
  && if $(which parallel > /dev/null 2>&1); \
             then \
       echo "Running testsuite in parallel (nproc=$(nproc))"; \
               if [ "flambda2" = "flambda2" ]; then \
                 make --no-print-directory list-parallel FILE=$(pwd)/../flambda2-test-list; \
       else \
                 make --no-print-directory parallel; \
               fi \
             else \
       echo "Running testsuite sequentially"; \
               if [ "flambda2" = "flambda2" ]; then \
                 make --no-print-directory list FILE=$(pwd)/../flambda2-test-list; \
       else \
                 make --no-print-directory all; \
               fi \
             fi)
Running testsuite in parallel (nproc=64)
Running tests from 'tests/afl-instrumentation' ...
 ... testing 'afl-fuzz-test.ml' with line 3 (skip) => skipped (Broken, ask mshinwell if you want to try to fix it)
 ... testing 'afl-showmap-test.ml' with line 2 (native-compiler) => predicate "native compiler available" is satisfied
 ... testing 'afl-showmap-test.ml' with line 5 (script) => passed
 ... testing 'afl-showmap-test.ml' with line 6 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'afl-showmap-test.ml' with line 9 (ocamlopt.byte) => passed
 ... testing 'afl-showmap-test.ml' with line 14 (ocamlopt.byte) => passed
 ... testing 'afl-showmap-test.ml' with line 15 (run) => passed
Running tests from 'tests/arch-power' ...
 ... testing 'exn_raise.ml' with line 2 (arch_power) => predicate "Target is POWER architecture" is not satisfied
Running tests from 'tests/array-functions' ...
 ... testing 'test.ml' with default (native) => passed
 ... testing 'test.ml' with default (bytecode) => passed
 ... testing 'test_iarray.ml' with default (native) => passed
 ... testing 'test_iarray.ml' with default (bytecode) => passed
Running tests from 'tests/asmcomp' ...
 ... testing 'poll_attr_both.ml' with line 25 (poll-insertion) => predicate "Poll insertion enabled" is not satisfied
 ... testing 'poll_attr_inserted.ml' with line 2 (poll-insertion) => predicate "Poll insertion enabled" is not satisfied
 ... testing 'poll_attr_prologue.ml' with line 20 (poll-insertion) => predicate "Poll insertion enabled" is not satisfied
 ... testing 'poll_attr_user.ml' with line 25 (poll-insertion) => predicate "Poll insertion enabled" is not satisfied
Running tests from 'tests/asmgen' ...
 ... testing 'arith.cmm' with line 4 (asmgen) => passed
 ... testing 'catch-float.cmm' with line 4 (asmgen) => passed
 ... testing 'catch-multiple.cmm' with line 4 (asmgen) => passed
 ... testing 'catch-rec-deadhandler.cmm' with line 5 (asmgen) => passed
 ... testing 'catch-rec-deadhandler.cmm' with line 6 (run) => passed
 ... testing 'catch-rec-deadhandler.cmm' with line 7 (check-program-output) => passed
 ... testing 'catch-rec.cmm' with line 4 (asmgen) => passed
 ... testing 'catch-try-float.cmm' with line 4 (asmgen) => passed
 ... testing 'catch-try.cmm' with line 4 (asmgen) => passed
 ... testing 'even-odd-spill-float.cmm' with line 4 (asmgen) => passed
 ... testing 'even-odd-spill.cmm' with line 4 (asmgen) => passed
 ... testing 'even-odd.cmm' with line 4 (asmgen) => passed
 ... testing 'fib.cmm' with line 4 (asmgen) => passed
 ... testing 'immediates.cmm' with line 4 (asmgen) => passed
 ... testing 'integr.cmm' with line 5 (skip) => skipped (This test is currently broken)
 ... testing 'pgcd.cmm' with line 4 (asmgen) => passed
 ... testing 'quicksort.cmm' with line 4 (asmgen) => passed
 ... testing 'quicksort2.cmm' with line 4 (asmgen) => passed
 ... testing 'soli.cmm' with line 4 (asmgen) => passed
 ... testing 'tagged-fib.cmm' with line 4 (asmgen) => passed
 ... testing 'tagged-integr.cmm' with line 4 (asmgen) => passed
 ... testing 'tagged-quicksort.cmm' with line 4 (asmgen) => passed
 ... testing 'tagged-tak.cmm' with line 4 (asmgen) => passed
 ... testing 'tak.cmm' with line 4 (asmgen) => passed
Running tests from 'tests/ast-invariants' ...
 ... testing 'test.ml' with line 5 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'test.ml' with line 6 (native) => passed
Running tests from 'tests/async-exns' ...
 ... testing 'async_exns_1.ml' with default (native) => passed
 ... testing 'async_exns_1.ml' with default (bytecode) => passed
Running tests from 'tests/backtrace' ...
 ... testing 'backtrace.ml' with default (native) => passed
 ... testing 'backtrace.ml' with default (bytecode) => passed
 ... testing 'backtrace2.ml' with line 86 (skip) => skipped (Backtraces are broken by the use of reraise)
 ... testing 'backtrace3.ml' with default (native) => passed
 ... testing 'backtrace3.ml' with default (bytecode) => passed
 ... testing 'backtrace_bounds_exn.ml' with default (native) => passed
 ... testing 'backtrace_bounds_exn.ml' with default (bytecode) => passed
 ... testing 'backtrace_c_exn.ml' with line 39 (runtime4) => predicate "4.x runtime being used" is satisfied
 ... testing 'backtrace_c_exn.ml' with line 42 (bytecode) => passed
 ... testing 'backtrace_c_exn.ml' with line 45 (native) => passed
 ... testing 'backtrace_c_exn.ml' with line 48 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'backtrace_deprecated.ml' with default (native) => passed
 ... testing 'backtrace_deprecated.ml' with default (bytecode) => passed
 ... testing 'backtrace_dynlink.ml' with line 58 (shared-libraries) => predicate "Shared libraries are supported." is satisfied
 ... testing 'backtrace_dynlink.ml' with line 59 (native-dynlink) => predicate "native dynlink support available" is satisfied
 ... testing 'backtrace_dynlink.ml' with line 60 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'backtrace_dynlink.ml' with line 64 (ocamlopt.byte) => passed
 ... testing 'backtrace_dynlink.ml' with line 69 (ocamlopt.byte) => passed
 ... testing 'backtrace_dynlink.ml' with line 74 (ocamlopt.byte) => passed
 ... testing 'backtrace_dynlink.ml' with line 76 (run) => passed
 ... testing 'backtrace_dynlink.ml' with line 77 (check-program-output) => passed
 ... testing 'backtrace_effects.ml' with line 49 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'backtrace_effects_nested.ml' with line 53 (skip) => skipped (CR ocaml 5 effects: re-enable this test)
 ... testing 'backtrace_or_exception.ml' with line 59 (bytecode) => passed
 ... testing 'backtrace_or_exception.ml' with line 62 (native) => passed
 ... testing 'backtrace_slots.ml' with default (native) => passed
 ... testing 'backtrace_slots.ml' with default (bytecode) => passed
 ... testing 'backtrace_systhreads.ml' with line 46 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'backtrace_systhreads.ml' with line 48 (bytecode) => passed
 ... testing 'backtrace_systhreads.ml' with line 50 (native) => passed
 ... testing 'backtraces_and_finalizers.ml' with line 4 (native) => passed
 ... testing 'callstack.ml' with line 36 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'callstack.ml' with line 37 (no-flambda) => predicate "support for flambda disabled" is not satisfied
 ... testing 'event_after_prim.ml' with default (native) => passed
 ... testing 'event_after_prim.ml' with default (bytecode) => passed
 ... testing 'inline_test.ml' with line 35 (bytecode) => passed
 ... testing 'inline_test.ml' with line 37 (native) => passed
 ... testing 'inline_test.ml' with line 41 (native) => passed
 ... testing 'inline_test.ml' with line 45 (native) => passed
 ... testing 'inline_traversal_test.ml' with line 63 (bytecode) => passed
 ... testing 'inline_traversal_test.ml' with line 65 (native) => passed
 ... testing 'inline_traversal_test.ml' with line 69 (native) => passed
 ... testing 'inline_traversal_test.ml' with line 73 (native) => passed
 ... testing 'lazy.ml' with line 29 (no-flambda) => predicate "support for flambda disabled" is not satisfied
 ... testing 'lazy.ml' with line 33 (flambda) => predicate "support for flambda enabled" is satisfied
 ... testing 'lazy.ml' with line 34 (native) => passed
 ... testing 'methods.ml' with default (native) => passed
 ... testing 'methods.ml' with default (bytecode) => passed
 ... testing 'names.ml' with default (native) => passed
 ... testing 'names.ml' with default (bytecode) => passed
 ... testing 'names_partial_application.ml' with line 31 (bytecode) => passed
 ... testing 'names_partial_application.ml' with line 34 (native) => passed
 ... testing 'pr2195.ml' with line 34 (no-tsan) => predicate "tsan not available" is satisfied
 ... testing 'pr2195.ml' with line 38 (bytecode) => passed
 ... testing 'pr2195.ml' with line 42 (bytecode) => passed
 ... testing 'pr2195.ml' with line 46 (bytecode) => passed
 ... testing 'pr2195.ml' with line 50 (native) => passed
 ... testing 'pr6920_why_at.ml' with default (native) => passed
 ... testing 'pr6920_why_at.ml' with default (bytecode) => passed
 ... testing 'pr6920_why_swallow.ml' with default (native) => passed
 ... testing 'pr6920_why_swallow.ml' with default (bytecode) => passed
 ... testing 'print_location.ml' with line 2 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'raw_backtrace.ml' with default (native) => passed
 ... testing 'raw_backtrace.ml' with default (bytecode) => passed
Running tests from 'tests/backtrace-multifiles' ...
 ... testing 'main.ml' with line 26 (setup-ocamlopt.opt-build-env) => passed
 ... testing 'main.ml' with line 29 (ocamlopt.opt) => passed
 ... testing 'main.ml' with line 32 (ocamlopt.opt) => passed
 ... testing 'main.ml' with line 35 (ocamlopt.opt) => passed
 ... testing 'main.ml' with line 36 (run) => passed
 ... testing 'main.ml' with line 37 (check-program-output) => passed
 ... testing 'main.ml' with line 40 (setup-ocamlopt.opt-build-env) => passed
 ... testing 'main.ml' with line 43 (ocamlopt.opt) => passed
 ... testing 'main.ml' with line 46 (ocamlopt.opt) => passed
 ... testing 'main.ml' with line 49 (ocamlopt.opt) => passed
 ... testing 'main.ml' with line 50 (run) => passed
 ... testing 'main.ml' with line 51 (check-program-output) => passed
 ... testing 'main.ml' with line 54 (setup-ocamlopt.opt-build-env) => passed
 ... testing 'main.ml' with line 57 (ocamlopt.opt) => passed
 ... testing 'main.ml' with line 60 (ocamlopt.opt) => passed
 ... testing 'main.ml' with line 63 (ocamlopt.opt) => passed
 ... testing 'main.ml' with line 64 (run) => passed
 ... testing 'main.ml' with line 65 (check-program-output) => passed
 ... testing 'main.ml' with line 68 (setup-ocamlopt.opt-build-env) => passed
 ... testing 'main.ml' with line 71 (ocamlopt.opt) => passed
 ... testing 'main.ml' with line 74 (ocamlopt.opt) => passed
 ... testing 'main.ml' with line 77 (ocamlopt.opt) => passed
 ... testing 'main.ml' with line 78 (run) => passed
 ... testing 'main.ml' with line 79 (check-program-output) => passed
Running tests from 'tests/badly-ordered-deps' ...
 ... testing 'main.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'main.ml' with line 6 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 8 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 12 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 13 (check-ocamlc.byte-output) => passed
Running tests from 'tests/basic' ...
 ... testing 'arrays.ml' with default (native) => passed
 ... testing 'arrays.ml' with default (bytecode) => passed
 ... testing 'bigints.ml' with default (native) => passed
 ... testing 'bigints.ml' with default (bytecode) => passed
 ... testing 'boxedints.ml' with default (native) => passed
 ... testing 'boxedints.ml' with default (bytecode) => passed
 ... testing 'combine_checkbound.ml' with line 2 (native) => passed
 ... testing 'constprop.ml.c' with line 6 (bytecode) => passed
 ... testing 'constprop.ml.c' with line 8 (native) => passed
 ... testing 'divint.ml' with default (native) => passed
 ... testing 'divint.ml' with default (bytecode) => passed
 ... testing 'equality.ml' with default (native) => passed
 ... testing 'equality.ml' with default (bytecode) => passed
 ... testing 'eval_order_1.ml' with default (native) => passed
 ... testing 'eval_order_1.ml' with default (bytecode) => passed
 ... testing 'eval_order_2.ml' with default (native) => passed
 ... testing 'eval_order_2.ml' with default (bytecode) => passed
 ... testing 'eval_order_3.ml' with default (native) => passed
 ... testing 'eval_order_3.ml' with default (bytecode) => passed
 ... testing 'eval_order_4.ml' with default (native) => passed
 ... testing 'eval_order_4.ml' with default (bytecode) => passed
 ... testing 'eval_order_6.ml' with default (native) => passed
 ... testing 'eval_order_6.ml' with default (bytecode) => passed
 ... testing 'eval_order_7.ml' with default (native) => passed
 ... testing 'eval_order_7.ml' with default (bytecode) => passed
 ... testing 'eval_order_8.ml' with default (native) => passed
 ... testing 'eval_order_8.ml' with default (bytecode) => passed
 ... testing 'eval_order_pr10283.ml' with default (native) => passed
 ... testing 'eval_order_pr10283.ml' with default (bytecode) => passed
 ... testing 'float.ml' with default (native) => passed
 ... testing 'float.ml' with default (bytecode) => passed
 ... testing 'float_physical_equality.ml' with default (native) => passed
 ... testing 'float_physical_equality.ml' with default (bytecode) => passed
 ... testing 'includestruct.ml' with default (native) => passed
 ... testing 'includestruct.ml' with default (bytecode) => passed
 ... testing 'localexn.ml' with default (native) => passed
 ... testing 'localexn.ml' with default (bytecode) => passed
 ... testing 'localfunction.ml' with default (native) => passed
 ... testing 'localfunction.ml' with default (bytecode) => passed
 ... testing 'lsr_mod.ml' with default (native) => passed
 ... testing 'lsr_mod.ml' with default (bytecode) => passed
 ... testing 'maps.ml' with default (native) => passed
 ... testing 'maps.ml' with default (bytecode) => passed
 ... testing 'min_int.ml' with default (native) => passed
 ... testing 'min_int.ml' with default (bytecode) => passed
 ... testing 'objects.ml' with default (native) => passed
 ... testing 'objects.ml' with default (bytecode) => passed
 ... testing 'opt_variants.ml' with default (native) => passed
 ... testing 'opt_variants.ml' with default (bytecode) => passed
 ... testing 'patmatch.ml' with default (native) => passed
 ... testing 'patmatch.ml' with default (bytecode) => passed
 ... testing 'patmatch_for_multiple.ml' with line 3 (expect) => passed
 ... testing 'patmatch_incoherence.ml' with line 2 (expect) => passed
 ... testing 'patmatch_split_no_or.ml' with line 3 (expect) => passed
 ... testing 'pr7253.ml' with default (native) => passed
 ... testing 'pr7253.ml' with default (bytecode) => passed
 ... testing 'pr7533.ml' with default (native) => passed
 ... testing 'pr7533.ml' with default (bytecode) => passed
 ... testing 'pr7657.ml' with default (native) => passed
 ... testing 'pr7657.ml' with default (bytecode) => passed
 ... testing 'recvalues.ml' with default (native) => passed
 ... testing 'recvalues.ml' with default (bytecode) => passed
 ... testing 'sequand_sequor_tailrec.ml' with default (native) => passed
 ... testing 'sequand_sequor_tailrec.ml' with default (bytecode) => passed
 ... testing 'sets.ml' with default (native) => passed
 ... testing 'sets.ml' with default (bytecode) => passed
 ... testing 'stringmatch.ml' with default (native) => passed
 ... testing 'stringmatch.ml' with default (bytecode) => passed
 ... testing 'switch_opts.ml' with default (native) => passed
 ... testing 'switch_opts.ml' with default (bytecode) => passed
 ... testing 'tailcalls.ml' with default (native) => passed
 ... testing 'tailcalls.ml' with default (bytecode) => passed
 ... testing 'trigraph.ml' with default (native) => passed
 ... testing 'trigraph.ml' with default (bytecode) => passed
 ... testing 'tuple_match.ml' with default (native) => passed
 ... testing 'tuple_match.ml' with default (bytecode) => passed
 ... testing 'unit_naming.ml' with line 13 (setup-ocamlc.byte-build-env) => passed
 ... testing 'unit_naming.ml' with line 15 (ocamlc.byte) => passed
 ... testing 'unit_naming.ml' with line 16 (check-ocamlc.byte-output) => passed
 ... testing 'zero_divided_by_n.ml' with default (native) => passed
 ... testing 'zero_divided_by_n.ml' with default (bytecode) => passed
Running tests from 'tests/basic-float' ...
 ... testing 'float_compare.ml' with default (native) => passed
 ... testing 'float_compare.ml' with default (bytecode) => passed
 ... testing 'float_literals.ml' with default (native) => passed
 ... testing 'float_literals.ml' with default (bytecode) => passed
 ... testing 'tfloat_hex.ml' with default (native) => passed
 ... testing 'tfloat_hex.ml' with default (bytecode) => passed
 ... testing 'tfloat_record.ml' with default (native) => passed
 ... testing 'tfloat_record.ml' with default (bytecode) => passed
 ... testing 'zero_sized_float_arrays.ml' with default (native) => passed
 ... testing 'zero_sized_float_arrays.ml' with default (bytecode) => passed
Running tests from 'tests/basic-io' ...
 ... testing 'wc.ml' with default (native) => passed
 ... testing 'wc.ml' with default (bytecode) => passed
Running tests from 'tests/basic-io-2' ...
 ... testing 'io.ml' with default (native) => passed
 ... testing 'io.ml' with default (bytecode) => passed
Running tests from 'tests/basic-manyargs' ...
 ... testing 'manyargs.ml' with default (native) => passed
 ... testing 'manyargs.ml' with default (bytecode) => passed
Running tests from 'tests/basic-modules' ...
 ... testing 'anonymous.ml' with line 60 (setup-ocamlc.byte-build-env) => passed
 ... testing 'anonymous.ml' with line 61 (ocamlc.byte) => passed
 ... testing 'anonymous.ml' with line 63 (check-ocamlc.byte-output) => passed
 ... testing 'anonymous.ml' with line 65 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'anonymous.ml' with line 66 (ocamlopt.byte) => passed
 ... testing 'anonymous.ml' with line 68 (no-flambda) => predicate "support for flambda disabled" is not satisfied
 ... testing 'anonymous.ml' with line 72 (flambda) => predicate "support for flambda enabled" is satisfied
 ... testing 'anonymous.ml' with line 74 (check-ocamlc.byte-output) => passed
 ... testing 'main.ml' with default (native) => passed
 ... testing 'main.ml' with default (bytecode) => passed
 ... testing 'pr11186.ml' with default (native) => passed
 ... testing 'pr11186.ml' with default (bytecode) => passed
 ... testing 'recursive_module_evaluation_errors.ml' with line 2 (expect) => passed
 ... testing 'recursive_module_init.ml' with default (native) => passed
 ... testing 'recursive_module_init.ml' with default (bytecode) => passed
Running tests from 'tests/basic-more' ...
 ... testing 'bounds.ml' with default (native) => passed
 ... testing 'bounds.ml' with default (bytecode) => passed
 ... testing 'div_by_zero.ml' with default (native) => passed
 ... testing 'div_by_zero.ml' with default (bytecode) => passed
 ... testing 'function_in_ref.ml' with default (native) => passed
 ... testing 'function_in_ref.ml' with default (bytecode) => passed
 ... testing 'if_in_if.ml' with default (native) => passed
 ... testing 'if_in_if.ml' with default (bytecode) => passed
 ... testing 'labels_evaluation_order.ml' with default (native) => passed
 ... testing 'labels_evaluation_order.ml' with default (bytecode) => passed
 ... testing 'morematch.ml' with default (native) => passed
 ... testing 'morematch.ml' with default (bytecode) => passed
 ... testing 'opaque_prim.ml' with default (native) => passed
 ... testing 'opaque_prim.ml' with default (bytecode) => passed
 ... testing 'pr10294.ml' with default (native) => passed
 ... testing 'pr10294.ml' with default (bytecode) => passed
 ... testing 'pr10338.ml' with default (native) => passed
 ... testing 'pr10338.ml' with default (bytecode) => passed
 ... testing 'pr1271.ml' with default (native) => passed
 ... testing 'pr1271.ml' with default (bytecode) => passed
 ... testing 'pr2719.ml' with default (native) => passed
 ... testing 'pr2719.ml' with default (bytecode) => passed
 ... testing 'pr6216.ml' with default (native) => passed
 ... testing 'pr6216.ml' with default (bytecode) => passed
 ... testing 'pr7683.ml' with default (native) => passed
 ... testing 'pr7683.ml' with default (bytecode) => passed
 ... testing 'record_evaluation_order.ml' with default (native) => passed
 ... testing 'record_evaluation_order.ml' with default (bytecode) => passed
 ... testing 'robustmatch.ml' with default (native) => passed
 ... testing 'robustmatch.ml' with default (bytecode) => passed
 ... testing 'safer_matching.ml' with default (native) => passed
 ... testing 'safer_matching.ml' with default (bytecode) => passed
 ... testing 'sequential_and_or.ml' with default (native) => passed
 ... testing 'sequential_and_or.ml' with default (bytecode) => passed
 ... testing 'structural_constants.ml' with default (native) => passed
 ... testing 'structural_constants.ml' with default (bytecode) => passed
 ... testing 'tailannots.ml' with line 2 (expect) => passed
 ... testing 'tbuffer.ml' with default (native) => passed
 ... testing 'tbuffer.ml' with default (bytecode) => passed
 ... testing 'top_level_patterns.ml' with default (native) => passed
 ... testing 'top_level_patterns.ml' with default (bytecode) => passed
 ... testing 'tprintf.ml' with default (native) => passed
 ... testing 'tprintf.ml' with default (bytecode) => passed
Running tests from 'tests/basic-multdef' ...
 ... testing 'usemultdef.ml' with default (native) => passed
 ... testing 'usemultdef.ml' with default (bytecode) => passed
Running tests from 'tests/basic-private' ...
 ... testing 'tlength.ml' with default (native) => passed
 ... testing 'tlength.ml' with default (bytecode) => passed
Running tests from 'tests/callback' ...
 ... testing 'callback_effects_gc.ml' with line 4 (skip) => skipped (CR ocaml 5 effects: re-enable this test)
 ... testing 'minor_named.ml' with default (native) => passed
 ... testing 'minor_named.ml' with default (bytecode) => passed
 ... testing 'nested_fiber.ml' with line 4 (skip) => skipped (CR ocaml 5 effects: re-enable this test)
 ... testing 'signals_alloc.ml' with line 4 (libunix) => predicate "libunix available" is satisfied
 ... testing 'signals_alloc.ml' with line 6 (bytecode) => passed
 ... testing 'signals_alloc.ml' with line 8 (native) => passed
 ... testing 'stack_overflow.ml' with line 4 (skip) => skipped (CR ocaml 5 effects: re-enable this test)
 ... testing 'test1.ml' with default (native) => passed
 ... testing 'test1.ml' with default (bytecode) => passed
 ... testing 'test2.ml' with default (native) => passed
 ... testing 'test2.ml' with default (bytecode) => passed
 ... testing 'test3.ml' with line 3 (no-tsan) => predicate "tsan not available" is satisfied
 ... testing 'test3.ml' with line 5 (bytecode) => passed
 ... testing 'test3.ml' with line 7 (native) => passed
 ... testing 'test4.ml' with default (native) => passed
 ... testing 'test4.ml' with default (bytecode) => passed
 ... testing 'test5.ml' with default (native) => passed
 ... testing 'test5.ml' with default (bytecode) => passed
 ... testing 'test6.ml' with default (native) => passed
 ... testing 'test6.ml' with default (bytecode) => passed
 ... testing 'test7.ml' with line 4 (skip) => skipped (CR ocaml 5 effects: re-enable this test)
 ... testing 'test_finaliser_gc.ml' with default (native) => passed
 ... testing 'test_finaliser_gc.ml' with default (bytecode) => passed
 ... testing 'test_signalhandler.ml' with line 4 (libunix) => predicate "libunix available" is satisfied
 ... testing 'test_signalhandler.ml' with line 6 (bytecode) => passed
 ... testing 'test_signalhandler.ml' with line 8 (native) => passed
Running tests from 'tests/c-api' ...
 ... testing 'aligned_alloc.ml' with line 4 (runtime4) => predicate "4.x runtime being used" is satisfied
 ... testing 'aligned_alloc.ml' with line 5 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'aligned_alloc.ml' with line 7 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'alloc_async.ml' with default (native) => passed
 ... testing 'alloc_async.ml' with default (bytecode) => passed
 ... testing 'external.ml' with line 4 (native) => passed
 ... testing 'test_c_thread_has_lock.ml' with line 3 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'test_c_thread_has_lock_systhread.ml' with line 3 (runtime5) => predicate "5.x runtime being used" is not satisfied
Running tests from 'tests/capsule-api' ...
 ... testing 'basics.ml' with line 4 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'data.ml' with line 4 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'poisoning.ml' with line 4 (runtime5) => predicate "5.x runtime being used" is not satisfied
Running tests from 'tests/compaction' ...
 ... testing 'test_compact_full.ml' with default (native) => passed
 ... testing 'test_compact_full.ml' with default (bytecode) => passed
 ... testing 'test_freelist_free.ml' with default (native) => passed
 ... testing 'test_freelist_free.ml' with default (bytecode) => passed
Running tests from 'tests/compiler-libs' ...
 ... testing 'test_longident.ml' with line 4 (expect) => passed
 ... testing 'test_runtimetags.ml' with line 4 (expect) => passed
 ... testing 'test_untypeast.ml' with line 4 (expect) => passed
Running tests from 'tests/comprehensions' ...
 ... testing 'array_comprehensions_pure.ml' with line 3 (expect) => passed
 ... testing 'array_comprehensions_side_effects.ml' with default (native) => passed
 ... testing 'array_comprehensions_side_effects.ml' with default (bytecode) => passed
 ... testing 'array_comprehensions_special.ml' with line 3 (expect) => passed
 ... testing 'comprehensions_from_quickcheck.ml' with line 3 (expect) => passed
 ... testing 'iarray_comprehensions_pure.ml' with line 4 (expect) => passed
 ... testing 'iarray_comprehensions_side_effects.ml' with default (native) => passed
 ... testing 'iarray_comprehensions_side_effects.ml' with default (bytecode) => passed
 ... testing 'iarray_comprehensions_special.ml' with line 3 (expect) => passed
 ... testing 'list_comprehensions_pure.ml' with line 3 (expect) => passed
 ... testing 'list_comprehensions_side_effects.ml' with default (native) => passed
 ... testing 'list_comprehensions_side_effects.ml' with default (bytecode) => passed
 ... testing 'syntax.ml' with default (native) => passed
 ... testing 'syntax.ml' with default (bytecode) => passed
Running tests from 'tests/effects' ...
 ... testing 'backtrace.ml' with line 61 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'cmphash.ml' with line 2 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'evenodd.ml' with line 2 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'issue479.ml' with line 2 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'manylive.ml' with line 2 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'marshal.ml' with line 3 (skip) => skipped (CR ocaml 5 effects: re-enable this test)
 ... testing 'overflow.ml' with line 2 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'partial.ml' with line 2 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'reperform.ml' with line 2 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'sched.ml' with line 2 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'shallow_state.ml' with line 2 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'shallow_state_io.ml' with line 2 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'test1.ml' with line 2 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'test10.ml' with line 2 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'test11.ml' with line 2 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'test2.ml' with line 2 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'test3.ml' with line 2 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'test4.ml' with line 2 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'test5.ml' with line 2 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'test6.ml' with line 2 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'test_lazy.ml' with line 2 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'unhandled_effects.ml' with line 3 (skip) => skipped (CR ocaml 5 effects: re-enable this test)
 ... testing 'unhandled_unlinked.ml' with line 4 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'unhandled_unlinked.ml' with line 6 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'used_cont.ml' with line 2 (skip) => skipped (explicit 'skip' in the test)
Running tests from 'tests/embedded' ...
 ... testing 'cmcaml.ml' with default (native) => passed
 ... testing 'cmcaml.ml' with default (bytecode) => passed
Running tests from 'tests/ephe-c-api' ...
 ... testing 'test.ml' with line 4 (skip) => skipped (port the new Ephemeron C-api to multicore : https://github.com/ocaml/ocaml/pull/676)
Running tests from 'tests/exotic-syntax' ...
 ... testing 'exotic.ml' with default (native) => passed
 ... testing 'exotic.ml' with default (bytecode) => passed
Running tests from 'tests/extension-constructor' ...
 ... testing 'test.ml' with default (native) => passed
 ... testing 'test.ml' with default (bytecode) => passed
Running tests from 'tests/flambda' ...
 ... testing 'afl_lazy.ml' with line 2 (flambda) => predicate "support for flambda enabled" is satisfied
 ... testing 'afl_lazy.ml' with line 4 (native) => passed
 ... testing 'alias_in_join.ml' with line 2 (native) => passed
 ... testing 'approx_meet.ml' with default (native) => passed
 ... testing 'approx_meet.ml' with default (bytecode) => passed
 ... testing 'flambda2_row_like_join.ml' with default (native) => passed
 ... testing 'flambda2_row_like_join.ml' with default (bytecode) => passed
 ... testing 'gpr2239.ml' with default (native) => passed
 ... testing 'gpr2239.ml' with default (bytecode) => passed
 ... testing 'gpr998.ml' with default (native) => passed
 ... testing 'gpr998.ml' with default (bytecode) => passed
 ... testing 'is_int_string.ml' with line 3 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'is_int_string.ml' with line 4 (native) => passed
 ... testing 'specialise.ml' with line 2 (flambda) => predicate "support for flambda enabled" is satisfied
 ... testing 'specialise.ml' with line 4 (native) => passed
 ... testing 'unboxing_finds_invalid1.ml' with default (native) => passed
 ... testing 'unboxing_finds_invalid1.ml' with default (bytecode) => passed
 ... testing 'unboxing_finds_invalid2.ml' with default (native) => passed
 ... testing 'unboxing_finds_invalid2.ml' with default (bytecode) => passed
Running tests from 'tests/float-unboxing' ...
 ... testing 'float_subst_boxed_number.ml' with line 6 (native) => passed
 ... testing 'unbox_under_assign.ml' with default (native) => passed
 ... testing 'unbox_under_assign.ml' with default (bytecode) => passed
Running tests from 'tests/fma' ...
 ... testing 'fma.ml' with default (native) => passed
 ... testing 'fma.ml' with default (bytecode) => passed
Running tests from 'tests/formats-transition' ...
 ... testing 'deprecated_unsigned_printers.ml' with line 2 (toplevel) => passed
 ... testing 'ignored_scan_counters.ml' with line 2 (toplevel) => passed
 ... testing 'legacy_incompatible_flags.ml' with line 3 (toplevel) => passed
 ... testing 'legacy_unfinished_modifiers.ml' with line 3 (toplevel) => passed
Running tests from 'tests/formatting' ...
 ... testing 'errors_batch.ml' with default (native) => passed
 ... testing 'errors_batch.ml' with default (bytecode) => passed
 ... testing 'margins.ml' with line 2 (toplevel) => passed
 ... testing 'test_locations.ml' with line 25 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test_locations.ml' with line 27 (ocamlc.byte) => passed
 ... testing 'test_locations.ml' with line 29 (check-ocamlc.byte-output) => passed
 ... testing 'test_locations.ml' with line 31 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test_locations.ml' with line 33 (ocamlc.byte) => passed
 ... testing 'test_locations.ml' with line 35 (check-ocamlc.byte-output) => passed
Running tests from 'tests/frame-pointers' ...
 ... testing 'c_call.ml' with line 2 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'effects.ml' with line 3 (runtime4) => predicate "4.x runtime being used" is satisfied
 ... testing 'effects.ml' with line 4 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'effects.ml' with line 7 (skip) => skipped (CR ocaml 5 effects: re-enable this test)
 ... testing 'exception_handler.ml' with line 2 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'reperform.ml' with line 3 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'reperform.ml' with line 6 (skip) => skipped (CR ocaml 5 effects: re-enable this test)
 ... testing 'stack_realloc.ml' with line 3 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'stack_realloc.ml' with line 6 (skip) => skipped (CR ocaml 5 effects: re-enable this test)
 ... testing 'stack_realloc2.ml' with line 3 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'stack_realloc2.ml' with line 6 (skip) => skipped (CR ocaml 5 effects: re-enable this test)
Running tests from 'tests/functors' ...
 ... testing 'functors.ml' with line 2 (setup-ocamlc.byte-build-env) => passed
 ... testing 'functors.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'functors.ml' with line 5 (check-ocamlc.byte-output) => passed
Running tests from 'tests/gc-roots' ...
 ... testing 'globroots.ml' with default (native) => passed
 ... testing 'globroots.ml' with default (bytecode) => passed
 ... testing 'globroots_parallel.ml' with line 5 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'globroots_parallel_spawn_burn.ml' with line 5 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'globroots_sequential.ml' with default (native) => passed
 ... testing 'globroots_sequential.ml' with default (bytecode) => passed
Running tests from 'tests/generalized-open' ...
 ... testing 'accepted_batch.ml' with default (native) => passed
 ... testing 'accepted_batch.ml' with default (bytecode) => passed
 ... testing 'accepted_expect.ml' with line 2 (expect) => passed
 ... testing 'clambda_optim.ml' with line 3 (no-flambda) => predicate "support for flambda disabled" is not satisfied
 ... testing 'expansiveness.ml' with line 2 (expect) => passed
 ... testing 'funct_body.ml' with line 50 (setup-ocamlc.byte-build-env) => passed
 ... testing 'funct_body.ml' with line 53 (ocamlc.byte) => passed
 ... testing 'funct_body.ml' with line 55 (check-ocamlc.byte-output) => passed
 ... testing 'gpr1506.ml' with line 2 (expect) => passed
 ... testing 'pr10048.ml' with line 2 (expect) => passed
 ... testing 'shadowing.ml' with line 2 (setup-ocamlc.byte-build-env) => passed
 ... testing 'shadowing.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'shadowing.ml' with line 7 (check-ocamlc.byte-output) => passed
Running tests from 'tests/generated-parse-errors' ...
 ... testing 'errors.ml' with line 2 (toplevel) => passed
Running tests from 'tests/hidden_includes' ...
 ... testing 'test.ml' with line 5 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 9 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 13 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 17 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 22 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 24 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 27 (check-ocamlc.byte-output) => passed
 ... testing 'test.ml' with line 33 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 35 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 37 (check-ocamlc.byte-output) => passed
 ... testing 'test.ml' with line 43 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 44 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 50 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 51 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 57 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 59 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 62 (check-ocamlc.byte-output) => passed
 ... testing 'test.ml' with line 69 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 70 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 75 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 76 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 79 (not-windows) => predicate "not running on Windows" is satisfied
 ... testing 'test.ml' with line 82 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 84 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 87 (check-ocamlc.byte-output) => passed
 ... testing 'test.ml' with line 90 (not-windows) => predicate "not running on Windows" is satisfied
 ... testing 'test.ml' with line 93 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 95 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 98 (check-ocamlc.byte-output) => passed
 ... testing 'test.ml' with line 103 (not-windows) => predicate "not running on Windows" is satisfied
 ... testing 'test.ml' with line 106 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 108 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 111 (check-ocamlc.byte-output) => passed
 ... testing 'test.ml' with line 116 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 117 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 124 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 126 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 129 (check-ocamlc.byte-output) => passed
 ... testing 'test.ml' with line 136 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 137 (ocamlc.byte) => passed
Running tests from 'tests/instrumented-runtime' ...
 ... testing 'main.ml' with line 2 (runtime4) => predicate "4.x runtime being used" is satisfied
 ... testing 'main.ml' with line 3 (instrumented-runtime) => predicate "instrumented runtime available" is satisfied
 ... testing 'main.ml' with line 5 (native) => passed
Running tests from 'tests/int64-unboxing' ...
 ... testing 'test.ml' with line 3 (native) => passed
Running tests from 'tests/jane-modular-syntax' ...
 ... testing 'attribute_locations.ml' with default (native) => passed
 ... testing 'attribute_locations.ml' with default (bytecode) => passed
 ... testing 'user_error1.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'user_error1.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'user_error1.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'user_error2.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'user_error2.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'user_error2.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'user_error3.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'user_error3.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'user_error3.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'user_error3_1.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'user_error3_1.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'user_error3_1.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'user_error3_2.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'user_error3_2.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'user_error3_2.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'user_error3_3.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'user_error3_3.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'user_error3_3.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'user_error4.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'user_error4.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'user_error4.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'user_error5.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'user_error5.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'user_error5.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'user_error6.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'user_error6.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'user_error6.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'user_error7_attributes.ml' with line 29 (setup-ocamlc.byte-build-env) => passed
 ... testing 'user_error7_attributes.ml' with line 31 (ocamlc.byte) => passed
 ... testing 'user_error7_attributes.ml' with line 32 (check-ocamlc.byte-output) => passed
 ... testing 'user_error7_extensions.ml' with line 2 (expect) => passed
Running tests from 'tests/language-extensions' ...
 ... testing 'language_extensions.ml' with default (native) => passed
 ... testing 'language_extensions.ml' with default (bytecode) => passed
 ... testing 'pprintast_unconditional.ml' with default (native) => passed
 ... testing 'pprintast_unconditional.ml' with default (bytecode) => passed
Running tests from 'tests/lazy' ...
 ... testing 'lazy1.ml' with default (native) => passed
 ... testing 'lazy1.ml' with default (bytecode) => passed
 ... testing 'lazy2.ml' with line 4 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'lazy3.ml' with line 4 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'lazy4.ml' with default (native) => passed
 ... testing 'lazy4.ml' with default (bytecode) => passed
 ... testing 'lazy5.ml' with line 4 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'lazy6.ml' with line 4 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'lazy7.ml' with line 4 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'lazy8.ml' with line 4 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'minor_major_force.ml' with line 3 (runtime5) => predicate "5.x runtime being used" is not satisfied
Running tests from 'tests/letrec-check' ...
 ... testing 'basic.ml' with line 2 (expect) => passed
 ... testing 'extension_constructor.ml' with line 2 (expect) => passed
 ... testing 'flat_float_array.ml' with line 2 (flat-float-array) => predicate "compiler configured with --enable-flat-float-array" is satisfied
 ... testing 'flat_float_array.ml' with line 3 (expect) => passed
 ... testing 'float_unboxing.ml' with line 2 (expect) => passed
 ... testing 'labels.ml' with line 2 (expect) => passed
 ... testing 'lazy_.ml' with line 2 (expect) => passed
 ... testing 'modules.ml' with line 2 (expect) => passed
 ... testing 'no_flat_float_array.ml' with line 2 (no-flat-float-array) => predicate "compiler configured with --disable-flat-float-array" is not satisfied
 ... testing 'objects.ml' with line 2 (expect) => passed
 ... testing 'partial_application.ml' with line 2 (expect) => passed
 ... testing 'pr7215.ml' with line 2 (toplevel) => passed
 ... testing 'pr7231.ml' with line 8 (toplevel) => passed
 ... testing 'pr7706.ml' with line 11 (toplevel) => passed
 ... testing 'records.ml' with line 2 (expect) => passed
 ... testing 'unboxed.ml' with line 2 (expect) => passed
Running tests from 'tests/letrec-compilation' ...
 ... testing 'backreferences.ml' with default (native) => passed
 ... testing 'backreferences.ml' with default (bytecode) => passed
 ... testing 'class_1.ml' with default (native) => passed
 ... testing 'class_1.ml' with default (bytecode) => passed
 ... testing 'class_2.ml' with default (native) => passed
 ... testing 'class_2.ml' with default (bytecode) => passed
 ... testing 'evaluation_order_1.ml' with default (native) => passed
 ... testing 'evaluation_order_1.ml' with default (bytecode) => passed
 ... testing 'evaluation_order_2.ml' with default (native) => passed
 ... testing 'evaluation_order_2.ml' with default (bytecode) => passed
 ... testing 'evaluation_order_3.ml' with default (native) => passed
 ... testing 'evaluation_order_3.ml' with default (bytecode) => passed
 ... testing 'float_block_1.ml' with default (native) => passed
 ... testing 'float_block_1.ml' with default (bytecode) => passed
 ... testing 'generic_array.ml' with default (native) => passed
 ... testing 'generic_array.ml' with default (bytecode) => passed
 ... testing 'labels.ml' with default (native) => passed
 ... testing 'labels.ml' with default (bytecode) => passed
 ... testing 'lazy_.ml' with default (native) => passed
 ... testing 'lazy_.ml' with default (bytecode) => passed
 ... testing 'lists.ml' with default (native) => passed
 ... testing 'lists.ml' with default (bytecode) => passed
 ... testing 'mixing_value_closures_1.ml' with default (native) => passed
 ... testing 'mixing_value_closures_1.ml' with default (bytecode) => passed
 ... testing 'mixing_value_closures_2.ml' with default (native) => passed
 ... testing 'mixing_value_closures_2.ml' with default (bytecode) => passed
 ... testing 'mutual_functions.ml' with default (native) => passed
 ... testing 'mutual_functions.ml' with default (bytecode) => passed
 ... testing 'nested.ml' with default (native) => passed
 ... testing 'nested.ml' with default (bytecode) => passed
 ... testing 'pr12153_miscompilation_of_recursive_atoms.ml' with default (native) => passed
 ... testing 'pr12153_miscompilation_of_recursive_atoms.ml' with default (bytecode) => passed
 ... testing 'pr4989.ml' with default (native) => passed
 ... testing 'pr4989.ml' with default (bytecode) => passed
 ... testing 'pr8681.ml' with default (native) => passed
 ... testing 'pr8681.ml' with default (bytecode) => passed
 ... testing 'record_with.ml' with default (native) => passed
 ... testing 'record_with.ml' with default (bytecode) => passed
 ... testing 'ref.ml' with default (native) => passed
 ... testing 'ref.ml' with default (bytecode) => passed
 ... testing 'region.ml' with default (native) => passed
 ... testing 'region.ml' with default (bytecode) => passed
 ... testing 'store_in_local.ml' with default (native) => passed
 ... testing 'store_in_local.ml' with default (bytecode) => passed
Running tests from 'tests/let-syntax' ...
 ... testing 'let_syntax.ml' with line 2 (expect) => passed
Running tests from 'tests/lexing' ...
 ... testing 'comments.ml' with line 2 (toplevel) => passed
 ... testing 'escape.ml' with line 14 (toplevel) => passed
 ... testing 'newlines.ml' with default (native) => passed
 ... testing 'newlines.ml' with default (bytecode) => passed
 ... testing 'uchar_esc.ml' with line 2 (toplevel) => passed
Running tests from 'tests/lf_skiplist' ...
 ... testing 'test.ml' with line 3 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'test_parallel.ml' with line 3 (no-tsan) => predicate "tsan not available" is satisfied
 ... testing 'test_parallel.ml' with line 5 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
Running tests from 'tests/lib-arg' ...
 ... testing 'test_rest_all.ml' with line 2 (expect) => passed
 ... testing 'testarg.ml' with default (native) => passed
 ... testing 'testarg.ml' with default (bytecode) => passed
 ... testing 'testerror.ml' with line 2 (native) => passed
Running tests from 'tests/lib-array' ...
 ... testing 'iarray_singleton.ml' with line 2 (native) => passed
 ... testing 'iarrays_with_variables.ml' with line 2 (expect) => passed
 ... testing 'test_array.ml' with line 2 (expect) => passed
 ... testing 'test_iarray.ml' with line 3 (expect) => passed
 ... testing 'test_iarray_typeopt.ml' with line 3 (expect) => passed
Running tests from 'tests/lib-atomic' ...
 ... testing 'test_atomic.ml' with default (native) => passed
 ... testing 'test_atomic.ml' with default (bytecode) => passed
Running tests from 'tests/lib-bigarray' ...
 ... testing 'bigarrays.ml' with default (native) => passed
 ... testing 'bigarrays.ml' with default (bytecode) => passed
 ... testing 'change_layout.ml' with default (native) => passed
 ... testing 'change_layout.ml' with default (bytecode) => passed
 ... testing 'fftba.ml' with default (native) => passed
 ... testing 'fftba.ml' with default (bytecode) => passed
 ... testing 'pr5115.ml' with default (native) => passed
 ... testing 'pr5115.ml' with default (bytecode) => passed
 ... testing 'specialized.ml' with default (native) => passed
 ... testing 'specialized.ml' with default (bytecode) => passed
 ... testing 'weak_bigarray.ml' with default (native) => passed
 ... testing 'weak_bigarray.ml' with default (bytecode) => passed
Running tests from 'tests/lib-bigarray-2' ...
 ... testing 'bigarrcml.ml' with default (native) => passed
 ... testing 'bigarrcml.ml' with default (bytecode) => passed
 ... testing 'bigarrfml.ml' with line 5 (script) => passed
 ... testing 'bigarrfml.ml' with line 7 (setup-ocamlc.byte-build-env) => passed
 ... testing 'bigarrfml.ml' with line 9 (script) => passed
 ... testing 'bigarrfml.ml' with line 11 (ocamlc.byte) => passed
 ... testing 'bigarrfml.ml' with line 14 (run) => passed
 ... testing 'bigarrfml.ml' with line 15 (check-program-output) => passed
 ... testing 'bigarrfml.ml' with line 17 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'bigarrfml.ml' with line 19 (script) => passed
 ... testing 'bigarrfml.ml' with line 21 (ocamlopt.byte) => passed
 ... testing 'bigarrfml.ml' with line 24 (run) => passed
 ... testing 'bigarrfml.ml' with line 25 (check-program-output) => passed
Running tests from 'tests/lib-bigarray-file' ...
 ... testing 'mapfile.ml' with line 3 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'mapfile.ml' with line 4 (native) => passed
Running tests from 'tests/lib-bool' ...
 ... testing 'test.ml' with default (native) => passed
 ... testing 'test.ml' with default (bytecode) => passed
Running tests from 'tests/lib-buffer' ...
 ... testing 'test.ml' with default (native) => passed
 ... testing 'test.ml' with default (bytecode) => passed
Running tests from 'tests/lib-bytes' ...
 ... testing 'binary.ml' with default (native) => passed
 ... testing 'binary.ml' with default (bytecode) => passed
 ... testing 'test_bytes.ml' with default (native) => passed
 ... testing 'test_bytes.ml' with default (bytecode) => passed
Running tests from 'tests/lib-bytes-utf' ...
 ... testing 'test.ml' with default (native) => passed
 ... testing 'test.ml' with default (bytecode) => passed
Running tests from 'tests/lib-channels' ...
 ... testing 'bigarrays.ml' with default (native) => passed
 ... testing 'bigarrays.ml' with default (bytecode) => passed
 ... testing 'buffered.ml' with default (native) => passed
 ... testing 'buffered.ml' with default (bytecode) => passed
 ... testing 'close_in.ml' with line 2 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'close_out.ml' with default (native) => passed
 ... testing 'close_out.ml' with default (bytecode) => passed
 ... testing 'in_channel_length.ml' with default (native) => passed
 ... testing 'in_channel_length.ml' with default (bytecode) => passed
 ... testing 'input_all.ml' with line 4 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'input_all.ml' with line 6 (bytecode) => passed
 ... testing 'input_all.ml' with line 8 (native) => passed
 ... testing 'input_lines.ml' with default (native) => passed
 ... testing 'input_lines.ml' with default (bytecode) => passed
 ... testing 'refcounting.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'seek_in.ml' with default (native) => passed
 ... testing 'seek_in.ml' with default (bytecode) => passed
Running tests from 'tests/lib-digest' ...
 ... testing 'blake2b_self_test.ml' with default (native) => passed
 ... testing 'blake2b_self_test.ml' with default (bytecode) => passed
 ... testing 'digests.ml' with default (native) => passed
 ... testing 'digests.ml' with default (bytecode) => passed
 ... testing 'md5.ml' with default (native) => passed
 ... testing 'md5.ml' with default (bytecode) => passed
Running tests from 'tests/lib-domain' ...
 ... testing 'DLS_thread_safety.ml' with line 3 (hassysthreads) => predicate "systhreads library available" is satisfied
Running tests from 'tests/lib-dynarray' ...
 ... testing 'heap_sort.ml' with default (native) => passed
 ... testing 'heap_sort.ml' with default (bytecode) => passed
 ... testing 'test.ml' with default (native) => passed
 ... testing 'test.ml' with default (bytecode) => passed
Running tests from 'tests/lib-dynlink-bytecode' ...
 ... testing 'main.ml' with line 5 (shared-libraries) => predicate "Shared libraries are supported." is satisfied
 ... testing 'main.ml' with line 6 (setup-ocamlc.byte-build-env) => passed
 ... testing 'main.ml' with line 9 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 12 (ocamlmklib) => passed
 ... testing 'main.ml' with line 15 (ocamlmklib) => passed
 ... testing 'main.ml' with line 18 (ocamlmklib) => passed
 ... testing 'main.ml' with line 22 (ocamlmklib) => passed
 ... testing 'main.ml' with line 26 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 29 (run) => passed
 ... testing 'main.ml' with line 30 (check-program-output) => passed
 ... testing 'main.ml' with line 35 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 37 (run) => passed
 ... testing 'main.ml' with line 39 (check-program-output) => passed
 ... testing 'main.ml' with line 45 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 47 (run) => passed
 ... testing 'main.ml' with line 49 (check-program-output) => passed
Running tests from 'tests/lib-dynlink-csharp' ...
 ... testing 'main.ml' with line 4 (csharp-compiler) => predicate "C# compiler available" is not satisfied
Running tests from 'tests/lib-dynlink-domains' ...
 ... testing 'main.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
Running tests from 'tests/lib-dynlink-initializers' ...
 ... testing 'test10_main.ml' with line 64 (shared-libraries) => predicate "Shared libraries are supported." is satisfied
 ... testing 'test10_main.ml' with line 66 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test10_main.ml' with line 69 (ocamlc.byte) => passed
 ... testing 'test10_main.ml' with line 72 (ocamlc.byte) => passed
 ... testing 'test10_main.ml' with line 77 (ocamlc.byte) => passed
 ... testing 'test10_main.ml' with line 78 (run) => passed
 ... testing 'test10_main.ml' with line 80 (check-program-output) => passed
 ... testing 'test10_main.ml' with line 83 (no-flambda) => predicate "support for flambda disabled" is not satisfied
 ... testing 'test1_main.ml' with line 5 (shared-libraries) => predicate "Shared libraries are supported." is satisfied
 ... testing 'test1_main.ml' with line 7 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test1_main.ml' with line 10 (ocamlc.byte) => passed
 ... testing 'test1_main.ml' with line 13 (ocamlc.byte) => passed
 ... testing 'test1_main.ml' with line 16 (ocamlc.byte) => passed
 ... testing 'test1_main.ml' with line 21 (ocamlc.byte) => passed
 ... testing 'test1_main.ml' with line 22 (run) => passed
 ... testing 'test1_main.ml' with line 25 (native-dynlink) => predicate "native dynlink support available" is satisfied
 ... testing 'test1_main.ml' with line 26 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'test1_main.ml' with line 29 (ocamlopt.byte) => passed
 ... testing 'test1_main.ml' with line 32 (ocamlopt.byte) => passed
 ... testing 'test1_main.ml' with line 37 (ocamlopt.byte) => passed
 ... testing 'test1_main.ml' with line 42 (ocamlopt.byte) => passed
 ... testing 'test1_main.ml' with line 43 (run) => passed
 ... testing 'test2_main.ml' with line 5 (shared-libraries) => predicate "Shared libraries are supported." is satisfied
 ... testing 'test2_main.ml' with line 7 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test2_main.ml' with line 10 (ocamlc.byte) => passed
 ... testing 'test2_main.ml' with line 13 (ocamlc.byte) => passed
 ... testing 'test2_main.ml' with line 16 (ocamlc.byte) => passed
 ... testing 'test2_main.ml' with line 21 (ocamlc.byte) => passed
 ... testing 'test2_main.ml' with line 22 (run) => passed
 ... testing 'test2_main.ml' with line 25 (native-dynlink) => predicate "native dynlink support available" is satisfied
 ... testing 'test2_main.ml' with line 26 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'test2_main.ml' with line 29 (ocamlopt.byte) => passed
 ... testing 'test2_main.ml' with line 32 (ocamlopt.byte) => passed
 ... testing 'test2_main.ml' with line 37 (ocamlopt.byte) => passed
 ... testing 'test2_main.ml' with line 42 (ocamlopt.byte) => passed
 ... testing 'test2_main.ml' with line 43 (run) => passed
 ... testing 'test3_main.ml' with line 5 (shared-libraries) => predicate "Shared libraries are supported." is satisfied
 ... testing 'test3_main.ml' with line 7 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test3_main.ml' with line 10 (ocamlc.byte) => passed
 ... testing 'test3_main.ml' with line 13 (ocamlc.byte) => passed
 ... testing 'test3_main.ml' with line 16 (ocamlc.byte) => passed
 ... testing 'test3_main.ml' with line 21 (ocamlc.byte) => passed
 ... testing 'test3_main.ml' with line 26 (ocamlc.byte) => passed
 ... testing 'test3_main.ml' with line 27 (run) => passed
 ... testing 'test3_main.ml' with line 30 (native-dynlink) => predicate "native dynlink support available" is satisfied
 ... testing 'test3_main.ml' with line 31 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'test3_main.ml' with line 34 (ocamlopt.byte) => passed
 ... testing 'test3_main.ml' with line 37 (ocamlopt.byte) => passed
 ... testing 'test3_main.ml' with line 40 (ocamlopt.byte) => passed
 ... testing 'test3_main.ml' with line 45 (ocamlopt.byte) => passed
 ... testing 'test3_main.ml' with line 50 (ocamlopt.byte) => passed
 ... testing 'test3_main.ml' with line 51 (run) => passed
 ... testing 'test4_main.ml' with line 5 (shared-libraries) => predicate "Shared libraries are supported." is satisfied
 ... testing 'test4_main.ml' with line 7 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test4_main.ml' with line 10 (ocamlc.byte) => passed
 ... testing 'test4_main.ml' with line 13 (ocamlc.byte) => passed
 ... testing 'test4_main.ml' with line 16 (ocamlc.byte) => passed
 ... testing 'test4_main.ml' with line 21 (ocamlc.byte) => passed
 ... testing 'test4_main.ml' with line 26 (ocamlc.byte) => passed
 ... testing 'test4_main.ml' with line 27 (run) => passed
 ... testing 'test4_main.ml' with line 30 (native-dynlink) => predicate "native dynlink support available" is satisfied
 ... testing 'test4_main.ml' with line 31 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'test4_main.ml' with line 34 (ocamlopt.byte) => passed
 ... testing 'test4_main.ml' with line 37 (ocamlopt.byte) => passed
 ... testing 'test4_main.ml' with line 40 (ocamlopt.byte) => passed
 ... testing 'test4_main.ml' with line 45 (ocamlopt.byte) => passed
 ... testing 'test4_main.ml' with line 50 (ocamlopt.byte) => passed
 ... testing 'test4_main.ml' with line 51 (run) => passed
 ... testing 'test5_main.ml' with line 5 (shared-libraries) => predicate "Shared libraries are supported." is satisfied
 ... testing 'test5_main.ml' with line 7 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test5_main.ml' with line 10 (ocamlc.byte) => passed
 ... testing 'test5_main.ml' with line 13 (ocamlc.byte) => passed
 ... testing 'test5_main.ml' with line 16 (ocamlc.byte) => passed
 ... testing 'test5_main.ml' with line 19 (ocamlc.byte) => passed
 ... testing 'test5_main.ml' with line 24 (ocamlc.byte) => passed
 ... testing 'test5_main.ml' with line 29 (ocamlc.byte) => passed
 ... testing 'test5_main.ml' with line 30 (run) => passed
 ... testing 'test5_main.ml' with line 33 (native-dynlink) => predicate "native dynlink support available" is satisfied
 ... testing 'test5_main.ml' with line 34 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'test5_main.ml' with line 37 (ocamlopt.byte) => passed
 ... testing 'test5_main.ml' with line 40 (ocamlopt.byte) => passed
 ... testing 'test5_main.ml' with line 43 (ocamlopt.byte) => passed
 ... testing 'test5_main.ml' with line 48 (ocamlopt.byte) => passed
 ... testing 'test5_main.ml' with line 53 (ocamlopt.byte) => passed
 ... testing 'test5_main.ml' with line 58 (ocamlopt.byte) => passed
 ... testing 'test5_main.ml' with line 59 (run) => passed
 ... testing 'test6_main.ml' with line 5 (shared-libraries) => predicate "Shared libraries are supported." is satisfied
 ... testing 'test6_main.ml' with line 7 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test6_main.ml' with line 10 (ocamlc.byte) => passed
 ... testing 'test6_main.ml' with line 13 (ocamlc.byte) => passed
 ... testing 'test6_main.ml' with line 16 (ocamlc.byte) => passed
 ... testing 'test6_main.ml' with line 21 (ocamlc.byte) => passed
 ... testing 'test6_main.ml' with line 22 (run) => passed
 ... testing 'test6_main.ml' with line 25 (native-dynlink) => predicate "native dynlink support available" is satisfied
 ... testing 'test6_main.ml' with line 26 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'test6_main.ml' with line 29 (ocamlopt.byte) => passed
 ... testing 'test6_main.ml' with line 34 (ocamlopt.byte) => passed
 ... testing 'test6_main.ml' with line 39 (ocamlopt.byte) => passed
 ... testing 'test6_main.ml' with line 44 (ocamlopt.byte) => passed
 ... testing 'test6_main.ml' with line 45 (run) => passed
 ... testing 'test7_main.ml' with line 5 (shared-libraries) => predicate "Shared libraries are supported." is satisfied
 ... testing 'test7_main.ml' with line 7 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test7_main.ml' with line 10 (ocamlc.byte) => passed
 ... testing 'test7_main.ml' with line 13 (ocamlc.byte) => passed
 ... testing 'test7_main.ml' with line 16 (ocamlc.byte) => passed
 ... testing 'test7_main.ml' with line 21 (ocamlc.byte) => passed
 ... testing 'test7_main.ml' with line 22 (run) => passed
 ... testing 'test7_main.ml' with line 25 (native-dynlink) => predicate "native dynlink support available" is satisfied
 ... testing 'test7_main.ml' with line 26 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'test7_main.ml' with line 29 (ocamlopt.byte) => passed
 ... testing 'test7_main.ml' with line 32 (ocamlopt.byte) => passed
 ... testing 'test7_main.ml' with line 37 (ocamlopt.byte) => passed
 ... testing 'test7_main.ml' with line 42 (ocamlopt.byte) => passed
 ... testing 'test7_main.ml' with line 43 (run) => passed
 ... testing 'test8_main.ml' with line 5 (shared-libraries) => predicate "Shared libraries are supported." is satisfied
 ... testing 'test8_main.ml' with line 7 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test8_main.ml' with line 10 (ocamlc.byte) => passed
 ... testing 'test8_main.ml' with line 13 (ocamlc.byte) => passed
 ... testing 'test8_main.ml' with line 16 (ocamlc.byte) => passed
 ... testing 'test8_main.ml' with line 19 (ocamlc.byte) => passed
 ... testing 'test8_main.ml' with line 24 (ocamlc.byte) => passed
 ... testing 'test8_main.ml' with line 29 (ocamlc.byte) => passed
 ... testing 'test8_main.ml' with line 30 (run) => passed
 ... testing 'test8_main.ml' with line 33 (native-dynlink) => predicate "native dynlink support available" is satisfied
 ... testing 'test8_main.ml' with line 34 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'test8_main.ml' with line 37 (ocamlopt.byte) => passed
 ... testing 'test8_main.ml' with line 40 (ocamlopt.byte) => passed
 ... testing 'test8_main.ml' with line 43 (ocamlopt.byte) => passed
 ... testing 'test8_main.ml' with line 46 (ocamlopt.byte) => passed
 ... testing 'test8_main.ml' with line 51 (ocamlopt.byte) => passed
 ... testing 'test8_main.ml' with line 56 (ocamlopt.byte) => passed
 ... testing 'test8_main.ml' with line 57 (run) => passed
 ... testing 'test9_main.ml' with line 5 (shared-libraries) => predicate "Shared libraries are supported." is satisfied
 ... testing 'test9_main.ml' with line 7 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test9_main.ml' with line 10 (ocamlc.byte) => passed
 ... testing 'test9_main.ml' with line 13 (ocamlc.byte) => passed
 ... testing 'test9_main.ml' with line 16 (ocamlc.byte) => passed
 ... testing 'test9_main.ml' with line 19 (ocamlc.byte) => passed
 ... testing 'test9_main.ml' with line 24 (ocamlc.byte) => passed
 ... testing 'test9_main.ml' with line 25 (run) => passed
 ... testing 'test9_main.ml' with line 28 (native-dynlink) => predicate "native dynlink support available" is satisfied
 ... testing 'test9_main.ml' with line 29 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'test9_main.ml' with line 32 (ocamlopt.byte) => passed
 ... testing 'test9_main.ml' with line 35 (ocamlopt.byte) => passed
 ... testing 'test9_main.ml' with line 40 (ocamlopt.byte) => passed
 ... testing 'test9_main.ml' with line 45 (ocamlopt.byte) => passed
 ... testing 'test9_main.ml' with line 50 (ocamlopt.byte) => passed
 ... testing 'test9_main.ml' with line 51 (run) => passed
Running tests from 'tests/lib-dynlink-init-info' ...
 ... testing 'test.ml' with default (native) => passed
 ... testing 'test.ml' with default (bytecode) => passed
Running tests from 'tests/lib-dynlink-native' ...
 ... testing 'main.ml' with line 6 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'main.ml' with line 8 (native-dynlink) => predicate "native dynlink support available" is satisfied
 ... testing 'main.ml' with line 10 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'main.ml' with line 12 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 15 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 18 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 23 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 25 (script) => passed
 ... testing 'main.ml' with line 28 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 30 (script) => passed
 ... testing 'main.ml' with line 35 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 38 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 43 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 45 (cd) => passed
 ... testing 'main.ml' with line 48 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 51 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 53 (script) => passed
 ... testing 'main.ml' with line 55 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 57 (script) => passed
 ... testing 'main.ml' with line 59 (cd) => passed
 ... testing 'main.ml' with line 64 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 67 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 72 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 75 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 80 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 84 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 88 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 91 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 96 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 99 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 104 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 107 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 112 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 115 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 118 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 123 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 126 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 132 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 136 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 142 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 146 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 151 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 154 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 158 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 164 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 167 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 170 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 174 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 178 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 183 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 187 (run) => passed
 ... testing 'main.ml' with line 188 (check-program-output) => passed
Running tests from 'tests/lib-dynlink-packed' ...
 ... testing 'loader.ml' with line 5 (shared-libraries) => predicate "Shared libraries are supported." is satisfied
 ... testing 'loader.ml' with line 7 (setup-ocamlc.byte-build-env) => passed
 ... testing 'loader.ml' with line 11 (ocamlc.byte) => passed
 ... testing 'loader.ml' with line 15 (ocamlc.byte) => passed
 ... testing 'loader.ml' with line 20 (ocamlc.byte) => passed
 ... testing 'loader.ml' with line 27 (ocamlc.byte) => passed
 ... testing 'loader.ml' with line 30 (run) => passed
 ... testing 'loader.ml' with line 32 (check-program-output) => passed
 ... testing 'loader.ml' with line 35 (native-dynlink) => predicate "native dynlink support available" is satisfied
 ... testing 'loader.ml' with line 36 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'loader.ml' with line 40 (ocamlopt.byte) => passed
 ... testing 'loader.ml' with line 44 (ocamlopt.byte) => passed
 ... testing 'loader.ml' with line 49 (ocamlopt.byte) => passed
 ... testing 'loader.ml' with line 54 (ocamlopt.byte) => passed
 ... testing 'loader.ml' with line 61 (ocamlopt.byte) => passed
 ... testing 'loader.ml' with line 64 (run) => passed
 ... testing 'loader.ml' with line 66 (check-program-output) => passed
Running tests from 'tests/lib-dynlink-pr4229' ...
 ... testing 'main.ml' with line 6 (shared-libraries) => predicate "Shared libraries are supported." is satisfied
 ... testing 'main.ml' with line 8 (setup-ocamlc.byte-build-env) => passed
 ... testing 'main.ml' with line 10 (cd) => passed
 ... testing 'main.ml' with line 12 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 14 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 16 (cd) => passed
 ... testing 'main.ml' with line 18 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 20 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 22 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 24 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 26 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 31 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 33 (run) => passed
 ... testing 'main.ml' with line 34 (check-program-output) => passed
 ... testing 'main.ml' with line 36 (native-dynlink) => predicate "native dynlink support available" is satisfied
 ... testing 'main.ml' with line 37 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'main.ml' with line 39 (cd) => passed
 ... testing 'main.ml' with line 41 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 46 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 48 (cd) => passed
 ... testing 'main.ml' with line 51 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 53 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 55 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 61 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 64 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 69 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 71 (run) => passed
 ... testing 'main.ml' with line 72 (check-program-output) => passed
Running tests from 'tests/lib-dynlink-pr4839' ...
 ... testing 'test.ml' with line 5 (shared-libraries) => predicate "Shared libraries are supported." is satisfied
 ... testing 'test.ml' with line 7 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 10 (cd) => passed
 ... testing 'test.ml' with line 13 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 17 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 22 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 27 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 30 (cd) => passed
 ... testing 'test.ml' with line 33 (cd) => passed
 ... testing 'test.ml' with line 36 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 40 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 45 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 50 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 53 (cd) => passed
 ... testing 'test.ml' with line 56 (cd) => passed
 ... testing 'test.ml' with line 59 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 63 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 68 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 73 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 76 (cd) => passed
 ... testing 'test.ml' with line 79 (cd) => passed
 ... testing 'test.ml' with line 82 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 86 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 91 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 96 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 99 (cd) => passed
 ... testing 'test.ml' with line 102 (cd) => passed
 ... testing 'test.ml' with line 105 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 109 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 114 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 119 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 123 (run) => passed
 ... testing 'test.ml' with line 125 (check-program-output) => passed
 ... testing 'test.ml' with line 129 (run) => passed
 ... testing 'test.ml' with line 131 (check-program-output) => passed
 ... testing 'test.ml' with line 135 (run) => passed
 ... testing 'test.ml' with line 137 (check-program-output) => passed
 ... testing 'test.ml' with line 141 (run) => passed
 ... testing 'test.ml' with line 143 (check-program-output) => passed
 ... testing 'test.ml' with line 147 (cd) => passed
 ... testing 'test.ml' with line 150 (native-dynlink) => predicate "native dynlink support available" is satisfied
 ... testing 'test.ml' with line 152 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'test.ml' with line 155 (cd) => passed
 ... testing 'test.ml' with line 158 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 162 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 167 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 172 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 175 (cd) => passed
 ... testing 'test.ml' with line 178 (cd) => passed
 ... testing 'test.ml' with line 181 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 185 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 190 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 195 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 199 (cd) => passed
 ... testing 'test.ml' with line 202 (cd) => passed
 ... testing 'test.ml' with line 205 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 209 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 214 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 219 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 222 (cd) => passed
 ... testing 'test.ml' with line 225 (cd) => passed
 ... testing 'test.ml' with line 228 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 232 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 237 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 242 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 245 (cd) => passed
 ... testing 'test.ml' with line 248 (cd) => passed
 ... testing 'test.ml' with line 251 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 255 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 260 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 265 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 269 (run) => passed
 ... testing 'test.ml' with line 271 (check-program-output) => passed
 ... testing 'test.ml' with line 275 (run) => passed
 ... testing 'test.ml' with line 277 (check-program-output) => passed
 ... testing 'test.ml' with line 281 (run) => passed
 ... testing 'test.ml' with line 283 (check-program-output) => passed
 ... testing 'test.ml' with line 287 (run) => passed
 ... testing 'test.ml' with line 289 (check-program-output) => passed
 ... testing 'test.ml' with line 293 (cd) => passed
Running tests from 'tests/lib-dynlink-pr6950' ...
 ... testing 'loader.ml' with line 5 (shared-libraries) => predicate "Shared libraries are supported." is satisfied
 ... testing 'loader.ml' with line 7 (setup-ocamlc.byte-build-env) => passed
 ... testing 'loader.ml' with line 12 (ocamlc.byte) => passed
 ... testing 'loader.ml' with line 19 (ocamlc.byte) => passed
 ... testing 'loader.ml' with line 22 (run) => passed
 ... testing 'loader.ml' with line 24 (check-program-output) => passed
 ... testing 'loader.ml' with line 27 (native-dynlink) => predicate "native dynlink support available" is satisfied
 ... testing 'loader.ml' with line 28 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'loader.ml' with line 33 (ocamlopt.byte) => passed
 ... testing 'loader.ml' with line 40 (ocamlopt.byte) => passed
 ... testing 'loader.ml' with line 43 (run) => passed
 ... testing 'loader.ml' with line 45 (check-program-output) => passed
Running tests from 'tests/lib-dynlink-pr9209' ...
 ... testing 'dyn.ml' with line 5 (shared-libraries) => predicate "Shared libraries are supported." is satisfied
 ... testing 'dyn.ml' with line 7 (setup-ocamlc.byte-build-env) => passed
 ... testing 'dyn.ml' with line 10 (ocamlc.byte) => passed
 ... testing 'dyn.ml' with line 14 (ocamlmklib) => passed
 ... testing 'dyn.ml' with line 20 (ocamlc.byte) => passed
 ... testing 'dyn.ml' with line 25 (ocamlc.byte) => passed
 ... testing 'dyn.ml' with line 27 (run) => passed
 ... testing 'dyn.ml' with line 28 (check-program-output) => passed
 ... testing 'dyn.ml' with line 30 (native-dynlink) => predicate "native dynlink support available" is satisfied
 ... testing 'dyn.ml' with line 31 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'dyn.ml' with line 34 (ocamlopt.byte) => passed
 ... testing 'dyn.ml' with line 38 (ocamlmklib) => passed
 ... testing 'dyn.ml' with line 44 (ocamlopt.byte) => passed
 ... testing 'dyn.ml' with line 49 (ocamlopt.byte) => passed
 ... testing 'dyn.ml' with line 54 (ocamlopt.byte) => passed
 ... testing 'dyn.ml' with line 56 (run) => passed
 ... testing 'dyn.ml' with line 57 (check-program-output) => passed
Running tests from 'tests/lib-dynlink-private' ...
 ... testing 'test.ml' with line 6 (shared-libraries) => predicate "Shared libraries are supported." is satisfied
 ... testing 'test.ml' with line 8 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 10 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 12 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 14 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 16 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 18 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 21 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 24 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 27 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 30 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 33 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 36 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 39 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 42 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 45 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 48 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 51 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 54 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 57 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 60 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 63 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 66 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 69 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 75 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 77 (script) => passed
 ... testing 'test.ml' with line 78 (run) => passed
 ... testing 'test.ml' with line 80 (native-dynlink) => predicate "native dynlink support available" is satisfied
 ... testing 'test.ml' with line 81 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'test.ml' with line 83 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 85 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 87 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 89 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 92 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 97 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 100 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 105 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 108 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 113 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 116 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 121 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 124 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 129 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 132 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 137 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 140 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 145 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 148 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 153 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 156 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 161 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 166 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 168 (script) => passed
 ... testing 'test.ml' with line 169 (run) => passed
Running tests from 'tests/lib-either' ...
 ... testing 'test.ml' with line 2 (expect) => passed
Running tests from 'tests/lib-extensions' ...
 ... testing 'alpha_exports.ml' with line 5 (bytecode) => passed
 ... testing 'alpha_exports.ml' with line 7 (native) => passed
 ... testing 'beta_exports.ml' with line 5 (bytecode) => passed
 ... testing 'beta_exports.ml' with line 7 (native) => passed
 ... testing 'modules.ml' with line 8 (bytecode) => passed
 ... testing 'modules.ml' with line 10 (native) => passed
 ... testing 'stable_exports.ml' with line 5 (bytecode) => passed
 ... testing 'stable_exports.ml' with line 7 (native) => passed
 ... testing 'upstream_exports.ml' with line 5 (bytecode) => passed
 ... testing 'upstream_exports.ml' with line 7 (native) => passed
Running tests from 'tests/lib-filename' ...
 ... testing 'extension.ml' with default (native) => passed
 ... testing 'extension.ml' with default (bytecode) => passed
 ... testing 'null.ml' with default (native) => passed
 ... testing 'null.ml' with default (bytecode) => passed
 ... testing 'quotecommand.ml' with line 5 (setup-ocamlc.byte-build-env) => passed
 ... testing 'quotecommand.ml' with line 8 (ocamlc.byte) => passed
 ... testing 'quotecommand.ml' with line 11 (ocamlc.byte) => passed
 ... testing 'quotecommand.ml' with line 12 (check-ocamlc.byte-output) => passed
 ... testing 'quotecommand.ml' with line 13 (run) => passed
 ... testing 'quotecommand.ml' with line 14 (check-program-output) => passed
 ... testing 'quotecommand.ml' with line 17 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'quotecommand.ml' with line 20 (ocamlopt.byte) => passed
 ... testing 'quotecommand.ml' with line 23 (ocamlopt.byte) => passed
 ... testing 'quotecommand.ml' with line 24 (check-ocamlopt.byte-output) => passed
 ... testing 'quotecommand.ml' with line 25 (run) => passed
 ... testing 'quotecommand.ml' with line 26 (check-program-output) => passed
 ... testing 'suffix.ml' with default (native) => passed
 ... testing 'suffix.ml' with default (bytecode) => passed
 ... testing 'temp.ml' with default (native) => passed
 ... testing 'temp.ml' with default (bytecode) => passed
Running tests from 'tests/lib-float' ...
 ... testing 'test.ml' with default (native) => passed
 ... testing 'test.ml' with default (bytecode) => passed
Running tests from 'tests/lib-floatarray' ...
 ... testing 'floatarray.ml' with default (native) => passed
 ... testing 'floatarray.ml' with default (bytecode) => passed
Running tests from 'tests/lib-format' ...
 ... testing 'domains.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'mc_pr586_par.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'mc_pr586_par2.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'pp_print_custom_break.ml' with default (native) => passed
 ... testing 'pp_print_custom_break.ml' with default (bytecode) => passed
 ... testing 'pr6824.ml' with default (native) => passed
 ... testing 'pr6824.ml' with default (bytecode) => passed
 ... testing 'print_array.ml' with default (native) => passed
 ... testing 'print_array.ml' with default (bytecode) => passed
 ... testing 'print_if_newline.ml' with default (native) => passed
 ... testing 'print_if_newline.ml' with default (bytecode) => passed
 ... testing 'print_seq.ml' with default (native) => passed
 ... testing 'print_seq.ml' with default (bytecode) => passed
 ... testing 'tformat.ml' with default (native) => passed
 ... testing 'tformat.ml' with default (bytecode) => passed
Running tests from 'tests/lib-fun' ...
 ... testing 'test.ml' with default (native) => passed
 ... testing 'test.ml' with default (bytecode) => passed
Running tests from 'tests/lib-hashtbl' ...
 ... testing 'compatibility.ml' with default (native) => passed
 ... testing 'compatibility.ml' with default (bytecode) => passed
 ... testing 'hfun.ml' with default (native) => passed
 ... testing 'hfun.ml' with default (bytecode) => passed
 ... testing 'htbl.ml' with default (native) => passed
 ... testing 'htbl.ml' with default (bytecode) => passed
Running tests from 'tests/lib-int' ...
 ... testing 'test.ml' with default (native) => passed
 ... testing 'test.ml' with default (bytecode) => passed
Running tests from 'tests/lib-int64' ...
 ... testing 'issue9460.ml' with default (native) => passed
 ... testing 'issue9460.ml' with default (bytecode) => passed
 ... testing 'test.ml' with default (native) => passed
 ... testing 'test.ml' with default (bytecode) => passed
Running tests from 'tests/lib-internalformat' ...
 ... testing 'test.ml' with line 2 (expect) => passed
Running tests from 'tests/lib-lazy' ...
 ... testing 'test.ml' with line 2 (expect) => passed
Running tests from 'tests/lib-list' ...
 ... testing 'test.ml' with default (native) => passed
 ... testing 'test.ml' with default (bytecode) => passed
Running tests from 'tests/lib-marshal' ...
 ... testing 'intern_final.ml' with default (native) => passed
 ... testing 'intern_final.ml' with default (bytecode) => passed
 ... testing 'intext.ml' with default (native) => passed
 ... testing 'intext.ml' with default (bytecode) => passed
 ... testing 'intext_par.ml' with line 4 (no-tsan) => predicate "tsan not available" is satisfied
 ... testing 'intext_par.ml' with line 5 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'marshal_bigarray.ml' with default (native) => passed
 ... testing 'marshal_bigarray.ml' with default (bytecode) => passed
Running tests from 'tests/lib-obj' ...
 ... testing 'get_header.ml' with line 3 (stack-allocation) => predicate "Stack allocation enabled" is satisfied
 ... testing 'get_header.ml' with line 5 (native) => passed
 ... testing 'get_header.ml' with line 7 (no-stack-allocation) => predicate "Stack allocation disabled" is not satisfied
 ... testing 'new_obj.ml' with default (native) => passed
 ... testing 'new_obj.ml' with default (bytecode) => passed
 ... testing 'reachable_words.ml' with default (native) => passed
 ... testing 'reachable_words.ml' with default (bytecode) => passed
 ... testing 'reachable_words_bug.ml' with default (native) => passed
 ... testing 'reachable_words_bug.ml' with default (bytecode) => passed
 ... testing 'uniform_or_mixed.ml' with line 6 (native) => passed
 ... testing 'uniform_or_mixed.ml' with line 10 (bytecode) => passed
 ... testing 'uniquely_reachable_words.ml' with default (native) => passed
 ... testing 'uniquely_reachable_words.ml' with default (bytecode) => passed
 ... testing 'with_tag.ml' with default (native) => passed
 ... testing 'with_tag.ml' with default (bytecode) => passed
Running tests from 'tests/lib-option' ...
 ... testing 'test.ml' with default (native) => passed
 ... testing 'test.ml' with default (bytecode) => passed
Running tests from 'tests/lib-printf' ...
 ... testing 'pr6534.ml' with default (native) => passed
 ... testing 'pr6534.ml' with default (bytecode) => passed
 ... testing 'pr6938.ml' with default (native) => passed
 ... testing 'pr6938.ml' with default (bytecode) => passed
 ... testing 'tprintf.ml' with default (native) => passed
 ... testing 'tprintf.ml' with default (bytecode) => passed
Running tests from 'tests/lib-queue' ...
 ... testing 'test.ml' with default (native) => passed
 ... testing 'test.ml' with default (bytecode) => passed
Running tests from 'tests/lib-random' ...
 ... testing 'chi2.ml' with default (native) => passed
 ... testing 'chi2.ml' with default (bytecode) => passed
 ... testing 'compat_32_64.ml' with default (native) => passed
 ... testing 'compat_32_64.ml' with default (bytecode) => passed
 ... testing 'defaultinit.ml' with default (native) => passed
 ... testing 'defaultinit.ml' with default (bytecode) => passed
 ... testing 'full_int.ml' with default (native) => passed
 ... testing 'full_int.ml' with default (bytecode) => passed
 ... testing 'parallel.ml' with line 4 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'selfinit.ml' with default (native) => passed
 ... testing 'selfinit.ml' with default (bytecode) => passed
 ... testing 'testvectors.ml' with line 2 (runtime5) => predicate "5.x runtime being used" is not satisfied
Running tests from 'tests/lib-result' ...
 ... testing 'test.ml' with default (native) => passed
 ... testing 'test.ml' with default (bytecode) => passed
Running tests from 'tests/lib-runtime-events' ...
 ... testing 'test.ml' with line 3 (runtime4) => predicate "4.x runtime being used" is satisfied
 ... testing 'test.ml' with line 4 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'test.ml' with line 7 (skip) => skipped (this runtime_events test is currently broken, to be fixed later)
 ... testing 'test_caml.ml' with line 3 (runtime4) => predicate "4.x runtime being used" is satisfied
 ... testing 'test_caml.ml' with line 4 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'test_caml.ml' with line 7 (skip) => skipped (this runtime_events test is currently broken, to be fixed later)
 ... testing 'test_caml_counters.ml' with line 3 (runtime4) => predicate "4.x runtime being used" is satisfied
 ... testing 'test_caml_counters.ml' with line 4 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'test_caml_counters.ml' with line 7 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'test_caml_exception.ml' with line 4 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'test_caml_exception.ml' with line 8 (runtime4) => predicate "4.x runtime being used" is satisfied
 ... testing 'test_caml_exception.ml' with line 9 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'test_caml_parallel.ml' with line 4 (skip) => skipped (CR OCaml 5 domains)
 ... testing 'test_caml_reentry.ml' with line 4 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'test_caml_reentry.ml' with line 8 (runtime4) => predicate "4.x runtime being used" is satisfied
 ... testing 'test_caml_reentry.ml' with line 9 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'test_caml_runparams.ml' with line 3 (runtime4) => predicate "4.x runtime being used" is satisfied
 ... testing 'test_caml_runparams.ml' with line 4 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'test_caml_runparams.ml' with line 8 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'test_caml_slot_reuse.ml' with line 4 (skip) => skipped (CR OCaml 5 domains)
 ... testing 'test_caml_stubs_gc.ml' with line 3 (runtime4) => predicate "4.x runtime being used" is satisfied
 ... testing 'test_caml_stubs_gc.ml' with line 4 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'test_caml_stubs_gc.ml' with line 7 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'test_compact.ml' with line 3 (runtime4) => predicate "4.x runtime being used" is satisfied
 ... testing 'test_compact.ml' with line 4 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'test_compact.ml' with line 6 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'test_dropped_events.ml' with line 6 (skip) => skipped (CR OCaml 5 domains)
 ... testing 'test_env_start.ml' with line 3 (runtime4) => predicate "4.x runtime being used" is satisfied
 ... testing 'test_env_start.ml' with line 4 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'test_env_start.ml' with line 8 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'test_external.ml' with line 3 (runtime4) => predicate "4.x runtime being used" is satisfied
 ... testing 'test_external.ml' with line 4 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'test_external.ml' with line 8 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'test_external_preserve.ml' with line 3 (runtime4) => predicate "4.x runtime being used" is satisfied
 ... testing 'test_external_preserve.ml' with line 4 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'test_external_preserve.ml' with line 9 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'test_fork.ml' with line 3 (runtime4) => predicate "4.x runtime being used" is satisfied
 ... testing 'test_fork.ml' with line 4 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'test_fork.ml' with line 8 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'test_instrumented.ml' with line 3 (runtime4) => predicate "4.x runtime being used" is satisfied
 ... testing 'test_instrumented.ml' with line 4 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'test_instrumented.ml' with line 8 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'test_user_event.ml' with line 3 (runtime4) => predicate "4.x runtime being used" is satisfied
 ... testing 'test_user_event.ml' with line 4 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'test_user_event.ml' with line 7 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'test_user_event_signal.ml' with line 2 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'test_user_event_unknown.ml' with line 3 (runtime4) => predicate "4.x runtime being used" is satisfied
 ... testing 'test_user_event_unknown.ml' with line 4 (skip) => skipped (explicit 'skip' in the test)
 ... testing 'test_user_event_unknown.ml' with line 9 (runtime5) => predicate "5.x runtime being used" is not satisfied
Running tests from 'tests/lib-scanf' ...
 ... testing 'tscanf.ml' with default (native) => passed
 ... testing 'tscanf.ml' with default (bytecode) => passed
Running tests from 'tests/lib-scanf-2' ...
 ... testing 'tscanf2_master.ml' with line 6 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'tscanf2_master.ml' with line 7 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'tscanf2_master.ml' with line 11 (setup-ocamlc.byte-build-env) => passed
 ... testing 'tscanf2_master.ml' with line 12 (ocamlc.byte) => passed
 ... testing 'tscanf2_master.ml' with line 15 (ocamlc.byte) => passed
 ... testing 'tscanf2_master.ml' with line 16 (check-ocamlc.byte-output) => passed
 ... testing 'tscanf2_master.ml' with line 19 (run) => passed
 ... testing 'tscanf2_master.ml' with line 20 (check-program-output) => passed
 ... testing 'tscanf2_master.ml' with line 24 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'tscanf2_master.ml' with line 25 (ocamlopt.byte) => passed
 ... testing 'tscanf2_master.ml' with line 28 (ocamlopt.byte) => passed
 ... testing 'tscanf2_master.ml' with line 29 (check-ocamlopt.byte-output) => passed
 ... testing 'tscanf2_master.ml' with line 32 (run) => passed
 ... testing 'tscanf2_master.ml' with line 33 (check-program-output) => passed
Running tests from 'tests/lib-seq' ...
 ... testing 'test.ml' with default (native) => passed
 ... testing 'test.ml' with default (bytecode) => passed
Running tests from 'tests/lib-set' ...
 ... testing 'testmap.ml' with default (native) => passed
 ... testing 'testmap.ml' with default (bytecode) => passed
 ... testing 'testset.ml' with default (native) => passed
 ... testing 'testset.ml' with default (bytecode) => passed
Running tests from 'tests/lib-stack' ...
 ... testing 'test.ml' with default (native) => passed
 ... testing 'test.ml' with default (bytecode) => passed
Running tests from 'tests/lib-stdlabels' ...
 ... testing 'test_stdlabels.ml' with default (native) => passed
 ... testing 'test_stdlabels.ml' with default (bytecode) => passed
Running tests from 'tests/lib-str' ...
 ... testing 'parallel.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 't01.ml' with line 3 (hasstr) => predicate "str library available" is satisfied
 ... testing 't01.ml' with line 5 (bytecode) => passed
 ... testing 't01.ml' with line 7 (native) => passed
Running tests from 'tests/lib-string' ...
 ... testing 'binary.ml' with default (native) => passed
 ... testing 'binary.ml' with default (bytecode) => passed
 ... testing 'test_string.ml' with default (native) => passed
 ... testing 'test_string.ml' with default (bytecode) => passed
Running tests from 'tests/lib-sync' ...
 ... testing 'prodcons.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'trylock.ml' with line 2 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'trylock2.ml' with line 2 (runtime5) => predicate "5.x runtime being used" is not satisfied
Running tests from 'tests/lib-sys' ...
 ... testing 'immediate64.ml' with default (native) => passed
 ... testing 'immediate64.ml' with default (bytecode) => passed
 ... testing 'opaque.ml' with default (native) => passed
 ... testing 'opaque.ml' with default (bytecode) => passed
 ... testing 'rename.ml' with default (native) => passed
 ... testing 'rename.ml' with default (bytecode) => passed
Running tests from 'tests/lib-systhreads' ...
 ... testing 'boundscheck.ml' with line 3 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'eintr.ml' with line 3 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'eintr.ml' with line 4 (not-windows) => predicate "not running on Windows" is satisfied
 ... testing 'eintr.ml' with line 6 (bytecode) => passed
 ... testing 'eintr.ml' with line 8 (native) => passed
 ... testing 'multicore_lifecycle.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'swapgil.ml' with line 4 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'swapgil.ml' with line 5 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'swapgil.ml' with line 6 (native) => passed
 ... testing 'test_c_thread_register.ml' with line 4 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'test_c_thread_register.ml' with line 5 (not-bsd) => predicate "not on a BSD system" is satisfied
 ... testing 'test_c_thread_register.ml' with line 7 (bytecode) => passed
 ... testing 'test_c_thread_register.ml' with line 9 (native) => passed
 ... testing 'testfork.ml' with line 3 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'testfork.ml' with line 4 (not-bsd) => predicate "not on a BSD system" is satisfied
 ... testing 'testfork.ml' with line 5 (libunix) => predicate "libunix available" is satisfied
 ... testing 'testfork.ml' with line 6 (no-tsan) => predicate "tsan not available" is satisfied
 ... testing 'testfork.ml' with line 8 (bytecode) => passed
 ... testing 'testfork.ml' with line 10 (native) => passed
 ... testing 'testfork2.ml' with line 3 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'testfork2.ml' with line 4 (not-bsd) => predicate "not on a BSD system" is satisfied
 ... testing 'testfork2.ml' with line 5 (libunix) => predicate "libunix available" is satisfied
 ... testing 'testfork2.ml' with line 7 (bytecode) => passed
 ... testing 'testfork2.ml' with line 9 (native) => passed
 ... testing 'testpreempt.ml' with line 3 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'testpreempt.ml' with line 5 (not-windows) => predicate "not running on Windows" is satisfied
 ... testing 'testpreempt.ml' with line 7 (bytecode) => passed
 ... testing 'testpreempt.ml' with line 9 (native) => passed
 ... testing 'testyield.ml' with line 3 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'testyield.ml' with line 4 (not-windows) => predicate "not running on Windows" is satisfied
 ... testing 'testyield.ml' with line 6 (bytecode) => passed
 ... testing 'testyield.ml' with line 8 (native) => passed
 ... testing 'threadsigmask.ml' with line 3 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'threadsigmask.ml' with line 4 (not-windows) => predicate "not running on Windows" is satisfied
 ... testing 'threadsigmask.ml' with line 6 (bytecode) => passed
 ... testing 'threadsigmask.ml' with line 8 (native) => passed
Running tests from 'tests/lib-threads' ...
 ... testing 'backtrace_threads.ml' with line 3 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'backtrace_threads.ml' with line 5 (bytecode) => passed
 ... testing 'backtrace_threads.ml' with line 7 (native) => passed
 ... testing 'bank.ml' with line 3 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'bank.ml' with line 5 (bytecode) => passed
 ... testing 'bank.ml' with line 7 (native) => passed
 ... testing 'beat.ml' with line 3 (not-macos) => predicate "not on a MacOS system" is satisfied
 ... testing 'beat.ml' with line 5 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'beat.ml' with line 6 (bytecode) => passed
 ... testing 'beat.ml' with line 7 (native) => passed
 ... testing 'beat.ml' with line 9 (macos) => predicate "on a MacOS system" is not satisfied
 ... testing 'bufchan.ml' with line 3 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'bufchan.ml' with line 5 (bytecode) => passed
 ... testing 'bufchan.ml' with line 7 (native) => passed
 ... testing 'close.ml' with line 3 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'close.ml' with line 5 (bytecode) => passed
 ... testing 'close.ml' with line 7 (native) => passed
 ... testing 'delayintr.ml' with line 4 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'delayintr.ml' with line 5 (libunix) => predicate "libunix available" is satisfied
 ... testing 'delayintr.ml' with line 8 (setup-ocamlc.byte-build-env) => passed
 ... testing 'delayintr.ml' with line 11 (ocamlc.byte) => passed
 ... testing 'delayintr.ml' with line 14 (ocamlc.byte) => passed
 ... testing 'delayintr.ml' with line 15 (check-ocamlc.byte-output) => passed
 ... testing 'delayintr.ml' with line 16 (run) => passed
 ... testing 'delayintr.ml' with line 17 (check-program-output) => passed
 ... testing 'delayintr.ml' with line 20 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'delayintr.ml' with line 23 (ocamlopt.byte) => passed
 ... testing 'delayintr.ml' with line 26 (ocamlopt.byte) => passed
 ... testing 'delayintr.ml' with line 27 (check-ocamlopt.byte-output) => passed
 ... testing 'delayintr.ml' with line 28 (run) => passed
 ... testing 'delayintr.ml' with line 29 (check-program-output) => passed
 ... testing 'fileio.ml' with line 3 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'fileio.ml' with line 5 (bytecode) => passed
 ... testing 'fileio.ml' with line 7 (native) => passed
 ... testing 'mutex_errors.ml' with line 3 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'mutex_errors.ml' with line 4 (no-tsan) => predicate "tsan not available" is satisfied
 ... testing 'mutex_errors.ml' with line 6 (bytecode) => passed
 ... testing 'mutex_errors.ml' with line 8 (native) => passed
 ... testing 'pr4466.ml' with line 3 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'pr4466.ml' with line 4 (native) => passed
 ... testing 'pr5325.ml' with line 3 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'pr5325.ml' with line 5 (bytecode) => passed
 ... testing 'pr5325.ml' with line 7 (native) => passed
 ... testing 'pr7638.ml' with line 4 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'pr7638.ml' with line 6 (bytecode) => passed
 ... testing 'pr7638.ml' with line 8 (native) => passed
 ... testing 'pr8857.ml' with line 3 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'pr8857.ml' with line 5 (bytecode) => passed
 ... testing 'pr8857.ml' with line 7 (native) => passed
 ... testing 'pr9971.ml' with line 2 (runtime4) => predicate "4.x runtime being used" is satisfied
 ... testing 'pr9971.ml' with line 4 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'pr9971.ml' with line 6 (bytecode) => passed
 ... testing 'pr9971.ml' with line 8 (native) => passed
 ... testing 'prodcons.ml' with line 3 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'prodcons.ml' with line 5 (bytecode) => passed
 ... testing 'prodcons.ml' with line 7 (native) => passed
 ... testing 'prodcons2.ml' with line 3 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'prodcons2.ml' with line 5 (bytecode) => passed
 ... testing 'prodcons2.ml' with line 7 (native) => passed
 ... testing 'sieve.ml' with line 4 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'sieve.ml' with line 5 (script) => passed
 ... testing 'sieve.ml' with line 9 (bytecode) => passed
 ... testing 'sieve.ml' with line 13 (native) => passed
 ... testing 'signal.ml' with line 4 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'signal.ml' with line 5 (libunix) => predicate "libunix available" is satisfied
 ... testing 'signal.ml' with line 8 (setup-ocamlc.byte-build-env) => passed
 ... testing 'signal.ml' with line 11 (ocamlc.byte) => passed
 ... testing 'signal.ml' with line 14 (ocamlc.byte) => passed
 ... testing 'signal.ml' with line 15 (check-ocamlc.byte-output) => passed
 ... testing 'signal.ml' with line 16 (run) => passed
 ... testing 'signal.ml' with line 17 (check-program-output) => passed
 ... testing 'signal.ml' with line 20 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'signal.ml' with line 23 (ocamlopt.byte) => passed
 ... testing 'signal.ml' with line 26 (ocamlopt.byte) => passed
 ... testing 'signal.ml' with line 27 (check-ocamlopt.byte-output) => passed
 ... testing 'signal.ml' with line 28 (run) => passed
 ... testing 'signal.ml' with line 29 (check-program-output) => passed
 ... testing 'signal_handler_run_in_c_thread.ml' with line 3 (native) => passed
 ... testing 'signal_handler_run_in_c_thread.ml' with line 4 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'sockets.ml' with line 3 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'sockets.ml' with line 4 (not-macos) => predicate "not on a MacOS system" is satisfied
 ... testing 'sockets.ml' with line 5 (libunix) => predicate "libunix available" is satisfied
 ... testing 'sockets.ml' with line 7 (bytecode) => passed
 ... testing 'sockets.ml' with line 9 (native) => passed
 ... testing 'swapchan.ml' with line 3 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'swapchan.ml' with line 5 (bytecode) => passed
 ... testing 'swapchan.ml' with line 7 (native) => passed
 ... testing 'tls.ml' with line 3 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'tls.ml' with line 5 (bytecode) => passed
 ... testing 'tls.ml' with line 7 (native) => passed
 ... testing 'torture.ml' with line 3 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'torture.ml' with line 5 (bytecode) => passed
 ... testing 'torture.ml' with line 7 (native) => passed
 ... testing 'uncaught_exception_handler.ml' with line 47 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'uncaught_exception_handler.ml' with line 49 (bytecode) => passed
 ... testing 'uncaught_exception_handler.ml' with line 51 (native) => passed
Running tests from 'tests/lib-uchar' ...
 ... testing 'test.ml' with default (native) => passed
 ... testing 'test.ml' with default (bytecode) => passed
Running tests from 'tests/lib-unix/common' ...
 ... testing 'bigarrays.ml' with line 3 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'channel_of.ml' with line 3 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'channel_of.ml' with line 5 (bytecode) => passed
 ... testing 'channel_of.ml' with line 7 (native) => passed
 ... testing 'cloexec.ml' with line 5 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'cloexec.ml' with line 7 (libunix) => predicate "libunix available" is satisfied
 ... testing 'cloexec.ml' with line 10 (setup-ocamlc.byte-build-env) => passed
 ... testing 'cloexec.ml' with line 13 (ocamlc.byte) => passed
 ... testing 'cloexec.ml' with line 16 (ocamlc.byte) => passed
 ... testing 'cloexec.ml' with line 17 (check-ocamlc.byte-output) => passed
 ... testing 'cloexec.ml' with line 18 (run) => passed
 ... testing 'cloexec.ml' with line 19 (check-program-output) => passed
 ... testing 'cloexec.ml' with line 22 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'cloexec.ml' with line 25 (ocamlopt.byte) => passed
 ... testing 'cloexec.ml' with line 28 (ocamlopt.byte) => passed
 ... testing 'cloexec.ml' with line 29 (check-ocamlopt.byte-output) => passed
 ... testing 'cloexec.ml' with line 30 (run) => passed
 ... testing 'cloexec.ml' with line 31 (check-program-output) => passed
 ... testing 'dup.ml' with line 3 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'dup.ml' with line 5 (bytecode) => passed
 ... testing 'dup.ml' with line 7 (native) => passed
 ... testing 'dup2.ml' with line 4 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'dup2.ml' with line 6 (bytecode) => passed
 ... testing 'dup2.ml' with line 8 (native) => passed
 ... testing 'fork_cleanup.ml' with line 3 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'fork_cleanup.ml' with line 4 (not-windows) => predicate "not running on Windows" is satisfied
 ... testing 'fork_cleanup.ml' with line 6 (bytecode) => passed
 ... testing 'fork_cleanup.ml' with line 8 (native) => passed
 ... testing 'fork_cleanup_systhreads.ml' with line 3 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'fork_cleanup_systhreads.ml' with line 4 (not-windows) => predicate "not running on Windows" is satisfied
 ... testing 'fork_cleanup_systhreads.ml' with line 6 (bytecode) => passed
 ... testing 'fork_cleanup_systhreads.ml' with line 8 (native) => passed
 ... testing 'getaddrinfo.ml' with line 3 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'getaddrinfo.ml' with line 5 (bytecode) => passed
 ... testing 'getaddrinfo.ml' with line 7 (native) => passed
 ... testing 'gethostbyaddr.ml' with line 3 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'gethostbyaddr.ml' with line 5 (bytecode) => passed
 ... testing 'gethostbyaddr.ml' with line 7 (native) => passed
 ... testing 'multicore_fork_domain_alone.ml' with line 4 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'multicore_fork_domain_alone2.ml' with line 4 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'pipe_eof.ml' with line 3 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'pipe_eof.ml' with line 5 (bytecode) => passed
 ... testing 'pipe_eof.ml' with line 7 (native) => passed
 ... testing 'process_pid.ml' with line 3 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'process_pid.ml' with line 5 (bytecode) => passed
 ... testing 'process_pid.ml' with line 7 (native) => passed
 ... testing 'redirections.ml' with line 4 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'redirections.ml' with line 7 (setup-ocamlc.byte-build-env) => passed
 ... testing 'redirections.ml' with line 10 (ocamlc.byte) => passed
 ... testing 'redirections.ml' with line 14 (ocamlc.byte) => passed
 ... testing 'redirections.ml' with line 15 (check-ocamlc.byte-output) => passed
 ... testing 'redirections.ml' with line 16 (run) => passed
 ... testing 'redirections.ml' with line 17 (check-program-output) => passed
 ... testing 'redirections.ml' with line 20 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'redirections.ml' with line 23 (ocamlopt.byte) => passed
 ... testing 'redirections.ml' with line 27 (ocamlopt.byte) => passed
 ... testing 'redirections.ml' with line 28 (check-ocamlopt.byte-output) => passed
 ... testing 'redirections.ml' with line 29 (run) => passed
 ... testing 'redirections.ml' with line 30 (check-program-output) => passed
 ... testing 'rename.ml' with line 3 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'rename.ml' with line 5 (bytecode) => passed
 ... testing 'rename.ml' with line 7 (native) => passed
 ... testing 'test_unix_cmdline.ml' with line 3 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'test_unix_cmdline.ml' with line 6 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test_unix_cmdline.ml' with line 9 (ocamlc.byte) => passed
 ... testing 'test_unix_cmdline.ml' with line 13 (ocamlc.byte) => passed
 ... testing 'test_unix_cmdline.ml' with line 14 (check-ocamlc.byte-output) => passed
 ... testing 'test_unix_cmdline.ml' with line 15 (run) => passed
 ... testing 'test_unix_cmdline.ml' with line 16 (check-program-output) => passed
 ... testing 'test_unix_cmdline.ml' with line 19 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'test_unix_cmdline.ml' with line 22 (ocamlc.byte) => passed
 ... testing 'test_unix_cmdline.ml' with line 26 (ocamlopt.byte) => passed
 ... testing 'test_unix_cmdline.ml' with line 27 (check-ocamlopt.byte-output) => passed
 ... testing 'test_unix_cmdline.ml' with line 28 (run) => passed
 ... testing 'test_unix_cmdline.ml' with line 29 (check-program-output) => passed
 ... testing 'test_unixlabels.ml' with line 4 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'test_unixlabels.ml' with line 6 (bytecode) => passed
 ... testing 'test_unixlabels.ml' with line 8 (native) => passed
 ... testing 'truncate.ml' with line 3 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'truncate.ml' with line 5 (bytecode) => passed
 ... testing 'truncate.ml' with line 7 (native) => passed
 ... testing 'uexit.ml' with line 3 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'uexit.ml' with line 5 (bytecode) => passed
 ... testing 'uexit.ml' with line 7 (native) => passed
 ... testing 'utimes.ml' with line 4 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'utimes.ml' with line 6 (bytecode) => passed
 ... testing 'utimes.ml' with line 8 (native) => passed
 ... testing 'wait_nohang.ml' with line 3 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'wait_nohang.ml' with line 6 (setup-ocamlc.byte-build-env) => passed
 ... testing 'wait_nohang.ml' with line 9 (ocamlc.byte) => passed
 ... testing 'wait_nohang.ml' with line 13 (ocamlc.byte) => passed
 ... testing 'wait_nohang.ml' with line 14 (check-ocamlc.byte-output) => passed
 ... testing 'wait_nohang.ml' with line 15 (run) => passed
 ... testing 'wait_nohang.ml' with line 16 (check-program-output) => passed
 ... testing 'wait_nohang.ml' with line 19 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'wait_nohang.ml' with line 22 (ocamlopt.byte) => passed
 ... testing 'wait_nohang.ml' with line 26 (ocamlopt.byte) => passed
 ... testing 'wait_nohang.ml' with line 27 (check-ocamlopt.byte-output) => passed
 ... testing 'wait_nohang.ml' with line 28 (run) => passed
 ... testing 'wait_nohang.ml' with line 29 (check-program-output) => passed
Running tests from 'tests/lib-unix/isatty' ...
 ... testing 'isatty_std.ml' with line 5 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'isatty_std.ml' with line 7 (bytecode) => passed
 ... testing 'isatty_std.ml' with line 9 (native) => passed
 ... testing 'isatty_tty.ml' with line 3 (libwin32unix) => predicate "win32 variant of the unix library available" is not satisfied
Running tests from 'tests/lib-unix/kill' ...
 ... testing 'unix_kill.ml' with line 3 (libunix) => predicate "libunix available" is satisfied
 ... testing 'unix_kill.ml' with line 5 (bytecode) => passed
 ... testing 'unix_kill.ml' with line 7 (native) => passed
Running tests from 'tests/lib-unix/realpath' ...
 ... testing 'test.ml' with line 3 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'test.ml' with line 5 (bytecode) => passed
 ... testing 'test.ml' with line 7 (native) => passed
Running tests from 'tests/lib-unix/unix-execvpe' ...
 ... testing 'exec.ml' with line 5 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'exec.ml' with line 6 (script) => skipped ()
Running tests from 'tests/lib-unix/unix-socket' ...
 ... testing 'recvfrom_linux.ml' with line 5 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'recvfrom_linux.ml' with line 6 (script) => passed
 ... testing 'recvfrom_linux.ml' with line 8 (bytecode) => passed
 ... testing 'recvfrom_linux.ml' with line 10 (native) => passed
 ... testing 'recvfrom_unix.ml' with line 4 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'recvfrom_unix.ml' with line 5 (not-windows) => predicate "not running on Windows" is satisfied
 ... testing 'recvfrom_unix.ml' with line 7 (bytecode) => passed
 ... testing 'recvfrom_unix.ml' with line 9 (native) => passed
Running tests from 'tests/lib-unix/win-channel-of' ...
 ... testing 'parallel_channel_of.ml' with line 4 (libwin32unix) => predicate "win32 variant of the unix library available" is not satisfied
Running tests from 'tests/lib-unix/win-createprocess' ...
 ... testing 'test.ml' with line 3 (libwin32unix) => predicate "win32 variant of the unix library available" is not satisfied
Running tests from 'tests/lib-unix/win-env' ...
 ... testing 'test_env.ml' with line 7 (libwin32unix) => predicate "win32 variant of the unix library available" is not satisfied
Running tests from 'tests/lib-unix/win-socketpair' ...
 ... testing 'test.ml' with line 3 (libwin32unix) => predicate "win32 variant of the unix library available" is not satisfied
Running tests from 'tests/lib-unix/win-stat' ...
 ... testing 'test.ml' with line 4 (libwin32unix) => predicate "win32 variant of the unix library available" is not satisfied
Running tests from 'tests/lib-unix/win-symlink' ...
 ... testing 'parallel_symlink.ml' with line 3 (libwin32unix) => predicate "win32 variant of the unix library available" is not satisfied
 ... testing 'test.ml' with line 3 (libwin32unix) => predicate "win32 variant of the unix library available" is not satisfied
Running tests from 'tests/link-test' ...
 ... testing 'empty.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'empty.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'empty.ml' with line 10 (ocamlc.byte) => passed
 ... testing 'empty.ml' with line 14 (ocamlc.byte) => passed
 ... testing 'empty.ml' with line 15 (check-ocamlc.byte-output) => passed
 ... testing 'empty.ml' with line 17 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'empty.ml' with line 19 (ocamlopt.byte) => passed
 ... testing 'empty.ml' with line 24 (ocamlopt.byte) => passed
 ... testing 'empty.ml' with line 28 (ocamlopt.byte) => passed
 ... testing 'empty.ml' with line 29 (check-ocamlopt.byte-output) => passed
 ... testing 'test.ml' with line 5 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 8 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 10 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 12 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 14 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 16 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 18 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 20 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 25 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 28 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 33 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 37 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 38 (check-ocamlc.byte-output) => passed
 ... testing 'test.ml' with line 39 (run) => passed
 ... testing 'test.ml' with line 40 (check-program-output) => passed
 ... testing 'test.ml' with line 43 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'test.ml' with line 46 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 48 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 50 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 52 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 54 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 56 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 58 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 63 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 66 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 71 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 75 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 76 (check-ocamlopt.byte-output) => passed
 ... testing 'test.ml' with line 77 (run) => passed
 ... testing 'test.ml' with line 78 (check-program-output) => passed
Running tests from 'tests/load_path' ...
 ... testing 'test.ml' with line 3 (setup-ocaml-build-env) => passed
 ... testing 'test.ml' with line 6 (ocaml) => passed
Running tests from 'tests/locale' ...
 ... testing 'test.ml' with default (native) => passed
 ... testing 'test.ml' with default (bytecode) => passed
Running tests from 'tests/local-functions' ...
 ... testing 'non_local.ml' with default (native) => passed
 ... testing 'non_local.ml' with default (bytecode) => passed
 ... testing 'tupled.ml' with default (native) => passed
 ... testing 'tupled.ml' with default (bytecode) => passed
 ... testing 'tupled2.ml' with default (native) => passed
 ... testing 'tupled2.ml' with default (bytecode) => passed
Fatal error: exception Sys_error("tests/Makefile: Not a directory")
Raised by primitive operation at Main.find_test_dirs.loop in file "ocamltest/main.ml", line 316, characters 8-25
Called from Main.find_test_dirs in file "ocamltest/main.ml", line 319, characters 2-10
Called from Main.find_test_dirs in file "ocamltest/main.ml", line 355, characters 51-71
Called from Stdlib__List.iter in file "list.ml", line 110, characters 12-15
Called from Main in file "ocamltest/main.ml", line 357, characters 2-56
Running tests from 'tests/manual-intf-c' ...
 ... testing 'prog.ml' with line 4 (skip) => skipped (curses can not be properly detected at the moment)
Running tests from 'tests/match-exception' ...
 ... testing 'allocation.ml' with default (native) => passed
 ... testing 'allocation.ml' with default (bytecode) => passed
 ... testing 'exception_propagation.ml' with default (native) => passed
 ... testing 'exception_propagation.ml' with default (bytecode) => passed
 ... testing 'identifier_sharing.ml' with default (native) => passed
 ... testing 'identifier_sharing.ml' with default (bytecode) => passed
 ... testing 'match_failure.ml' with default (native) => passed
 ... testing 'match_failure.ml' with default (bytecode) => passed
 ... testing 'nested_handlers.ml' with default (native) => passed
 ... testing 'nested_handlers.ml' with default (bytecode) => passed
 ... testing 'raise_from_success_continuation.ml' with default (native) => passed
 ... testing 'raise_from_success_continuation.ml' with default (bytecode) => passed
 ... testing 'streams.ml' with default (native) => passed
 ... testing 'streams.ml' with default (bytecode) => passed
 ... testing 'tail_calls.ml' with default (native) => passed
 ... testing 'tail_calls.ml' with default (bytecode) => passed
Running tests from 'tests/match-exception-warnings' ...
 ... testing 'exhaustiveness_warnings.ml' with line 2 (expect) => passed
 ... testing 'no_mixing_under_guard.ml' with line 2 (expect) => passed
 ... testing 'no_value_clauses.ml' with line 2 (expect) => passed
 ... testing 'placement.ml' with line 2 (expect) => passed
 ... testing 'pr7083.ml' with line 2 (expect) => passed
 ... testing 'reachability.ml' with line 2 (expect) => passed
Running tests from 'tests/match-side-effects' ...
 ... testing 'partiality.ml' with line 3 (stack-allocation) => predicate "Stack allocation enabled" is satisfied
 ... testing 'partiality.ml' with line 4 (expect) => passed
 ... testing 'test_contexts_code.ml' with line 4 (stack-allocation) => predicate "Stack allocation enabled" is satisfied
 ... testing 'test_contexts_code.ml' with line 5 (expect) => passed
 ... testing 'test_contexts_results.ml' with line 3 (expect) => passed
Running tests from 'tests/memory-model' ...
 ... testing 'forbidden.ml' with line 4 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'publish.ml' with line 4 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
Running tests from 'tests/messages' ...
 ... testing 'highlight_tabs.ml' with line 2 (expect) => passed
 ... testing 'precise_locations.ml' with line 2 (expect) => passed
 ... testing 'spellcheck.ml' with line 2 (expect) => passed
Running tests from 'tests/misc' ...
 ... testing 'bdd.ml' with default (native) => passed
 ... testing 'bdd.ml' with default (bytecode) => passed
 ... testing 'boyer.ml' with default (native) => passed
 ... testing 'boyer.ml' with default (bytecode) => passed
 ... testing 'exotic.ml' with line 3 (expect) => passed
 ... testing 'fib.ml' with default (native) => passed
 ... testing 'fib.ml' with default (bytecode) => passed
 ... testing 'gc_mark_stack_overflow.ml' with default (native) => passed
 ... testing 'gc_mark_stack_overflow.ml' with default (bytecode) => passed
 ... testing 'gctweaks.ml' with line 2 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'gcwords.ml' with default (native) => passed
 ... testing 'gcwords.ml' with default (bytecode) => passed
 ... testing 'gpr1370.ml' with default (native) => passed
 ... testing 'gpr1370.ml' with default (bytecode) => passed
 ... testing 'hamming.ml' with default (native) => passed
 ... testing 'hamming.ml' with default (bytecode) => passed
 ... testing 'nucleic.ml' with default (native) => passed
 ... testing 'nucleic.ml' with default (bytecode) => passed
 ... testing 'pr7168.ml' with line 3 (no-tsan) => predicate "tsan not available" is satisfied
 ... testing 'pr7168.ml' with line 5 (bytecode) => passed
 ... testing 'pr7168.ml' with line 8 (native) => passed
 ... testing 'sieve.ml' with default (native) => passed
 ... testing 'sieve.ml' with default (bytecode) => passed
 ... testing 'sorts.ml' with default (native) => passed
 ... testing 'sorts.ml' with default (bytecode) => passed
 ... testing 'takc.ml' with default (native) => passed
 ... testing 'takc.ml' with default (bytecode) => passed
 ... testing 'taku.ml' with default (native) => passed
 ... testing 'taku.ml' with default (bytecode) => passed
Running tests from 'tests/misc-kb' ...
 ... testing 'kbmain.ml' with default (native) => passed
 ... testing 'kbmain.ml' with default (bytecode) => passed
Running tests from 'tests/misc-unsafe' ...
 ... testing 'almabench.ml' with default (native) => passed
 ... testing 'almabench.ml' with default (bytecode) => passed
 ... testing 'fft.ml' with default (native) => passed
 ... testing 'fft.ml' with default (bytecode) => passed
 ... testing 'quicksort.ml' with default (native) => passed
 ... testing 'quicksort.ml' with default (bytecode) => passed
 ... testing 'soli.ml' with default (native) => passed
 ... testing 'soli.ml' with default (bytecode) => passed
Running tests from 'tests/mixed-blocks' ...
 ... testing 'closure_padding_float32.ml' with line 2 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'constructor_args.ml' with line 3 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'constructor_args.ml' with line 7 (native) => passed
 ... testing 'constructor_args.ml' with line 9 (bytecode) => passed
 ... testing 'generated_byte_test.ml' with line 5 (bytecode) => passed
 ... testing 'generated_native_test.ml' with line 5 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'generated_native_test.ml' with line 6 (native) => passed
 ... testing 'hash.ml' with line 3 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'hash.ml' with line 5 (native) => passed
 ... testing 'hash.ml' with line 7 (bytecode) => passed
 ... testing 'recursive_mixed_blocks.ml' with line 3 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'recursive_mixed_blocks.ml' with line 5 (native) => passed
 ... testing 'recursive_mixed_blocks.ml' with line 7 (bytecode) => passed
 ... testing 'structural_constants.ml' with line 2 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'structural_constants.ml' with line 4 (bytecode) => passed
 ... testing 'structural_constants.ml' with line 5 (native) => passed
 ... testing 'test.ml' with line 7 (setup-ocamlopt.opt-build-env) => passed
 ... testing 'test.ml' with line 10 (ocamlopt.opt) => passed
 ... testing 'test.ml' with line 13 (run) => passed
 ... testing 'test.ml' with line 16 (check-program-output) => passed
 ... testing 'test.ml' with line 19 (setup-ocamlopt.opt-build-env) => passed
 ... testing 'test.ml' with line 22 (ocamlopt.opt) => passed
 ... testing 'test.ml' with line 25 (run) => passed
 ... testing 'test.ml' with line 28 (check-program-output) => passed
 ... testing 'test_mixed_blocks.ml' with line 2 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'test_mixed_blocks.ml' with line 6 (native) => passed
 ... testing 'test_mixed_blocks.ml' with line 9 (bytecode) => passed
 ... testing 'test_printing.ml' with line 3 (expect) => passed
 ... testing 'typing_recursive_mixed_blocks.ml' with line 3 (expect) => passed
 ... testing 'variant_unboxing.ml' with line 3 (native) => passed
Running tests from 'tests/no-alias-deps' ...
 ... testing 'aliases.ml' with line 27 (setup-ocamlc.byte-build-env) => passed
 ... testing 'aliases.ml' with line 30 (copy) => passed
 ... testing 'aliases.ml' with line 32 (ocamlc.byte) => passed
 ... testing 'aliases.ml' with line 33 (check-ocamlc.byte-output) => passed
 ... testing 'aliases.ml' with line 35 (ocamlobjinfo) => passed
 ... testing 'aliases.ml' with line 36 (check-program-output) => passed
 ... testing 'gpr2235.ml' with line 5 (setup-ocamlc.byte-build-env) => passed
 ... testing 'gpr2235.ml' with line 7 (ocamlc.byte) => passed
 ... testing 'gpr2235.ml' with line 8 (check-ocamlc.byte-output) => passed
 ... testing 'gpr2235.ml' with line 11 (ocamlc.byte) => passed
 ... testing 'gpr2235.ml' with line 12 (check-ocamlc.byte-output) => passed
 ... testing 'gpr2235.ml' with line 15 (ocamlc.byte) => passed
 ... testing 'gpr2235.ml' with line 16 (check-ocamlc.byte-output) => passed
 ... testing 'gpr2235.ml' with line 19 (ocamlc.byte) => passed
 ... testing 'gpr2235.ml' with line 20 (check-ocamlc.byte-output) => passed
Running tests from 'tests/opaque' ...
 ... testing 'test.ml' with line 4 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'test.ml' with line 7 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 10 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 13 (copy) => passed
 ... testing 'test.ml' with line 16 (copy) => passed
 ... testing 'test.ml' with line 19 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 22 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 25 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 28 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 31 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 36 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 41 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 46 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 52 (ocamlopt.byte) => passed
Running tests from 'tests/output-complete-obj' ...
 ... testing 'github9344.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'github9344.ml' with line 6 (ocamlc.byte) => passed
 ... testing 'github9344.ml' with line 8 (run) => passed
 ... testing 'github9344.ml' with line 9 (check-program-output) => passed
 ... testing 'test.ml' with line 2 (no-tsan) => predicate "tsan not available" is satisfied
 ... testing 'test.ml' with line 5 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 8 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 11 (script) => passed
 ... testing 'test.ml' with line 15 (run) => passed
 ... testing 'test.ml' with line 17 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'test.ml' with line 20 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 23 (script) => passed
 ... testing 'test.ml' with line 27 (run) => passed
 ... testing 'test2.ml' with line 6 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'test2.ml' with line 7 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test2.ml' with line 10 (ocamlc.byte) => passed
 ... testing 'test2.ml' with line 12 (run) => passed
 ... testing 'test2.ml' with line 13 (check-program-output) => passed
Running tests from 'tests/packs/basic' ...
 ... testing 'main.ml' with line 4 (setup-ocamlc.byte-build-env) => passed
 ... testing 'main.ml' with line 7 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 12 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 15 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 19 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 21 (run) => passed
 ... testing 'main.ml' with line 22 (check-program-output) => passed
 ... testing 'main.ml' with line 24 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'main.ml' with line 27 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 32 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 35 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 39 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 41 (run) => passed
 ... testing 'main.ml' with line 42 (check-program-output) => passed
Running tests from 'tests/packs/inconsistent' ...
 ... testing 'main.ml' with line 3 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'main.ml' with line 6 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 8 (script) => passed
 ... testing 'main.ml' with line 10 (script) => passed
 ... testing 'main.ml' with line 12 (cd) => passed
 ... testing 'main.ml' with line 15 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 17 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 19 (cd) => passed
 ... testing 'main.ml' with line 23 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 24 (check-ocamlopt.byte-output) => passed
Running tests from 'tests/parallel' ...
 ... testing 'atomics.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'backup_thread.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'backup_thread_pipe.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'catch_break.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'constpromote.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'deadcont.ml' with line 3 (skip) => skipped (CR ocaml 5 effects: re-enable this test)
 ... testing 'domain_dls.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'domain_dls2.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'domain_id.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'domain_parallel_spawn_burn.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'domain_parallel_spawn_burn_gc_set.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'domain_serial_spawn_burn.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'fib_threads.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'join.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'major_gc_wait_backup.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'mctest.ml' with line 3 (skip) => skipped (CR ocaml 5 effects: re-enable this test)
 ... testing 'multicore_systhreads.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'pingpong.ml' with line 2 (no-tsan) => predicate "tsan not available" is satisfied
 ... testing 'pingpong.ml' with line 4 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'poll.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'prodcons_domains.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'recommended_domain_count.ml' with line 4 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'recommended_domain_count_unix.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'tak.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'test_c_thread_register.ml' with line 4 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'test_issue_11094.ml' with line 3 (skip) => skipped (CR ocaml 5 effects: re-enable this test)
Running tests from 'tests/parse-errors' ...
 ... testing 'bigarray_index_labels.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'bigarray_index_labels.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'bigarray_index_labels.ml' with line 6 (check-ocamlc.byte-output) => passed
 ... testing 'escape_error.ml' with line 15 (toplevel) => passed
 ... testing 'expecting.ml' with line 38 (toplevel) => passed
 ... testing 'mismatch_struct_sig.ml' with line 43 (toplevel) => passed
 ... testing 'pr7847.ml' with line 13 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr7847.ml' with line 15 (ocamlc.byte) => passed
 ... testing 'pr7847.ml' with line 16 (check-ocamlc.byte-output) => passed
 ... testing 'singleton_labeled_tuple_type.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'singleton_labeled_tuple_type.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'singleton_labeled_tuple_type.ml' with line 6 (check-ocamlc.byte-output) => passed
 ... testing 'unclosed_class_signature.mli' with line 2 (setup-ocamlc.byte-build-env) => passed
 ... testing 'unclosed_class_signature.mli' with line 4 (ocamlc.byte) => passed
 ... testing 'unclosed_class_signature.mli' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'unclosed_class_simpl_expr1.ml' with line 2 (setup-ocamlc.byte-build-env) => passed
 ... testing 'unclosed_class_simpl_expr1.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'unclosed_class_simpl_expr1.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'unclosed_class_simpl_expr2.ml' with line 2 (setup-ocamlc.byte-build-env) => passed
 ... testing 'unclosed_class_simpl_expr2.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'unclosed_class_simpl_expr2.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'unclosed_class_simpl_expr3.ml' with line 2 (setup-ocamlc.byte-build-env) => passed
 ... testing 'unclosed_class_simpl_expr3.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'unclosed_class_simpl_expr3.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'unclosed_object.ml' with line 2 (setup-ocamlc.byte-build-env) => passed
 ... testing 'unclosed_object.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'unclosed_object.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'unclosed_paren_module_expr1.ml' with line 2 (setup-ocamlc.byte-build-env) => passed
 ... testing 'unclosed_paren_module_expr1.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'unclosed_paren_module_expr1.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'unclosed_paren_module_expr2.ml' with line 2 (setup-ocamlc.byte-build-env) => passed
 ... testing 'unclosed_paren_module_expr2.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'unclosed_paren_module_expr2.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'unclosed_paren_module_expr3.ml' with line 2 (setup-ocamlc.byte-build-env) => passed
 ... testing 'unclosed_paren_module_expr3.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'unclosed_paren_module_expr3.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'unclosed_paren_module_expr4.ml' with line 2 (setup-ocamlc.byte-build-env) => passed
 ... testing 'unclosed_paren_module_expr4.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'unclosed_paren_module_expr4.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'unclosed_paren_module_expr5.ml' with line 2 (setup-ocamlc.byte-build-env) => passed
 ... testing 'unclosed_paren_module_expr5.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'unclosed_paren_module_expr5.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'unclosed_paren_module_type.mli' with line 2 (setup-ocamlc.byte-build-env) => passed
 ... testing 'unclosed_paren_module_type.mli' with line 4 (ocamlc.byte) => passed
 ... testing 'unclosed_paren_module_type.mli' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'unclosed_sig.mli' with line 2 (setup-ocamlc.byte-build-env) => passed
 ... testing 'unclosed_sig.mli' with line 4 (ocamlc.byte) => passed
 ... testing 'unclosed_sig.mli' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'unclosed_simple_expr.ml' with line 2 (toplevel) => passed
 ... testing 'unclosed_simple_pattern.ml' with line 2 (toplevel) => passed
 ... testing 'unclosed_struct.ml' with line 2 (setup-ocamlc.byte-build-env) => passed
 ... testing 'unclosed_struct.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'unclosed_struct.ml' with line 5 (check-ocamlc.byte-output) => passed
Running tests from 'tests/parsetree' ...
 ... testing 'locations_test.ml' with line 148 (toplevel) => passed
 ... testing 'modes_ast_mapper.ml' with default (native) => passed
 ... testing 'modes_ast_mapper.ml' with default (bytecode) => passed
 ... testing 'test.ml' with default (native) => passed
 ... testing 'test.ml' with default (bytecode) => passed
 ... testing 'test_ppx.ml' with line 5 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test_ppx.ml' with line 8 (ocamlc.byte) => passed
 ... testing 'test_ppx.ml' with line 11 (ocamlc.byte) => passed
 ... testing 'test_ppx.ml' with line 12 (check-ocamlc.byte-output) => passed
Running tests from 'tests/parsing' ...
 ... testing 'anonymous_class_parameter.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'anonymous_class_parameter.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'anonymous_class_parameter.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'arrow_ambiguity.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'arrow_ambiguity.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'arrow_ambiguity.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'assert_location.ml' with default (native) => passed
 ... testing 'assert_location.ml' with default (bytecode) => passed
 ... testing 'attributes.ml' with line 71 (setup-ocamlc.byte-build-env) => passed
 ... testing 'attributes.ml' with line 72 (ocamlc.byte) => passed
 ... testing 'attributes.ml' with line 73 (check-ocamlc.byte-output) => passed
 ... testing 'broken_invariants.ml' with line 29 (setup-ocamlc.byte-build-env) => passed
 ... testing 'broken_invariants.ml' with line 32 (ocamlc.byte) => passed
 ... testing 'broken_invariants.ml' with line 35 (toplevel) => passed
 ... testing 'change_start_loc.ml' with default (native) => passed
 ... testing 'change_start_loc.ml' with default (bytecode) => passed
 ... testing 'constructor_declarations.ml' with line 29 (setup-ocamlc.byte-build-env) => passed
 ... testing 'constructor_declarations.ml' with line 30 (ocamlc.byte) => passed
 ... testing 'constructor_declarations.ml' with line 31 (check-ocamlc.byte-output) => passed
 ... testing 'docstrings.ml' with line 3 (expect) => passed
 ... testing 'extended_indexoperators.ml' with line 3 (expect) => passed
 ... testing 'extension_operators.ml' with line 2 (expect) => passed
 ... testing 'extensions.ml' with line 30 (setup-ocamlc.byte-build-env) => passed
 ... testing 'extensions.ml' with line 31 (ocamlc.byte) => passed
 ... testing 'extensions.ml' with line 32 (check-ocamlc.byte-output) => passed
 ... testing 'hash_ambiguity.ml' with line 21 (setup-ocamlc.byte-build-env) => passed
 ... testing 'hash_ambiguity.ml' with line 22 (ocamlc.byte) => passed
 ... testing 'hash_ambiguity.ml' with line 23 (check-ocamlc.byte-output) => passed
 ... testing 'include_functor.ml' with line 3 (expect) => passed
 ... testing 'int_and_float_with_modifier.ml' with line 27 (setup-ocamlc.byte-build-env) => passed
 ... testing 'int_and_float_with_modifier.ml' with line 28 (ocamlc.byte) => passed
 ... testing 'int_and_float_with_modifier.ml' with line 29 (check-ocamlc.byte-output) => passed
 ... testing 'multi_indices.ml' with line 3 (expect) => passed
 ... testing 'pr10468.ml' with line 3 (expect) => passed
 ... testing 'pr6604.ml' with line 14 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6604.ml' with line 15 (ocamlc.byte) => passed
 ... testing 'pr6604.ml' with line 16 (check-ocamlc.byte-output) => passed
 ... testing 'pr6604_2.ml' with line 14 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6604_2.ml' with line 15 (ocamlc.byte) => passed
 ... testing 'pr6604_2.ml' with line 16 (check-ocamlc.byte-output) => passed
 ... testing 'pr6604_3.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6604_3.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr6604_3.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr6865.ml' with line 16 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6865.ml' with line 17 (ocamlc.byte) => passed
 ... testing 'pr6865.ml' with line 18 (check-ocamlc.byte-output) => passed
 ... testing 'pr7165.ml' with line 17 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr7165.ml' with line 18 (ocamlc.byte) => passed
 ... testing 'pr7165.ml' with line 19 (check-ocamlc.byte-output) => passed
 ... testing 'quotedextensions.ml' with line 47 (setup-ocamlc.byte-build-env) => passed
 ... testing 'quotedextensions.ml' with line 48 (ocamlc.byte) => passed
 ... testing 'quotedextensions.ml' with line 49 (check-ocamlc.byte-output) => passed
 ... testing 'rawidents.ml' with line 2 (expect) => passed
 ... testing 'reloc.ml' with line 4 (expect) => passed
 ... testing 'shortcut_ext_attr.ml' with line 125 (setup-ocamlc.byte-build-env) => passed
 ... testing 'shortcut_ext_attr.ml' with line 126 (ocamlc.byte) => passed
 ... testing 'shortcut_ext_attr.ml' with line 127 (check-ocamlc.byte-output) => passed
Running tests from 'tests/ppx-attributes' ...
 ... testing 'inline.ml' with line 3 (expect) => passed
 ... testing 'warning.ml' with default (native) => passed
 ... testing 'warning.ml' with default (bytecode) => passed
Running tests from 'tests/ppx-contexts' ...
 ... testing 'test.ml' with line 4 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 7 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 10 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 13 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 14 (check-ocamlc.byte-output) => passed
Running tests from 'tests/ppx-empty-cases' ...
 ... testing 'test.ml' with line 41 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 44 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 47 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 48 (check-ocamlc.byte-output) => passed
Running tests from 'tests/ppx-error-message' ...
 ... testing 'test.ml' with line 4 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 7 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 11 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 12 (check-ocamlc.byte-output) => passed
Running tests from 'tests/prim-bigstring' ...
 ... testing 'bigstring_access.ml' with default (native) => passed
 ... testing 'bigstring_access.ml' with default (bytecode) => passed
 ... testing 'non_existent_primitives.ml' with line 2 (expect) => passed
 ... testing 'string_access.ml' with default (native) => passed
 ... testing 'string_access.ml' with default (bytecode) => passed
Running tests from 'tests/prim-bswap' ...
 ... testing 'bswap.ml' with default (native) => passed
 ... testing 'bswap.ml' with default (bytecode) => passed
 ... testing 'bswap32roundtrip.ml' with default (native) => passed
 ... testing 'bswap32roundtrip.ml' with default (bytecode) => passed
Running tests from 'tests/prim-revapply' ...
 ... testing 'apply.ml' with default (native) => passed
 ... testing 'apply.ml' with default (bytecode) => passed
 ... testing 'revapply.ml' with default (native) => passed
 ... testing 'revapply.ml' with default (bytecode) => passed
Running tests from 'tests/printing-types' ...
 ... testing 'disambiguation.ml' with line 2 (expect) => passed
 ... testing 'existentials.ml' with line 2 (expect) => passed
 ... testing 'pr248.ml' with line 2 (toplevel) => passed
 ... testing 'test_multiple_files.ml' with line 3 (setup-ocamlopt.opt-build-env) => passed
 ... testing 'test_multiple_files.ml' with line 6 (ocamlopt.opt) => passed
 ... testing 'test_multiple_files.ml' with line 9 (ocamlopt.opt) => passed
 ... testing 'test_multiple_files.ml' with line 10 (check-ocamlopt.opt-output) => passed
Running tests from 'tests/profile/counters/language_extensions' ...
 ... testing 'test.ml' with line 4 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 13 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 14 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 17 (check-ocamlc.byte-output) => passed
 ... testing 'test.ml' with line 21 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 22 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 25 (check-ocamlc.byte-output) => passed
 ... testing 'test.ml' with line 32 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 33 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 36 (check-ocamlc.byte-output) => passed
 ... testing 'test.ml' with line 43 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 44 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 47 (check-ocamlc.byte-output) => passed
 ... testing 'test.ml' with line 51 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 52 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 55 (check-ocamlc.byte-output) => passed
 ... testing 'test.ml' with line 62 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 63 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 66 (check-ocamlc.byte-output) => passed
 ... testing 'test.ml' with line 70 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 71 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 74 (check-ocamlc.byte-output) => passed
 ... testing 'test.ml' with line 81 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 82 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 85 (check-ocamlc.byte-output) => passed
 ... testing 'test.ml' with line 89 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 90 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 93 (check-ocamlc.byte-output) => passed
 ... testing 'test.ml' with line 100 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 101 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 104 (check-ocamlc.byte-output) => passed
 ... testing 'test.ml' with line 108 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 109 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 112 (check-ocamlc.byte-output) => passed
 ... testing 'test.ml' with line 119 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 120 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 123 (check-ocamlc.byte-output) => passed
 ... testing 'test.ml' with line 127 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 128 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 131 (check-ocamlc.byte-output) => passed
Running tests from 'tests/raise-counts' ...
 ... testing 'main.ml' with default (native) => passed
 ... testing 'main.ml' with default (bytecode) => passed
Running tests from 'tests/regression/gpr1623' ...
 ... testing 'gpr1623.ml' with default (native) => passed
 ... testing 'gpr1623.ml' with default (bytecode) => passed
Running tests from 'tests/regression/missing_set_of_closures' ...
 ... testing 'missing_set_of_closures.ml' with line 4 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'missing_set_of_closures.ml' with line 6 (ocamlopt.byte) => passed
 ... testing 'missing_set_of_closures.ml' with line 8 (ocamlopt.byte) => passed
 ... testing 'missing_set_of_closures.ml' with line 10 (ocamlopt.byte) => passed
 ... testing 'missing_set_of_closures.ml' with line 13 (copy) => passed
 ... testing 'missing_set_of_closures.ml' with line 15 (cd) => passed
 ... testing 'missing_set_of_closures.ml' with line 18 (ocamlopt.byte) => passed
 ... testing 'missing_set_of_closures.ml' with line 19 (check-ocamlopt.byte-output) => passed
Running tests from 'tests/regression/pr10611' ...
 ... testing 'pr10611.ml' with default (native) => passed
 ... testing 'pr10611.ml' with default (bytecode) => passed
Running tests from 'tests/regression/pr11887' ...
 ... testing 'pr11887.ml' with line 3 (native) => passed
Running tests from 'tests/regression/pr1580' ...
 ... testing 'pr1580.ml' with default (native) => passed
 ... testing 'pr1580.ml' with default (bytecode) => passed
Running tests from 'tests/regression/pr2098' ...
 ... testing 'in_minor_collection.ml' with line 3 (not-windows) => predicate "not running on Windows" is satisfied
 ... testing 'in_minor_collection.ml' with line 4 (native) => passed
Running tests from 'tests/regression/pr3612' ...
 ... testing 'pr3612.ml' with default (native) => passed
 ... testing 'pr3612.ml' with default (bytecode) => passed
Running tests from 'tests/regression/pr5233' ...
 ... testing 'pr5233.ml' with default (native) => passed
 ... testing 'pr5233.ml' with default (bytecode) => passed
Running tests from 'tests/regression/pr5757' ...
 ... testing 'pr5757.ml' with default (native) => passed
 ... testing 'pr5757.ml' with default (bytecode) => passed
Running tests from 'tests/regression/pr6024' ...
 ... testing 'pr6024.ml' with default (native) => passed
 ... testing 'pr6024.ml' with default (bytecode) => passed
Running tests from 'tests/regression/pr7042' ...
 ... testing 'pr7042.ml' with default (native) => passed
 ... testing 'pr7042.ml' with default (bytecode) => passed
Running tests from 'tests/regression/pr7426' ...
 ... testing 'pr7426.ml' with default (native) => passed
 ... testing 'pr7426.ml' with default (bytecode) => passed
Running tests from 'tests/regression/pr7718' ...
 ... testing 'pr7718.ml' with default (native) => passed
 ... testing 'pr7718.ml' with default (bytecode) => passed
Running tests from 'tests/regression/pr7798' ...
 ... testing 'pr7798.ml' with line 3 (bytecode) => passed
 ... testing 'pr7798.ml' with line 5 (native) => passed
 ... testing 'pr7798.ml' with line 8 (native) => passed
Running tests from 'tests/regression/pr7920' ...
 ... testing 'pr7920.ml' with default (native) => passed
 ... testing 'pr7920.ml' with default (bytecode) => passed
Running tests from 'tests/regression/pr8769' ...
 ... testing 'pr8769.ml' with line 4 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr8769.ml' with line 7 (ocamlc.byte) => passed
 ... testing 'pr8769.ml' with line 11 (ocamlc.byte) => passed
 ... testing 'pr8769.ml' with line 15 (ocamlc.byte) => passed
 ... testing 'pr8769.ml' with line 20 (ocamlc.byte) => passed
 ... testing 'pr8769.ml' with line 23 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'pr8769.ml' with line 26 (ocamlopt.byte) => passed
 ... testing 'pr8769.ml' with line 30 (ocamlopt.byte) => passed
 ... testing 'pr8769.ml' with line 34 (ocamlopt.byte) => passed
 ... testing 'pr8769.ml' with line 39 (ocamlopt.byte) => passed
Running tests from 'tests/regression/pr9028' ...
 ... testing 'pr9028.ml' with default (native) => passed
 ... testing 'pr9028.ml' with default (bytecode) => passed
Running tests from 'tests/regression/pr9292' ...
 ... testing 'pr9292.ml' with default (native) => passed
 ... testing 'pr9292.ml' with default (bytecode) => passed
Running tests from 'tests/regression/pr9326' ...
 ... testing 'gc_set.ml' with default (native) => passed
 ... testing 'gc_set.ml' with default (bytecode) => passed
Running tests from 'tests/regression/pr9443' ...
 ... testing 'pr9443.ml' with default (native) => passed
 ... testing 'pr9443.ml' with default (bytecode) => passed
Running tests from 'tests/regression/pr9853' ...
 ... testing 'compaction_corner_case.ml' with line 2 (no-tsan) => predicate "tsan not available" is satisfied
 ... testing 'compaction_corner_case.ml' with line 4 (bytecode) => passed
 ... testing 'compaction_corner_case.ml' with line 7 (native) => passed
Running tests from 'tests/reinterpret-casts' ...
 ... testing 'i64_i63_reinterpret.ml' with default (native) => passed
 ... testing 'i64_i63_reinterpret.ml' with default (bytecode) => passed
Running tests from 'tests/reproducibility' ...
 ... testing 'cmis_on_file_system.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'cmis_on_file_system.ml' with line 7 (ocamlc.byte) => passed
 ... testing 'cmis_on_file_system.ml' with line 9 (script) => passed
 ... testing 'cmis_on_file_system.ml' with line 12 (ocamlc.byte) => passed
 ... testing 'cmis_on_file_system.ml' with line 16 (ocamlc.byte) => passed
 ... testing 'cmis_on_file_system.ml' with line 19 (compare-binary-files) => passed
Running tests from 'tests/required-external' ...
 ... testing 'main.ml' with line 5 (setup-ocamlc.byte-build-env) => passed
 ... testing 'main.ml' with line 7 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 12 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 16 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 17 (check-ocamlc.byte-output) => passed
 ... testing 'main.ml' with line 18 (run) => passed
 ... testing 'main.ml' with line 19 (check-program-output) => passed
 ... testing 'main.ml' with line 22 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'main.ml' with line 24 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 29 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 33 (ocamlopt.byte) => passed
 ... testing 'main.ml' with line 34 (check-ocamlopt.byte-output) => passed
 ... testing 'main.ml' with line 35 (run) => passed
 ... testing 'main.ml' with line 36 (check-program-output) => passed
Running tests from 'tests/runtime-C-exceptions' ...
 ... testing 'test.ml' with default (native) => passed
 ... testing 'test.ml' with default (bytecode) => passed
Running tests from 'tests/runtime-errors' ...
 ... testing 'stackoverflow.ml' with line 54 (no-tsan) => predicate "tsan not available" is satisfied
 ... testing 'stackoverflow.ml' with line 55 (flambda) => predicate "support for flambda enabled" is satisfied
 ... testing 'stackoverflow.ml' with line 58 (bytecode) => passed
 ... testing 'stackoverflow.ml' with line 61 (native) => passed
 ... testing 'syserror.ml' with line 4 (setup-ocamlc.byte-build-env) => passed
 ... testing 'syserror.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'syserror.ml' with line 7 (run) => passed
 ... testing 'syserror.ml' with line 9 (libunix) => predicate "libunix available" is satisfied
 ... testing 'syserror.ml' with line 11 (check-program-output) => passed
 ... testing 'syserror.ml' with line 13 (libwin32unix) => predicate "win32 variant of the unix library available" is not satisfied
 ... testing 'syserror.ml' with line 18 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'syserror.ml' with line 19 (ocamlopt.byte) => passed
 ... testing 'syserror.ml' with line 21 (run) => passed
 ... testing 'syserror.ml' with line 23 (libunix) => predicate "libunix available" is satisfied
 ... testing 'syserror.ml' with line 25 (check-program-output) => passed
 ... testing 'syserror.ml' with line 27 (libwin32unix) => predicate "win32 variant of the unix library available" is not satisfied
Running tests from 'tests/runtime-naked-pointers' ...
 ... testing 'np1.ml' with line 3 (runtime4) => predicate "4.x runtime being used" is satisfied
 ... testing 'np1.ml' with line 5 (bytecode) => passed
 ... testing 'np1.ml' with line 7 (native) => passed
 ... testing 'np2.ml' with line 3 (runtime4) => predicate "4.x runtime being used" is satisfied
 ... testing 'np2.ml' with line 5 (bytecode) => passed
 ... testing 'np2.ml' with line 7 (native) => passed
 ... testing 'np3.ml' with line 3 (runtime4) => predicate "4.x runtime being used" is satisfied
 ... testing 'np3.ml' with line 4 (naked_pointers) => predicate "Runtime system supports naked pointers" is satisfied
 ... testing 'np3.ml' with line 6 (bytecode) => passed
 ... testing 'np3.ml' with line 8 (native) => passed
 ... testing 'np4.ml' with line 3 (runtime4) => predicate "4.x runtime being used" is satisfied
 ... testing 'np4.ml' with line 4 (naked_pointers) => predicate "Runtime system supports naked pointers" is satisfied
 ... testing 'np4.ml' with line 6 (bytecode) => passed
 ... testing 'np4.ml' with line 8 (native) => passed
Running tests from 'tests/runtime-objects' ...
 ... testing 'Tests.ml' with default (native) => passed
 ... testing 'Tests.ml' with default (bytecode) => passed
Running tests from 'tests/self-contained-toplevel' ...
 ... testing 'main.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'main.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 9 (ocaml) => passed
 ... testing 'main.ml' with line 14 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 17 (run) => passed
 ... testing 'main.ml' with line 18 (check-program-output) => passed
Running tests from 'tests/shadow_include' ...
 ... testing 'artificial.ml' with line 3 (expect) => passed
 ... testing 'cannot_shadow_error.ml' with line 29 (setup-ocamlc.byte-build-env) => passed
 ... testing 'cannot_shadow_error.ml' with line 31 (ocamlc.byte) => passed
 ... testing 'cannot_shadow_error.ml' with line 32 (check-ocamlc.byte-output) => passed
 ... testing 'ghosts.ml' with line 2 (expect) => passed
 ... testing 'shadow_all.ml' with line 3 (expect) => passed
Running tests from 'tests/shape-index' ...
 ... testing 'index.ml' with line 6 (setup-ocamlc.byte-build-env) => passed
 ... testing 'index.ml' with line 8 (ocamlc.byte) => passed
 ... testing 'index.ml' with line 9 (check-ocamlc.byte-output) => passed
 ... testing 'index.ml' with line 13 (ocamlobjinfo) => passed
 ... testing 'index.ml' with line 15 (check-program-output) => passed
 ... testing 'index_aliases.ml' with line 5 (setup-ocamlc.byte-build-env) => passed
 ... testing 'index_aliases.ml' with line 7 (ocamlc.byte) => passed
 ... testing 'index_aliases.ml' with line 8 (check-ocamlc.byte-output) => passed
 ... testing 'index_aliases.ml' with line 12 (ocamlobjinfo) => passed
 ... testing 'index_aliases.ml' with line 14 (check-program-output) => passed
 ... testing 'index_bindingops.ml' with line 5 (setup-ocamlc.byte-build-env) => passed
 ... testing 'index_bindingops.ml' with line 7 (ocamlc.byte) => passed
 ... testing 'index_bindingops.ml' with line 8 (check-ocamlc.byte-output) => passed
 ... testing 'index_bindingops.ml' with line 12 (ocamlobjinfo) => passed
 ... testing 'index_bindingops.ml' with line 14 (check-program-output) => passed
 ... testing 'index_constrs.ml' with line 6 (setup-ocamlc.byte-build-env) => passed
 ... testing 'index_constrs.ml' with line 8 (ocamlc.byte) => passed
 ... testing 'index_constrs.ml' with line 9 (check-ocamlc.byte-output) => passed
 ... testing 'index_constrs.ml' with line 13 (ocamlobjinfo) => passed
 ... testing 'index_constrs.ml' with line 15 (check-program-output) => passed
 ... testing 'index_constrs_records.ml' with line 6 (setup-ocamlc.byte-build-env) => passed
 ... testing 'index_constrs_records.ml' with line 8 (ocamlc.byte) => passed
 ... testing 'index_constrs_records.ml' with line 9 (check-ocamlc.byte-output) => passed
 ... testing 'index_constrs_records.ml' with line 13 (ocamlobjinfo) => passed
 ... testing 'index_constrs_records.ml' with line 15 (check-program-output) => passed
 ... testing 'index_functor.ml' with line 5 (setup-ocamlc.byte-build-env) => passed
 ... testing 'index_functor.ml' with line 7 (ocamlc.byte) => passed
 ... testing 'index_functor.ml' with line 8 (check-ocamlc.byte-output) => passed
 ... testing 'index_functor.ml' with line 12 (ocamlobjinfo) => passed
 ... testing 'index_functor.ml' with line 14 (check-program-output) => passed
 ... testing 'index_labels.ml' with line 6 (setup-ocamlc.byte-build-env) => passed
 ... testing 'index_labels.ml' with line 8 (ocamlc.byte) => passed
 ... testing 'index_labels.ml' with line 9 (check-ocamlc.byte-output) => passed
 ... testing 'index_labels.ml' with line 13 (ocamlobjinfo) => passed
 ... testing 'index_labels.ml' with line 15 (check-program-output) => passed
 ... testing 'index_modules.ml' with line 5 (setup-ocamlc.byte-build-env) => passed
 ... testing 'index_modules.ml' with line 7 (ocamlc.byte) => passed
 ... testing 'index_modules.ml' with line 8 (check-ocamlc.byte-output) => passed
 ... testing 'index_modules.ml' with line 12 (ocamlobjinfo) => passed
 ... testing 'index_modules.ml' with line 14 (check-program-output) => passed
 ... testing 'index_objects.ml' with line 6 (setup-ocamlc.byte-build-env) => passed
 ... testing 'index_objects.ml' with line 8 (ocamlc.byte) => passed
 ... testing 'index_objects.ml' with line 9 (check-ocamlc.byte-output) => passed
 ... testing 'index_objects.ml' with line 13 (ocamlobjinfo) => passed
 ... testing 'index_objects.ml' with line 15 (check-program-output) => passed
 ... testing 'index_types.ml' with line 6 (setup-ocamlc.byte-build-env) => passed
 ... testing 'index_types.ml' with line 8 (ocamlc.byte) => passed
 ... testing 'index_types.ml' with line 9 (check-ocamlc.byte-output) => passed
 ... testing 'index_types.ml' with line 13 (ocamlobjinfo) => passed
 ... testing 'index_types.ml' with line 15 (check-program-output) => passed
 ... testing 'index_vb.ml' with line 6 (setup-ocamlc.byte-build-env) => passed
 ... testing 'index_vb.ml' with line 8 (ocamlc.byte) => passed
 ... testing 'index_vb.ml' with line 9 (check-ocamlc.byte-output) => passed
 ... testing 'index_vb.ml' with line 13 (ocamlobjinfo) => passed
 ... testing 'index_vb.ml' with line 15 (check-program-output) => passed
Running tests from 'tests/shapes' ...
 ... testing 'aliases.ml' with line 3 (expect) => passed
 ... testing 'comp_units.ml' with line 3 (expect) => passed
 ... testing 'functors.ml' with line 3 (expect) => passed
 ... testing 'incl_md_typeof.ml' with line 3 (expect) => passed
 ... testing 'more_func.ml' with line 3 (expect) => passed
 ... testing 'nested_types.ml' with line 3 (expect) => passed
 ... testing 'open_arg.ml' with line 3 (expect) => passed
 ... testing 'open_struct.ml' with line 3 (expect) => passed
 ... testing 'recmodules.ml' with line 3 (expect) => passed
 ... testing 'rotor_example.ml' with line 3 (expect) => passed
 ... testing 'shape_size_blowup.ml' with default (native) => passed
 ... testing 'shape_size_blowup.ml' with default (bytecode) => passed
 ... testing 'simple.ml' with line 3 (expect) => passed
 ... testing 'typeof_include.ml' with line 3 (expect) => passed
Running tests from 'tests/statmemprof' ...
 ... testing 'alloc_counts.ml' with default (native) => passed
 ... testing 'alloc_counts.ml' with default (bytecode) => passed
 ... testing 'arrays_in_major.ml' with default (native) => passed
 ... testing 'arrays_in_major.ml' with default (bytecode) => passed
 ... testing 'arrays_in_minor.ml' with default (native) => passed
 ... testing 'arrays_in_minor.ml' with default (bytecode) => passed
 ... testing 'blocking_in_callback.ml' with line 3 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'blocking_in_callback.ml' with line 5 (bytecode) => passed
 ... testing 'blocking_in_callback.ml' with line 7 (native) => passed
 ... testing 'callstacks.ml' with line 112 (flat-float-array) => predicate "compiler configured with --enable-flat-float-array" is satisfied
 ... testing 'callstacks.ml' with line 114 (bytecode) => passed
 ... testing 'callstacks.ml' with line 117 (native) => passed
 ... testing 'callstacks.ml' with line 120 (no-flat-float-array) => predicate "compiler configured with --disable-flat-float-array" is not satisfied
 ... testing 'comballoc.ml' with line 5 (bytecode) => passed
 ... testing 'comballoc.ml' with line 8 (native) => passed
 ... testing 'custom.ml' with default (native) => passed
 ... testing 'custom.ml' with default (bytecode) => passed
 ... testing 'discard_in_callback.ml' with line 2 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'exception_callback.ml' with default (native) => passed
 ... testing 'exception_callback.ml' with default (bytecode) => passed
 ... testing 'exception_callback_minor.ml' with default (native) => passed
 ... testing 'exception_callback_minor.ml' with default (bytecode) => passed
 ... testing 'exception_comballoc.ml' with default (native) => passed
 ... testing 'exception_comballoc.ml' with default (bytecode) => passed
 ... testing 'intern.ml' with default (native) => passed
 ... testing 'intern.ml' with default (bytecode) => passed
 ... testing 'lists_in_minor.ml' with default (native) => passed
 ... testing 'lists_in_minor.ml' with default (bytecode) => passed
 ... testing 'minor_heap_edge.ml' with default (native) => passed
 ... testing 'minor_heap_edge.ml' with default (bytecode) => passed
 ... testing 'minor_no_postpone.ml' with default (native) => passed
 ... testing 'minor_no_postpone.ml' with default (bytecode) => passed
 ... testing 'moved_while_blocking.ml' with line 3 (hassysthreads) => predicate "systhreads library available" is satisfied
 ... testing 'moved_while_blocking.ml' with line 5 (bytecode) => passed
 ... testing 'moved_while_blocking.ml' with line 7 (native) => passed
 ... testing 'start_stop.ml' with line 2 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'stop_start_in_callback.ml' with line 2 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'thread_exit_in_callback.ml' with line 3 (skip) => skipped (Thread.exit from a Memprof callback is a fatal error under flambda-backend)
Running tests from 'tests/syntactic-arity' ...
 ... testing 'alloc.ml' with line 2 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'alloc.ml' with line 3 (ocamlopt.byte) => passed
 ... testing 'alloc.ml' with line 4 (run) => passed
 ... testing 'alloc.ml' with line 5 (check-program-output) => passed
 ... testing 'flambda_kind.ml' with line 2 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'flambda_kind.ml' with line 3 (native) => passed
 ... testing 'max_arity.ml' with line 163 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'max_arity.ml' with line 164 (ocamlopt.byte) => passed
 ... testing 'max_arity.ml' with line 165 (check-ocamlopt.byte-output) => passed
 ... testing 'max_arity.ml' with line 166 (run) => passed
 ... testing 'max_arity.ml' with line 167 (check-program-output) => passed
 ... testing 'max_arity_locals.ml' with line 3 (flambda) => predicate "support for flambda enabled" is satisfied
 ... testing 'max_arity_locals.ml' with line 4 (stack-allocation) => predicate "Stack allocation enabled" is satisfied
 ... testing 'max_arity_locals.ml' with line 5 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'max_arity_locals.ml' with line 6 (ocamlopt.byte) => passed
 ... testing 'max_arity_locals.ml' with line 7 (check-ocamlopt.byte-output) => passed
 ... testing 'measure_arity.ml' with line 2 (expect) => passed
 ... testing 'measure_runtime_arity.ml' with line 3 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'measure_runtime_arity.ml' with line 4 (ocamlopt.byte) => passed
 ... testing 'measure_runtime_arity.ml' with line 5 (run) => passed
 ... testing 'measure_runtime_arity.ml' with line 6 (check-program-output) => passed
 ... testing 'syntactic_arity.ml' with default (native) => passed
 ... testing 'syntactic_arity.ml' with default (bytecode) => passed
 ... testing 'warnings.ml' with line 2 (expect) => passed
Running tests from 'tests/templates/basic' ...
 ... testing 'bad_impl_as_param.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'bad_impl_as_param.ml' with line 8 (ocamlc.byte) => passed
 ... testing 'bad_impl_as_param.ml' with line 10 (check-ocamlc.byte-output) => passed
 ... testing 'bad_param_impl.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'bad_param_impl.ml' with line 6 (ocamlc.byte) => passed
 ... testing 'bad_param_impl.ml' with line 11 (ocamlc.byte) => passed
 ... testing 'bad_param_impl.ml' with line 13 (check-ocamlc.byte-output) => passed
 ... testing 'bad_param_not_param.mli' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'bad_param_not_param.mli' with line 8 (ocamlc.byte) => passed
 ... testing 'bad_param_not_param.mli' with line 12 (ocamlc.byte) => passed
 ... testing 'bad_param_not_param.mli' with line 14 (check-ocamlc.byte-output) => passed
 ... testing 'bad_param_packed.mli' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'bad_param_packed.mli' with line 8 (ocamlc.byte) => passed
 ... testing 'bad_param_packed.mli' with line 10 (check-ocamlc.byte-output) => passed
 ... testing 'test.ml' with line 5 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 9 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 15 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 18 (check-ocamlc.byte-output) => passed
 ... testing 'test.ml' with line 24 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 27 (check-ocamlc.byte-output) => passed
 ... testing 'test.ml' with line 33 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 36 (check-ocamlc.byte-output) => passed
 ... testing 'test.ml' with line 42 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 45 (check-ocamlc.byte-output) => passed
 ... testing 'test.ml' with line 49 (copy) => passed
 ... testing 'test.ml' with line 53 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 57 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 63 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 67 (run) => passed
 ... testing 'test.ml' with line 70 (check-program-output) => passed
 ... testing 'test.ml' with line 74 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 78 (copy) => passed
 ... testing 'test.ml' with line 84 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 87 (check-ocamlc.byte-output) => passed
 ... testing 'test.ml' with line 91 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 96 (ocamlobjinfo) => passed
 ... testing 'test.ml' with line 99 (check-program-output) => passed
 ... testing 'test.ml' with line 104 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 108 (run) => passed
 ... testing 'test.ml' with line 111 (check-program-output) => passed
 ... testing 'test.ml' with line 115 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'test.ml' with line 119 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 125 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 128 (check-ocamlopt.byte-output) => passed
 ... testing 'test.ml' with line 134 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 137 (check-ocamlopt.byte-output) => passed
 ... testing 'test.ml' with line 143 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 146 (check-ocamlopt.byte-output) => passed
 ... testing 'test.ml' with line 152 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 155 (check-ocamlopt.byte-output) => passed
 ... testing 'test.ml' with line 159 (copy) => passed
 ... testing 'test.ml' with line 163 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 167 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 173 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 177 (run) => passed
 ... testing 'test.ml' with line 180 (check-program-output) => passed
 ... testing 'test.ml' with line 184 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 188 (copy) => passed
 ... testing 'test.ml' with line 194 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 197 (check-ocamlopt.byte-output) => passed
 ... testing 'test.ml' with line 201 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 206 (ocamlobjinfo) => passed
 ... testing 'test.ml' with line 209 (skip) => skipped (sensitive to runtime4 vs. runtime5; will be fixed by PR 2737)
 ... testing 'test.ml' with line 217 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 221 (run) => passed
 ... testing 'test.ml' with line 224 (check-program-output) => passed
Running tests from 'tests/tmc' ...
 ... testing 'ambiguities.ml' with line 2 (expect) => passed
 ... testing 'other_features.ml' with line 2 (expect) => passed
 ... testing 'partial_application.ml' with line 23 (bytecode) => passed
 ... testing 'partial_application.ml' with line 25 (native) => passed
 ... testing 'readable_output.ml' with line 3 (expect) => passed
 ... testing 'region_close.ml' with line 3 (bytecode) => passed
 ... testing 'region_close.ml' with line 5 (native) => passed
 ... testing 'semantic.ml' with line 2 (bytecode) => passed
 ... testing 'shortcut.ml' with default (native) => passed
 ... testing 'shortcut.ml' with default (bytecode) => passed
 ... testing 'stack_space.ml' with line 2 (setup-ocamlc.byte-build-env) => passed
 ... testing 'stack_space.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'stack_space.ml' with line 8 (ocamlc.byte) => passed
 ... testing 'stack_space.ml' with line 10 (run) => passed
 ... testing 'try_with.ml' with default (native) => passed
 ... testing 'try_with.ml' with default (bytecode) => passed
 ... testing 'tupled_function.ml' with line 3 (bytecode) => passed
 ... testing 'tupled_function.ml' with line 5 (native) => passed
 ... testing 'tupled_function_calls.ml' with line 25 (bytecode) => passed
 ... testing 'tupled_function_calls.ml' with line 27 (native) => passed
 ... testing 'usage_warnings.ml' with line 2 (expect) => passed
Running tests from 'tests/tool-command-line' ...
 ... testing 'test-no-input-file.ml' with line 2 (setup-ocamlopt.opt-build-env) => passed
 ... testing 'test-no-input-file.ml' with line 7 (ocamlopt.opt) => passed
 ... testing 'test-no-input-file.ml' with line 9 (ocamlopt.opt) => passed
 ... testing 'test-no-input-file.ml' with line 10 (check-ocamlopt.opt-output) => passed
 ... testing 'test-o-one-c-file.ml' with line 3 (setup-ocamlopt.opt-build-env) => passed
 ... testing 'test-o-one-c-file.ml' with line 5 (script) => passed
 ... testing 'test-o-one-c-file.ml' with line 9 (ocamlopt.opt) => passed
 ... testing 'test-o-one-c-file.ml' with line 11 (file-exists) => passed (File outputdir/hello.o exists)
 ... testing 'test-o-several-files.ml' with line 2 (setup-ocamlopt.opt-build-env) => passed
 ... testing 'test-o-several-files.ml' with line 7 (ocamlopt.opt) => passed
 ... testing 'test-o-several-files.ml' with line 8 (check-ocamlopt.opt-output) => passed
 ... testing 'test-unknown-file.ml' with line 5 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test-unknown-file.ml' with line 9 (ocamlc.byte) => passed
 ... testing 'test-unknown-file.ml' with line 12 (script) => passed
 ... testing 'test-unknown-file.ml' with line 14 (check-ocamlc.byte-output) => passed
 ... testing 'test-unknown-file.ml' with line 17 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'test-unknown-file.ml' with line 21 (ocamlopt.byte) => passed
 ... testing 'test-unknown-file.ml' with line 24 (script) => passed
 ... testing 'test-unknown-file.ml' with line 26 (check-ocamlopt.byte-output) => passed
Running tests from 'tests/tool-debugger/basic' ...
 ... testing 'debuggee.ml' with line 5 (debugger) => predicate "debugger available" is satisfied
 ... testing 'debuggee.ml' with line 6 (shared-libraries) => predicate "Shared libraries are supported." is satisfied
 ... testing 'debuggee.ml' with line 7 (setup-ocamlc.byte-build-env) => passed
 ... testing 'debuggee.ml' with line 8 (ocamlc.byte) => passed
 ... testing 'debuggee.ml' with line 9 (check-ocamlc.byte-output) => passed
 ... testing 'debuggee.ml' with line 10 (ocamldebug) => passed
 ... testing 'debuggee.ml' with line 11 (check-program-output) => passed
Running tests from 'tests/tool-debugger/dynlink' ...
 ... testing 'host.ml' with line 7 (debugger) => predicate "debugger available" is satisfied
 ... testing 'host.ml' with line 8 (shared-libraries) => predicate "Shared libraries are supported." is satisfied
 ... testing 'host.ml' with line 9 (setup-ocamlc.byte-build-env) => passed
 ... testing 'host.ml' with line 11 (ocamlc.byte) => passed
 ... testing 'host.ml' with line 13 (ocamlc.byte) => passed
 ... testing 'host.ml' with line 18 (ocamlc.byte) => passed
 ... testing 'host.ml' with line 20 (run) => passed
 ... testing 'host.ml' with line 23 (check-program-output) => passed
 ... testing 'host.ml' with line 26 (ocamldebug) => passed
 ... testing 'host.ml' with line 28 (check-program-output) => passed
Running tests from 'tests/tool-debugger/find-artifacts' ...
 ... testing 'debuggee.ml' with line 3 (debugger) => predicate "debugger available" is satisfied
 ... testing 'debuggee.ml' with line 4 (shared-libraries) => predicate "Shared libraries are supported." is satisfied
 ... testing 'debuggee.ml' with line 5 (setup-ocamlc.byte-build-env) => passed
 ... testing 'debuggee.ml' with line 7 (script) => passed
 ... testing 'debuggee.ml' with line 11 (ocamlc.byte) => passed
 ... testing 'debuggee.ml' with line 15 (ocamlc.byte) => passed
 ... testing 'debuggee.ml' with line 19 (ocamlc.byte) => passed
 ... testing 'debuggee.ml' with line 20 (check-ocamlc.byte-output) => passed
 ... testing 'debuggee.ml' with line 21 (ocamldebug) => passed
 ... testing 'debuggee.ml' with line 22 (check-program-output) => passed
Running tests from 'tests/tool-debugger/module_named_main' ...
 ... testing 'main.ml' with line 35 (debugger) => predicate "debugger available" is satisfied
 ... testing 'main.ml' with line 36 (shared-libraries) => predicate "Shared libraries are supported." is satisfied
 ... testing 'main.ml' with line 37 (setup-ocamlc.byte-build-env) => passed
 ... testing 'main.ml' with line 38 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 39 (check-ocamlc.byte-output) => passed
 ... testing 'main.ml' with line 40 (ocamldebug) => passed
 ... testing 'main.ml' with line 41 (check-program-output) => passed
Running tests from 'tests/tool-debugger/no_debug_event' ...
 ... testing 'noev.ml' with line 4 (debugger) => predicate "debugger available" is satisfied
 ... testing 'noev.ml' with line 5 (shared-libraries) => predicate "Shared libraries are supported." is satisfied
 ... testing 'noev.ml' with line 6 (setup-ocamlc.byte-build-env) => passed
 ... testing 'noev.ml' with line 9 (ocamlc.byte) => passed
 ... testing 'noev.ml' with line 14 (ocamlc.byte) => passed
 ... testing 'noev.ml' with line 17 (ocamlc.byte) => passed
 ... testing 'noev.ml' with line 22 (ocamlc.byte) => passed
 ... testing 'noev.ml' with line 23 (check-ocamlc.byte-output) => passed
 ... testing 'noev.ml' with line 24 (ocamldebug) => passed
 ... testing 'noev.ml' with line 25 (check-program-output) => passed
Running tests from 'tests/tool-debugger/printer' ...
 ... testing 'debuggee.ml' with line 29 (debugger) => predicate "debugger available" is satisfied
 ... testing 'debuggee.ml' with line 30 (shared-libraries) => predicate "Shared libraries are supported." is satisfied
 ... testing 'debuggee.ml' with line 31 (setup-ocamlc.byte-build-env) => passed
 ... testing 'debuggee.ml' with line 34 (ocamlc.byte) => passed
 ... testing 'debuggee.ml' with line 36 (ocamlc.byte) => passed
 ... testing 'debuggee.ml' with line 37 (check-ocamlc.byte-output) => passed
 ... testing 'debuggee.ml' with line 38 (ocamldebug) => passed
 ... testing 'debuggee.ml' with line 39 (check-program-output) => passed
Running tests from 'tests/tool-dumpobj' ...
 ... testing 'test.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 5 (run) => passed
 ... testing 'test.ml' with line 6 (check-program-output) => passed
Running tests from 'tests/tool-expect-test' ...
 ... testing 'clean_typer.ml' with line 2 (expect) => passed
 ... testing 'include.ml' with line 3 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'include.ml' with line 4 (libunix) => predicate "libunix available" is satisfied
 ... testing 'include.ml' with line 5 (expect) => passed
Running tests from 'tests/tool-lexyacc' ...
 ... testing 'calc.ml' with default (native) => passed
 ... testing 'calc.ml' with default (bytecode) => passed
 ... testing 'chars.mll' with default (native) => passed
 ... testing 'chars.mll' with default (bytecode) => passed
 ... testing 'csets.mll' with default (native) => passed
 ... testing 'csets.mll' with default (bytecode) => passed
 ... testing 'mpr7760.mll' with default (native) => passed
 ... testing 'mpr7760.mll' with default (bytecode) => passed
 ... testing 'parsecheck.mly' with default (native) => passed
 ... testing 'parsecheck.mly' with default (bytecode) => passed
Running tests from 'tests/tool-ocaml' ...
 ... testing 'directive_failure.ml' with line 4 (setup-ocaml-build-env) => passed
 ... testing 'directive_failure.ml' with line 5 (ocaml) => passed
 ... testing 't000.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't000.ml' with line 6 (ocaml) => passed
 ... testing 't010-const0.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't010-const0.ml' with line 6 (ocaml) => passed
 ... testing 't010-const1.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't010-const1.ml' with line 6 (ocaml) => passed
 ... testing 't010-const2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't010-const2.ml' with line 6 (ocaml) => passed
 ... testing 't010-const3.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't010-const3.ml' with line 6 (ocaml) => passed
 ... testing 't011-constint.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't011-constint.ml' with line 6 (ocaml) => passed
 ... testing 't020.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't020.ml' with line 6 (ocaml) => passed
 ... testing 't021-pushconst1.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't021-pushconst1.ml' with line 6 (ocaml) => passed
 ... testing 't021-pushconst2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't021-pushconst2.ml' with line 6 (ocaml) => passed
 ... testing 't021-pushconst3.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't021-pushconst3.ml' with line 6 (ocaml) => passed
 ... testing 't022-pushconstint.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't022-pushconstint.ml' with line 6 (ocaml) => passed
 ... testing 't040-makeblock1.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't040-makeblock1.ml' with line 6 (ocaml) => passed
 ... testing 't040-makeblock2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't040-makeblock2.ml' with line 6 (ocaml) => passed
 ... testing 't040-makeblock3.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't040-makeblock3.ml' with line 6 (ocaml) => passed
 ... testing 't041-makeblock.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't041-makeblock.ml' with line 6 (ocaml) => passed
 ... testing 't050-getglobal.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't050-getglobal.ml' with line 6 (ocaml) => passed
 ... testing 't050-pushgetglobal.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't050-pushgetglobal.ml' with line 6 (ocaml) => passed
 ... testing 't051-getglobalfield.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't051-getglobalfield.ml' with line 6 (ocaml) => passed
 ... testing 't051-pushgetglobalfield.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't051-pushgetglobalfield.ml' with line 6 (ocaml) => passed
 ... testing 't060-raise.ml' with line 6 (setup-ocaml-build-env) => passed
 ... testing 't060-raise.ml' with line 7 (ocaml) => passed
 ... testing 't070-branch.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't070-branch.ml' with line 6 (ocaml) => passed
 ... testing 't070-branchif.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't070-branchif.ml' with line 6 (ocaml) => passed
 ... testing 't070-branchifnot.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't070-branchifnot.ml' with line 6 (ocaml) => passed
 ... testing 't071-boolnot.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't071-boolnot.ml' with line 6 (ocaml) => passed
 ... testing 't080-eq.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't080-eq.ml' with line 6 (ocaml) => passed
 ... testing 't080-geint.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't080-geint.ml' with line 6 (ocaml) => passed
 ... testing 't080-gtint.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't080-gtint.ml' with line 6 (ocaml) => passed
 ... testing 't080-leint.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't080-leint.ml' with line 6 (ocaml) => passed
 ... testing 't080-ltint.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't080-ltint.ml' with line 6 (ocaml) => passed
 ... testing 't080-neq.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't080-neq.ml' with line 6 (ocaml) => passed
 ... testing 't090-acc0.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't090-acc0.ml' with line 6 (ocaml) => passed
 ... testing 't090-acc1.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't090-acc1.ml' with line 6 (ocaml) => passed
 ... testing 't090-acc2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't090-acc2.ml' with line 6 (ocaml) => passed
 ... testing 't090-acc3.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't090-acc3.ml' with line 6 (ocaml) => passed
 ... testing 't090-acc4.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't090-acc4.ml' with line 6 (ocaml) => passed
 ... testing 't090-acc5.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't090-acc5.ml' with line 6 (ocaml) => passed
 ... testing 't090-acc6.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't090-acc6.ml' with line 6 (ocaml) => passed
 ... testing 't090-acc7.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't090-acc7.ml' with line 6 (ocaml) => passed
 ... testing 't091-acc.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't091-acc.ml' with line 6 (ocaml) => passed
 ... testing 't092-pushacc.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't092-pushacc.ml' with line 6 (ocaml) => passed
 ... testing 't092-pushacc0.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't092-pushacc0.ml' with line 6 (ocaml) => passed
 ... testing 't092-pushacc1.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't092-pushacc1.ml' with line 6 (ocaml) => passed
 ... testing 't092-pushacc2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't092-pushacc2.ml' with line 6 (ocaml) => passed
 ... testing 't092-pushacc3.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't092-pushacc3.ml' with line 6 (ocaml) => passed
 ... testing 't092-pushacc4.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't092-pushacc4.ml' with line 6 (ocaml) => passed
 ... testing 't092-pushacc5.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't092-pushacc5.ml' with line 6 (ocaml) => passed
 ... testing 't092-pushacc6.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't092-pushacc6.ml' with line 6 (ocaml) => passed
 ... testing 't092-pushacc7.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't092-pushacc7.ml' with line 6 (ocaml) => passed
 ... testing 't093-pushacc.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't093-pushacc.ml' with line 6 (ocaml) => passed
 ... testing 't100-pushtrap.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't100-pushtrap.ml' with line 6 (ocaml) => passed
 ... testing 't101-poptrap.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't101-poptrap.ml' with line 6 (ocaml) => passed
 ... testing 't110-addint.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't110-addint.ml' with line 6 (ocaml) => passed
 ... testing 't110-andint.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't110-andint.ml' with line 6 (ocaml) => passed
 ... testing 't110-asrint-1.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't110-asrint-1.ml' with line 6 (ocaml) => passed
 ... testing 't110-asrint-2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't110-asrint-2.ml' with line 6 (ocaml) => passed
 ... testing 't110-divint-1.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't110-divint-1.ml' with line 6 (ocaml) => passed
 ... testing 't110-divint-2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't110-divint-2.ml' with line 6 (ocaml) => passed
 ... testing 't110-divint-3.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't110-divint-3.ml' with line 6 (ocaml) => passed
 ... testing 't110-lslint.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't110-lslint.ml' with line 6 (ocaml) => passed
 ... testing 't110-lsrint.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't110-lsrint.ml' with line 6 (ocaml) => passed
 ... testing 't110-modint-1.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't110-modint-1.ml' with line 6 (ocaml) => passed
 ... testing 't110-modint-2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't110-modint-2.ml' with line 6 (ocaml) => passed
 ... testing 't110-mulint.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't110-mulint.ml' with line 6 (ocaml) => passed
 ... testing 't110-negint.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't110-negint.ml' with line 6 (ocaml) => passed
 ... testing 't110-offsetint.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't110-offsetint.ml' with line 6 (ocaml) => passed
 ... testing 't110-orint.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't110-orint.ml' with line 6 (ocaml) => passed
 ... testing 't110-subint.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't110-subint.ml' with line 6 (ocaml) => passed
 ... testing 't110-xorint.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't110-xorint.ml' with line 6 (ocaml) => passed
 ... testing 't120-getstringchar.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't120-getstringchar.ml' with line 6 (ocaml) => passed
 ... testing 't121-setstringchar.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't121-setstringchar.ml' with line 6 (ocaml) => passed
 ... testing 't130-getvectitem.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't130-getvectitem.ml' with line 6 (ocaml) => passed
 ... testing 't130-vectlength.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't130-vectlength.ml' with line 6 (ocaml) => passed
 ... testing 't131-setvectitem.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't131-setvectitem.ml' with line 6 (ocaml) => passed
 ... testing 't140-switch-1.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't140-switch-1.ml' with line 6 (ocaml) => passed
 ... testing 't140-switch-2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't140-switch-2.ml' with line 6 (ocaml) => passed
 ... testing 't140-switch-3.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't140-switch-3.ml' with line 6 (ocaml) => passed
 ... testing 't140-switch-4.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't140-switch-4.ml' with line 6 (ocaml) => passed
 ... testing 't141-switch-5.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't141-switch-5.ml' with line 6 (ocaml) => passed
 ... testing 't141-switch-6.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't141-switch-6.ml' with line 6 (ocaml) => passed
 ... testing 't141-switch-7.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't141-switch-7.ml' with line 6 (ocaml) => passed
 ... testing 't142-switch-8.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't142-switch-8.ml' with line 6 (ocaml) => passed
 ... testing 't142-switch-9.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't142-switch-9.ml' with line 6 (ocaml) => passed
 ... testing 't142-switch-A.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't142-switch-A.ml' with line 6 (ocaml) => passed
 ... testing 't150-push-1.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't150-push-1.ml' with line 6 (ocaml) => passed
 ... testing 't150-push-2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't150-push-2.ml' with line 6 (ocaml) => passed
 ... testing 't160-closure.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't160-closure.ml' with line 6 (ocaml) => passed
 ... testing 't161-apply1.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't161-apply1.ml' with line 6 (ocaml) => passed
 ... testing 't162-return.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't162-return.ml' with line 6 (ocaml) => passed
 ... testing 't163.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't163.ml' with line 6 (ocaml) => passed
 ... testing 't164-apply2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't164-apply2.ml' with line 6 (ocaml) => passed
 ... testing 't164-apply3.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't164-apply3.ml' with line 6 (ocaml) => passed
 ... testing 't165-apply.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't165-apply.ml' with line 6 (ocaml) => passed
 ... testing 't170-envacc2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't170-envacc2.ml' with line 6 (ocaml) => passed
 ... testing 't170-envacc3.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't170-envacc3.ml' with line 6 (ocaml) => passed
 ... testing 't170-envacc4.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't170-envacc4.ml' with line 6 (ocaml) => passed
 ... testing 't171-envacc.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't171-envacc.ml' with line 6 (ocaml) => passed
 ... testing 't172-pushenvacc1.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't172-pushenvacc1.ml' with line 6 (ocaml) => passed
 ... testing 't172-pushenvacc2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't172-pushenvacc2.ml' with line 6 (ocaml) => passed
 ... testing 't172-pushenvacc3.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't172-pushenvacc3.ml' with line 6 (ocaml) => passed
 ... testing 't172-pushenvacc4.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't172-pushenvacc4.ml' with line 6 (ocaml) => passed
 ... testing 't173-pushenvacc.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't173-pushenvacc.ml' with line 6 (ocaml) => passed
 ... testing 't180-appterm1.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't180-appterm1.ml' with line 6 (ocaml) => passed
 ... testing 't180-appterm2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't180-appterm2.ml' with line 6 (ocaml) => passed
 ... testing 't180-appterm3.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't180-appterm3.ml' with line 6 (ocaml) => passed
 ... testing 't181-appterm.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't181-appterm.ml' with line 6 (ocaml) => passed
 ... testing 't190-makefloatblock-1.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't190-makefloatblock-1.ml' with line 6 (ocaml) => passed
 ... testing 't190-makefloatblock-2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't190-makefloatblock-2.ml' with line 6 (ocaml) => passed
 ... testing 't190-makefloatblock-3.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't190-makefloatblock-3.ml' with line 6 (ocaml) => passed
 ... testing 't191-vectlength.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't191-vectlength.ml' with line 6 (ocaml) => passed
 ... testing 't192-getfloatfield-1.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't192-getfloatfield-1.ml' with line 6 (ocaml) => passed
 ... testing 't192-getfloatfield-2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't192-getfloatfield-2.ml' with line 6 (ocaml) => passed
 ... testing 't193-setfloatfield-1.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't193-setfloatfield-1.ml' with line 6 (ocaml) => passed
 ... testing 't193-setfloatfield-2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't193-setfloatfield-2.ml' with line 6 (ocaml) => passed
 ... testing 't200-getfield0.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't200-getfield0.ml' with line 6 (ocaml) => passed
 ... testing 't200-getfield1.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't200-getfield1.ml' with line 6 (ocaml) => passed
 ... testing 't200-getfield2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't200-getfield2.ml' with line 6 (ocaml) => passed
 ... testing 't200-getfield3.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't200-getfield3.ml' with line 6 (ocaml) => passed
 ... testing 't201-getfield.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't201-getfield.ml' with line 6 (ocaml) => passed
 ... testing 't210-setfield0.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't210-setfield0.ml' with line 6 (ocaml) => passed
 ... testing 't210-setfield1.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't210-setfield1.ml' with line 6 (ocaml) => passed
 ... testing 't210-setfield2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't210-setfield2.ml' with line 6 (ocaml) => passed
 ... testing 't210-setfield3.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't210-setfield3.ml' with line 6 (ocaml) => passed
 ... testing 't211-setfield.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't211-setfield.ml' with line 6 (ocaml) => passed
 ... testing 't220-assign.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't220-assign.ml' with line 6 (ocaml) => passed
 ... testing 't230-check_signals.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't230-check_signals.ml' with line 6 (ocaml) => passed
 ... testing 't240-c_call1.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't240-c_call1.ml' with line 6 (ocaml) => passed
 ... testing 't240-c_call2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't240-c_call2.ml' with line 6 (ocaml) => passed
 ... testing 't240-c_call3.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't240-c_call3.ml' with line 6 (ocaml) => passed
 ... testing 't240-c_call4.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't240-c_call4.ml' with line 6 (ocaml) => passed
 ... testing 't240-c_call5.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't240-c_call5.ml' with line 6 (ocaml) => passed
 ... testing 't250-closurerec-1.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't250-closurerec-1.ml' with line 6 (ocaml) => passed
 ... testing 't250-closurerec-2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't250-closurerec-2.ml' with line 6 (ocaml) => passed
 ... testing 't251-pushoffsetclosure0.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't251-pushoffsetclosure0.ml' with line 6 (ocaml) => passed
 ... testing 't251-pushoffsetclosure2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't251-pushoffsetclosure2.ml' with line 6 (ocaml) => passed
 ... testing 't251-pushoffsetclosurem2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't251-pushoffsetclosurem2.ml' with line 6 (ocaml) => passed
 ... testing 't252-pushoffsetclosure.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't252-pushoffsetclosure.ml' with line 6 (ocaml) => passed
 ... testing 't253-offsetclosure0.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't253-offsetclosure0.ml' with line 6 (ocaml) => passed
 ... testing 't253-offsetclosure2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't253-offsetclosure2.ml' with line 6 (ocaml) => passed
 ... testing 't253-offsetclosurem2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't253-offsetclosurem2.ml' with line 6 (ocaml) => passed
 ... testing 't254-offsetclosure.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't254-offsetclosure.ml' with line 6 (ocaml) => passed
 ... testing 't260-offsetref.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't260-offsetref.ml' with line 6 (ocaml) => passed
 ... testing 't270-push_retaddr.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't270-push_retaddr.ml' with line 6 (ocaml) => passed
 ... testing 't300-getmethod.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't300-getmethod.ml' with line 6 (ocaml) => passed
 ... testing 't301-object.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't301-object.ml' with line 6 (ocaml) => passed
 ... testing 't310-alloc-1.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't310-alloc-1.ml' with line 6 (ocaml) => passed
 ... testing 't310-alloc-2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't310-alloc-2.ml' with line 6 (ocaml) => passed
 ... testing 't320-gc-1.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't320-gc-1.ml' with line 6 (ocaml) => passed
 ... testing 't320-gc-2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't320-gc-2.ml' with line 6 (ocaml) => passed
 ... testing 't320-gc-3.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't320-gc-3.ml' with line 6 (ocaml) => passed
 ... testing 't330-compact-1.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't330-compact-1.ml' with line 6 (ocaml) => passed
 ... testing 't330-compact-2.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't330-compact-2.ml' with line 6 (ocaml) => passed
 ... testing 't330-compact-3.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't330-compact-3.ml' with line 6 (ocaml) => passed
 ... testing 't330-compact-4.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't330-compact-4.ml' with line 6 (ocaml) => passed
 ... testing 't340-weak.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't340-weak.ml' with line 6 (ocaml) => passed
 ... testing 't350-heapcheck.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't350-heapcheck.ml' with line 6 (ocaml) => passed
 ... testing 't360-stacks-1.ml' with line 5 (setup-ocaml-build-env) => passed
 ... testing 't360-stacks-1.ml' with line 6 (ocaml) => passed
 ... testing 't360-stacks-2.ml' with line 6 (setup-ocaml-build-env) => passed
 ... testing 't360-stacks-2.ml' with line 7 (ocaml) => passed
Running tests from 'tests/tool-ocaml-annot' ...
 ... testing 'failure.ml' with line 7 (setup-ocamlc.byte-build-env) => passed
 ... testing 'failure.ml' with line 8 (ocamlc.byte) => passed
 ... testing 'failure.ml' with line 9 (script) => passed
 ... testing 'failure.ml' with line 11 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'failure.ml' with line 12 (ocamlopt.byte) => passed
 ... testing 'failure.ml' with line 13 (script) => passed
 ... testing 'success.ml' with line 5 (setup-ocamlc.byte-build-env) => passed
 ... testing 'success.ml' with line 6 (ocamlc.byte) => passed
 ... testing 'success.ml' with line 7 (script) => passed
 ... testing 'success.ml' with line 9 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'success.ml' with line 10 (ocamlopt.byte) => passed
 ... testing 'success.ml' with line 11 (script) => passed
 ... testing 'typeonly.ml' with line 6 (setup-ocamlc.byte-build-env) => passed
 ... testing 'typeonly.ml' with line 7 (ocamlc.byte) => passed
 ... testing 'typeonly.ml' with line 8 (script) => passed
 ... testing 'typeonly.ml' with line 10 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'typeonly.ml' with line 11 (ocamlopt.byte) => passed
 ... testing 'typeonly.ml' with line 12 (script) => passed
Running tests from 'tests/tool-ocamlc-compat32' ...
 ... testing 'compat32.ml' with line 2 (arch64) => predicate "64-bit architecture" is satisfied
 ... testing 'compat32.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'compat32.ml' with line 7 (ocamlc.byte) => passed
 ... testing 'compat32.ml' with line 10 (ocamlc.byte) => passed
 ... testing 'compat32.ml' with line 16 (ocamlc.byte) => passed
 ... testing 'compat32.ml' with line 20 (ocamlc.byte) => passed
 ... testing 'compat32.ml' with line 25 (ocamlc.byte) => passed
 ... testing 'compat32.ml' with line 26 (check-ocamlc.byte-output) => passed
Running tests from 'tests/tool-ocamlc-error-cleanup' ...
 ... testing 'test.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 7 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 9 (script) => passed
Running tests from 'tests/tool-ocamlc-locations' ...
 ... testing 'marshalled.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'marshalled.ml' with line 8 (ocamlc.byte) => passed
 ... testing 'marshalled.ml' with line 10 (script) => passed
 ... testing 'marshalled.ml' with line 15 (ocamlc.byte) => passed
 ... testing 'marshalled.ml' with line 16 (check-ocamlc.byte-output) => passed
 ... testing 'test.ml' with line 4 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 8 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 13 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 14 (check-ocamlc.byte-output) => passed
Running tests from 'tests/tool-ocamlc-open' ...
 ... testing 'tool-ocamlc-open-error.ml' with line 2 (setup-ocamlc.byte-build-env) => passed
 ... testing 'tool-ocamlc-open-error.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'tool-ocamlc-open-error.ml' with line 6 (check-ocamlc.byte-output) => passed
 ... testing 'tool-ocamlc-open.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'tool-ocamlc-open.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'tool-ocamlc-open.ml' with line 8 (ocamlc.byte) => passed
 ... testing 'tool-ocamlc-open.ml' with line 9 (check-ocamlc.byte-output) => passed
Running tests from 'tests/tool-ocamlc-stop-after' ...
 ... testing 'stop_after_lambda.ml' with line 2 (setup-ocamlc.byte-build-env) => passed
 ... testing 'stop_after_lambda.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'stop_after_lambda.ml' with line 6 (check-ocamlc.byte-output) => passed
 ... testing 'stop_after_parsing_impl.ml' with line 15 (setup-ocamlc.byte-build-env) => passed
 ... testing 'stop_after_parsing_impl.ml' with line 18 (ocamlc.byte) => passed
 ... testing 'stop_after_parsing_impl.ml' with line 19 (check-ocamlc.byte-output) => passed
 ... testing 'stop_after_parsing_intf.mli' with line 15 (setup-ocamlc.byte-build-env) => passed
 ... testing 'stop_after_parsing_intf.mli' with line 18 (ocamlc.byte) => passed
 ... testing 'stop_after_parsing_intf.mli' with line 19 (check-ocamlc.byte-output) => passed
 ... testing 'stop_after_scheduling.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'stop_after_scheduling.ml' with line 6 (ocamlc.byte) => passed
 ... testing 'stop_after_scheduling.ml' with line 9 (script) => passed
 ... testing 'stop_after_scheduling.ml' with line 11 (check-ocamlc.byte-output) => passed
 ... testing 'stop_after_typing_impl.ml' with line 16 (setup-ocamlc.byte-build-env) => passed
 ... testing 'stop_after_typing_impl.ml' with line 19 (ocamlc.byte) => passed
 ... testing 'stop_after_typing_impl.ml' with line 20 (check-ocamlc.byte-output) => passed
Running tests from 'tests/tool-ocamldep-modalias' ...
 ... testing 'main.ml' with line 11 (setup-ocamlc.byte-build-env) => passed
 ... testing 'main.ml' with line 14 (copy) => passed
 ... testing 'main.ml' with line 17 (copy) => passed
 ... testing 'main.ml' with line 20 (copy) => passed
 ... testing 'main.ml' with line 23 (copy) => passed
 ... testing 'main.ml' with line 26 (copy) => passed
 ... testing 'main.ml' with line 28 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 30 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 32 (check-ocamlc.byte-output) => passed
 ... testing 'main.ml' with line 33 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'main.ml' with line 35 (script) => passed
 ... testing 'main.ml' with line 37 (script) => passed
 ... testing 'main.ml' with line 38 (native-compiler) => predicate "native compiler available" is satisfied
 ... testing 'main.ml' with line 40 (script) => passed
 ... testing 'main.ml' with line 44 (setup-ocamlc.byte-build-env) => passed
 ... testing 'main.ml' with line 47 (copy) => passed
 ... testing 'main.ml' with line 50 (copy) => passed
 ... testing 'main.ml' with line 53 (copy) => passed
 ... testing 'main.ml' with line 56 (copy) => passed
 ... testing 'main.ml' with line 58 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 60 (check-ocamlc.byte-output) => passed
 ... testing 'main.ml' with line 61 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'main.ml' with line 63 (script) => passed
 ... testing 'main.ml' with line 65 (script) => passed
 ... testing 'main.ml' with line 66 (native-compiler) => predicate "native compiler available" is satisfied
 ... testing 'main.ml' with line 68 (script) => passed
 ... testing 'main.ml' with line 71 (setup-ocamlc.byte-build-env) => passed
 ... testing 'main.ml' with line 74 (copy) => passed
 ... testing 'main.ml' with line 77 (copy) => passed
 ... testing 'main.ml' with line 80 (copy) => passed
 ... testing 'main.ml' with line 83 (copy) => passed
 ... testing 'main.ml' with line 86 (copy) => passed
 ... testing 'main.ml' with line 88 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 90 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 92 (check-ocamlc.byte-output) => passed
 ... testing 'main.ml' with line 95 (setup-ocamlc.byte-build-env) => passed
 ... testing 'main.ml' with line 98 (copy) => passed
 ... testing 'main.ml' with line 101 (copy) => passed
 ... testing 'main.ml' with line 104 (copy) => passed
 ... testing 'main.ml' with line 107 (copy) => passed
 ... testing 'main.ml' with line 109 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 111 (check-ocamlc.byte-output) => passed
 ... testing 'main.ml' with line 114 (setup-ocamlc.byte-build-env) => passed
 ... testing 'main.ml' with line 117 (copy) => passed
 ... testing 'main.ml' with line 120 (copy) => passed
 ... testing 'main.ml' with line 123 (copy) => passed
 ... testing 'main.ml' with line 126 (copy) => passed
 ... testing 'main.ml' with line 128 (ocamlc.byte) => passed
 ... testing 'main.ml' with line 130 (check-ocamlc.byte-output) => passed
Running tests from 'tests/tool-ocamldep-shadowing' ...
 ... testing 'a.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'a.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'a.ml' with line 7 (check-ocamlc.byte-output) => passed
Running tests from 'tests/tool-ocamldoc' ...
 ... testing 'Alert_toplevel.mli' with line 2 (ocamldoc) => passed
 ... testing 'Alert_toplevel2.mli' with line 2 (ocamldoc) => passed
 ... testing 'Alerts.mli' with line 2 (ocamldoc) => passed
 ... testing 'Alerts_impl.ml' with line 2 (ocamldoc) => passed
 ... testing 'Documentation_tags.mli' with line 2 (ocamldoc) => passed
 ... testing 'Entities.ml' with line 2 (ocamldoc) => passed
 ... testing 'Extensible_variant.ml' with line 2 (ocamldoc) => passed
 ... testing 'Functions.ml' with line 2 (ocamldoc) => passed
 ... testing 'Functions.ml' with line 3 (ocamldoc) => passed
 ... testing 'Include_module_type_of.mli' with line 3 (ocamldoc) => passed
 ... testing 'Include_module_type_of.mli' with line 5 (ocamldoc) => passed
 ... testing 'Inline_records.mli' with line 3 (ocamldoc) => passed
 ... testing 'Inline_records.mli' with line 5 (ocamldoc) => passed
 ... testing 'Inline_records.mli' with line 7 (ocamldoc) => passed
 ... testing 'Inline_records_bis.ml' with line 2 (ocamldoc) => passed
 ... testing 'Item_ids.mli' with line 2 (ocamldoc) => passed
 ... testing 'Level_0.mli' with line 2 (ocamldoc) => passed
 ... testing 'Linebreaks.mli' with line 2 (ocamldoc) => passed
 ... testing 'Linebreaks.mli' with line 5 (check-program-output) => passed
 ... testing 'Loop.ml' with line 3 (ocamldoc) => passed
 ... testing 'Loop.ml' with line 5 (ocamldoc) => passed
 ... testing 'Module_whitespace.ml' with line 2 (ocamldoc) => passed
 ... testing 'No_preamble.mli' with line 2 (ocamldoc) => passed
 ... testing 'Paragraph.mli' with line 2 (ocamldoc) => passed
 ... testing 'Short_description.txt' with line 2 (ocamldoc) => passed
 ... testing 'Test.mli' with line 2 (ocamldoc) => passed
 ... testing 'Variants.mli' with line 3 (ocamldoc) => passed
 ... testing 'Variants.mli' with line 5 (ocamldoc) => passed
 ... testing 'latex_ref.mli' with line 2 (ocamldoc) => passed
 ... testing 't01.ml' with line 4 (ocamldoc) => passed
 ... testing 't02.ml' with line 4 (ocamldoc) => passed
 ... testing 't03.ml' with line 4 (ocamldoc) => passed
 ... testing 't04.ml' with line 4 (ocamldoc) => passed
 ... testing 't05.ml' with line 4 (ocamldoc) => passed
Running tests from 'tests/tool-ocamldoc-open' ...
 ... testing 'main.ml' with line 5 (ocamldoc) => passed
Running tests from 'tests/tool-ocamlobjinfo' ...
 ... testing 'question.ml' with line 2 (shared-libraries) => predicate "Shared libraries are supported." is satisfied
 ... testing 'question.ml' with line 3 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'question.ml' with line 7 (ocamlopt.byte) => passed
 ... testing 'question.ml' with line 8 (check-ocamlopt.byte-output) => passed
 ... testing 'question.ml' with line 10 (ocamlobjinfo) => passed
 ... testing 'question.ml' with line 13 (ocamlobjinfo) => passed
 ... testing 'question.ml' with line 16 (ocamlobjinfo) => passed
 ... testing 'question.ml' with line 18 (runtime5) => predicate "5.x runtime being used" is not satisfied
 ... testing 'question.ml' with line 22 (ocamlobjinfo) => passed
Running tests from 'tests/tool-ocamlopt-save-ir' ...
 ... testing 'check_for_pack.ml' with line 2 (native-compiler) => predicate "native compiler available" is satisfied
 ... testing 'check_for_pack.ml' with line 3 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'check_for_pack.ml' with line 6 (ocamlopt.byte) => passed
 ... testing 'check_for_pack.ml' with line 8 (script) => passed
 ... testing 'check_for_pack.ml' with line 12 (ocamlopt.byte) => passed
 ... testing 'check_for_pack.ml' with line 13 (check-ocamlopt.byte-output) => passed
 ... testing 'save_ir_after_scheduling.ml' with line 2 (native-compiler) => predicate "native compiler available" is satisfied
 ... testing 'save_ir_after_scheduling.ml' with line 3 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'save_ir_after_scheduling.ml' with line 5 (ocamlopt.byte) => passed
 ... testing 'save_ir_after_scheduling.ml' with line 6 (check-ocamlopt.byte-output) => passed
 ... testing 'save_ir_after_scheduling.ml' with line 8 (script) => passed
 ... testing 'save_ir_after_typing.ml' with line 2 (native-compiler) => predicate "native compiler available" is satisfied
 ... testing 'save_ir_after_typing.ml' with line 4 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'save_ir_after_typing.ml' with line 8 (ocamlopt.byte) => passed
 ... testing 'save_ir_after_typing.ml' with line 12 (script) => passed
 ... testing 'save_ir_after_typing.ml' with line 14 (check-ocamlopt.byte-output) => passed
 ... testing 'start_from_emit.ml' with line 2 (native-compiler) => predicate "native compiler available" is satisfied
 ... testing 'start_from_emit.ml' with line 3 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'start_from_emit.ml' with line 6 (ocamlopt.byte) => passed
 ... testing 'start_from_emit.ml' with line 8 (script) => passed
 ... testing 'start_from_emit.ml' with line 12 (ocamlopt.byte) => passed
 ... testing 'start_from_emit.ml' with line 13 (check-ocamlopt.byte-output) => passed
 ... testing 'start_from_emit.ml' with line 15 (script) => passed
 ... testing 'start_from_emit.ml' with line 19 (ocamlopt.byte) => passed
 ... testing 'start_from_emit.ml' with line 22 (copy) => passed
 ... testing 'start_from_emit.ml' with line 23 (check-ocamlopt.byte-output) => passed
 ... testing 'start_from_emit.ml' with line 25 (script) => passed
Running tests from 'tests/tool-ocamlopt-stop-after' ...
 ... testing 'stop_after_lambda.ml' with line 2 (no-flambda) => predicate "support for flambda disabled" is not satisfied
 ... testing 'stop_after_scheduling.ml' with line 2 (native-compiler) => predicate "native compiler available" is satisfied
 ... testing 'stop_after_scheduling.ml' with line 3 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'stop_after_scheduling.ml' with line 6 (ocamlopt.byte) => passed
 ... testing 'stop_after_scheduling.ml' with line 7 (check-ocamlopt.byte-output) => passed
 ... testing 'stop_after_scheduling.ml' with line 9 (script) => passed
Running tests from 'tests/tool-ocamltest' ...
 ... testing 'norm1.ml' with default (native) => passed
 ... testing 'norm1.ml' with default (bytecode) => passed
 ... testing 'norm2.ml' with default (native) => passed
 ... testing 'norm2.ml' with default (bytecode) => passed
 ... testing 'norm3.ml' with default (native) => passed
 ... testing 'norm3.ml' with default (bytecode) => passed
 ... testing 'norm4.ml' with default (native) => passed
 ... testing 'norm4.ml' with default (bytecode) => passed
Running tests from 'tests/tool-ocamltest-var-expansion' ...
 ... testing 'subst1.ml' with default (native) => passed
 ... testing 'subst1.ml' with default (bytecode) => passed
 ... testing 'subst2.ml' with default (native) => passed
 ... testing 'subst2.ml' with default (bytecode) => passed
Running tests from 'tests/tool-toplevel' ...
 ... testing 'any.ml' with line 4 (toplevel.opt) => passed
 ... testing 'error_highlighting.ml' with line 115 (toplevel) => passed
 ... testing 'exotic_arrays.ml' with line 2 (toplevel.opt) => passed
 ... testing 'exotic_lists.ml' with line 2 (toplevel) => passed
 ... testing 'install_printer.ml' with line 2 (toplevel) => passed
 ... testing 'mod_use.ml' with line 3 (expect) => passed
 ... testing 'multi_phrase_line.ml' with line 31 (toplevel) => passed
 ... testing 'pr6468.ml' with line 2 (toplevel) => passed
 ... testing 'pr7060.ml' with line 2 (toplevel) => passed
 ... testing 'pr7751.ml' with line 3 (toplevel) => passed
 ... testing 'pr9701.ml' with line 4 (setup-ocaml-build-env) => passed
 ... testing 'pr9701.ml' with line 5 (ocaml) => passed
 ... testing 'pr9701.ml' with line 6 (check-ocaml-output) => passed
 ... testing 'printval.ml' with line 2 (expect) => passed
 ... testing 'redefinition_hints.ml' with line 2 (toplevel) => passed
 ... testing 'show.ml' with line 2 (expect) => passed
 ... testing 'show_short_paths.ml' with line 3 (expect) => passed
 ... testing 'strings.ml' with line 2 (toplevel) => passed
 ... testing 'topeval.ml' with line 3 (toplevel) => passed
 ... testing 'topeval.ml' with line 5 (toplevel.opt) => passed
 ... testing 'tracing.ml' with line 2 (toplevel) => passed
 ... testing 'uncaught_exceptions.ml' with line 2 (expect) => passed
 ... testing 'unnamed_layouts_1.ml' with line 3 (toplevel) => passed
 ... testing 'unnamed_layouts_1.ml' with line 5 (toplevel.opt) => passed
 ... testing 'unnamed_layouts_2.ml' with line 3 (toplevel) => passed
 ... testing 'unnamed_layouts_2.ml' with line 5 (toplevel.opt) => passed
 ... testing 'unnamed_layouts_3.ml' with line 3 (toplevel) => passed
 ... testing 'unnamed_layouts_3.ml' with line 5 (toplevel.opt) => passed
 ... testing 'unnamed_layouts_4.ml' with line 3 (toplevel) => passed
 ... testing 'unnamed_layouts_4.ml' with line 5 (toplevel.opt) => passed
 ... testing 'use_command.ml' with line 2 (expect) => passed
Running tests from 'tests/tool-toplevel/known-bugs' ...
 ... testing 'broken_rec_in_show.ml' with line 2 (expect) => passed
Running tests from 'tests/tool-toplevel-invocation' ...
 ... testing 'test.ml' with line 3 (setup-ocaml-build-env) => passed
 ... testing 'test.ml' with line 9 (ocaml) => passed
 ... testing 'test.ml' with line 10 (check-ocaml-output) => passed
 ... testing 'test.ml' with line 16 (ocaml) => passed
 ... testing 'test.ml' with line 17 (check-ocaml-output) => passed
 ... testing 'test.ml' with line 23 (ocaml) => passed
 ... testing 'test.ml' with line 24 (check-ocaml-output) => passed
 ... testing 'test.ml' with line 30 (ocaml) => passed
 ... testing 'test.ml' with line 31 (check-ocaml-output) => passed
 ... testing 'test.ml' with line 36 (ocaml) => passed
 ... testing 'test.ml' with line 37 (check-ocaml-output) => passed
 ... testing 'test.ml' with line 42 (ocaml) => passed
 ... testing 'test.ml' with line 43 (check-ocaml-output) => passed
Running tests from 'tests/translprim' ...
 ... testing 'array_spec.ml' with line 2 (setup-ocamlc.byte-build-env) => passed
 ... testing 'array_spec.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'array_spec.ml' with line 6 (flat-float-array) => predicate "compiler configured with --enable-flat-float-array" is satisfied
 ... testing 'array_spec.ml' with line 8 (stack-allocation) => predicate "Stack allocation enabled" is satisfied
 ... testing 'array_spec.ml' with line 10 (check-ocamlc.byte-output) => passed
 ... testing 'array_spec.ml' with line 12 (no-stack-allocation) => predicate "Stack allocation disabled" is not satisfied
 ... testing 'array_spec.ml' with line 17 (no-flat-float-array) => predicate "compiler configured with --disable-flat-float-array" is not satisfied
 ... testing 'comparison_optim.ml' with default (native) => passed
 ... testing 'comparison_optim.ml' with default (bytecode) => passed
 ... testing 'comparison_table.ml' with line 2 (setup-ocamlc.byte-build-env) => passed
 ... testing 'comparison_table.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'comparison_table.ml' with line 6 (stack-allocation) => predicate "Stack allocation enabled" is satisfied
 ... testing 'comparison_table.ml' with line 8 (check-ocamlc.byte-output) => passed
 ... testing 'comparison_table.ml' with line 10 (no-stack-allocation) => predicate "Stack allocation disabled" is not satisfied
 ... testing 'locs.ml' with default (native) => passed
 ... testing 'locs.ml' with default (bytecode) => passed
 ... testing 'module_coercion.ml' with line 2 (setup-ocamlc.byte-build-env) => passed
 ... testing 'module_coercion.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'module_coercion.ml' with line 6 (flat-float-array) => predicate "compiler configured with --enable-flat-float-array" is satisfied
 ... testing 'module_coercion.ml' with line 8 (check-ocamlc.byte-output) => passed
 ... testing 'module_coercion.ml' with line 10 (no-flat-float-array) => predicate "compiler configured with --disable-flat-float-array" is not satisfied
 ... testing 'ref_spec.ml' with line 2 (setup-ocamlc.byte-build-env) => passed
 ... testing 'ref_spec.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'ref_spec.ml' with line 6 (stack-allocation) => predicate "Stack allocation enabled" is satisfied
 ... testing 'ref_spec.ml' with line 8 (check-ocamlc.byte-output) => passed
 ... testing 'ref_spec.ml' with line 10 (no-stack-allocation) => predicate "Stack allocation disabled" is not satisfied
 ... testing 'sendcache.ml' with default (native) => passed
 ... testing 'sendcache.ml' with default (bytecode) => passed
Running tests from 'tests/tsan' ...
 ... testing 'array_elt.ml' with line 5 (tsan) => predicate "tsan available" is not satisfied
 ... testing 'exn_from_c.ml' with line 7 (tsan) => predicate "tsan available" is not satisfied
 ... testing 'exn_in_callback.ml' with line 7 (tsan) => predicate "tsan available" is not satisfied
 ... testing 'exn_reraise.ml' with line 7 (tsan) => predicate "tsan available" is not satisfied
 ... testing 'handlers_at_tail.ml' with line 6 (tsan) => predicate "tsan available" is not satisfied
 ... testing 'norace_atomics.ml' with line 5 (tsan) => predicate "tsan available" is not satisfied
 ... testing 'perform.ml' with line 6 (tsan) => predicate "tsan available" is not satisfied
 ... testing 'raise_through_handler.ml' with line 6 (tsan) => predicate "tsan available" is not satisfied
 ... testing 'record_field.ml' with line 5 (tsan) => predicate "tsan available" is not satisfied
 ... testing 'reperform.ml' with line 6 (tsan) => predicate "tsan available" is not satisfied
 ... testing 'unhandled.ml' with line 6 (tsan) => predicate "tsan available" is not satisfied
Running tests from 'tests/typing-core-bugs' ...
 ... testing 'const_int_hint.ml' with line 2 (expect) => passed
 ... testing 'missing_rec_hint.ml' with line 2 (expect) => passed
 ... testing 'repeated_did_you_mean.ml' with line 2 (expect) => passed
 ... testing 'type_expected_explanation.ml' with line 3 (expect) => passed
 ... testing 'unit_fun_hints.ml' with line 3 (expect) => passed
Running tests from 'tests/typing-deprecated' ...
 ... testing 'alerts.ml' with line 2 (expect) => passed
 ... testing 'deprecated.ml' with line 2 (expect) => passed
Running tests from 'tests/typing-extension-constructor' ...
 ... testing 'test.ml' with line 2 (toplevel) => passed
Running tests from 'tests/typing-extensions' ...
 ... testing 'cast.ml' with line 2 (toplevel) => passed
 ... testing 'disambiguation.ml' with line 2 (expect) => passed
 ... testing 'extensions.ml' with line 2 (expect) => passed
 ... testing 'msg.ml' with line 2 (toplevel) => passed
 ... testing 'open_types.ml' with line 2 (expect) => passed
Running tests from 'tests/typing-external' ...
 ... testing 'pr11392.ml' with line 2 (expect) => passed
Running tests from 'tests/typing-fstclassmod' ...
 ... testing 'aliases.ml' with line 2 (expect) => passed
 ... testing 'fstclassmod.ml' with default (native) => passed
 ... testing 'fstclassmod.ml' with default (bytecode) => passed
 ... testing 'nondep_instance.ml' with line 2 (expect) => passed
 ... testing 'scope_escape.ml' with line 2 (expect) => passed
Running tests from 'tests/typing-gadts' ...
 ... testing 'ambiguity.ml' with line 2 (expect) => passed
 ... testing 'ambivalent_apply.ml' with line 2 (expect) => passed
 ... testing 'didier.ml' with line 2 (expect) => passed
 ... testing 'dynamic_frisch.ml' with line 2 (expect) => passed
 ... testing 'gadthead.ml' with line 2 (expect) => passed
 ... testing 'name_existentials.ml' with line 2 (expect) => passed
 ... testing 'nested_equations.ml' with line 2 (expect) => passed
 ... testing 'omega07.ml' with line 2 (expect) => passed
 ... testing 'optional_args.ml' with line 2 (expect) => passed
 ... testing 'or_patterns.ml' with line 2 (expect) => passed
 ... testing 'packed-module-recasting.ml' with line 2 (expect) => passed
 ... testing 'pr10189.ml' with line 2 (expect) => passed
 ... testing 'pr10271.ml' with line 2 (expect) => passed
 ... testing 'pr10348.ml' with line 2 (expect) => passed
 ... testing 'pr10735.ml' with line 2 (expect) => passed
 ... testing 'pr10907.ml' with line 2 (expect) => passed
 ... testing 'pr11888.ml' with line 2 (expect) => passed
 ... testing 'pr5332.ml' with line 2 (expect) => passed
 ... testing 'pr5689.ml' with line 2 (expect) => passed
 ... testing 'pr5785.ml' with line 2 (expect) => passed
 ... testing 'pr5848.ml' with line 2 (expect) => passed
 ... testing 'pr5906.ml' with line 2 (expect) => passed
 ... testing 'pr5948.ml' with line 2 (expect) => passed
 ... testing 'pr5981.ml' with line 2 (expect) => passed
 ... testing 'pr5985.ml' with line 2 (expect) => passed
 ... testing 'pr5989.ml' with line 2 (expect) => passed
 ... testing 'pr5997.ml' with line 2 (expect) => passed
 ... testing 'pr6158.ml' with line 2 (expect) => passed
 ... testing 'pr6163.ml' with line 2 (expect) => passed
 ... testing 'pr6174.ml' with line 2 (expect) => passed
 ... testing 'pr6241.ml' with line 2 (expect) => passed
 ... testing 'pr6690.ml' with line 2 (expect) => passed
 ... testing 'pr6817.ml' with line 2 (expect) => passed
 ... testing 'pr6934.ml' with line 2 (expect) => passed
 ... testing 'pr6980.ml' with line 2 (expect) => passed
 ... testing 'pr6993_bad.ml' with line 2 (expect) => passed
 ... testing 'pr7016.ml' with line 2 (expect) => passed
 ... testing 'pr7160.ml' with line 2 (expect) => passed
 ... testing 'pr7214.ml' with line 2 (expect) => passed
 ... testing 'pr7222.ml' with line 2 (expect) => passed
 ... testing 'pr7230.ml' with line 2 (expect) => passed
 ... testing 'pr7234.ml' with line 2 (expect) => passed
 ... testing 'pr7260.ml' with line 2 (expect) => passed
 ... testing 'pr7269.ml' with line 2 (expect) => passed
 ... testing 'pr7298.ml' with line 2 (expect) => passed
 ... testing 'pr7374.ml' with line 2 (expect) => passed
 ... testing 'pr7378.ml' with line 2 (expect) => passed
 ... testing 'pr7381.ml' with line 2 (expect) => passed
 ... testing 'pr7390.ml' with line 2 (expect) => passed
 ... testing 'pr7391.ml' with line 2 (expect) => passed
 ... testing 'pr7397.ml' with line 2 (expect) => passed
 ... testing 'pr7421.ml' with line 2 (expect) => passed
 ... testing 'pr7432.ml' with line 2 (expect) => passed
 ... testing 'pr7520.ml' with line 2 (expect) => passed
 ... testing 'pr7618.ml' with line 2 (expect) => passed
 ... testing 'pr7747.ml' with line 2 (expect) => passed
 ... testing 'pr7902.ml' with line 2 (expect) => passed
 ... testing 'pr9019.ml' with line 2 (expect) => passed
 ... testing 'pr9759.ml' with line 2 (expect) => passed
 ... testing 'pr9799.ml' with line 2 (expect) => passed
 ... testing 'principality-and-gadts.ml' with line 2 (expect) => passed
 ... testing 'return_type.ml' with line 2 (expect) => passed
 ... testing 'syntactic-arity.ml' with line 2 (expect) => passed
 ... testing 'term-conv.ml' with line 2 (expect) => passed
 ... testing 'test.ml' with line 2 (expect) => passed
 ... testing 'unexpected_existentials.ml' with line 2 (expect) => passed
 ... testing 'unify_mb.ml' with line 2 (expect) => passed
 ... testing 'variables_in_mcomp.ml' with line 2 (expect) => passed
 ... testing 'yallop_bugs.ml' with line 2 (expect) => passed
Running tests from 'tests/typing-immediate' ...
 ... testing 'immediate.ml' with line 2 (expect) => passed
Running tests from 'tests/typing-implicit-source-positions' ...
 ... testing 'application_via_option.ml' with line 118 (expect) => passed
 ... testing 'commuting.ml' with line 2 (expect) => passed
 ... testing 'expressions.ml' with line 31 (expect) => passed
 ... testing 'fn_decl_and_defn.ml' with line 2 (expect) => passed
 ... testing 'implicit_argument.ml' with line 86 (expect) => passed
 ... testing 'invalid_usages.ml' with line 2 (expect) => passed
 ... testing 'let_operators.ml' with line 55 (expect) => passed
 ... testing 'location_with_directory.ml' with line 3 (native) => passed
 ... testing 'object_system.ml' with line 225 (expect) => passed
 ... testing 'recursion.ml' with line 2 (expect) => passed
 ... testing 'rev_apply_correct_location.ml' with line 2 (expect) => passed
 ... testing 'shadowing.ml' with line 2 (expect) => passed
 ... testing 'synonyms.ml' with line 2 (expect) => passed
Running tests from 'tests/typing-implicit_unpack' ...
 ... testing 'implicit_unpack.ml' with line 2 (expect) => passed
Running tests from 'tests/typing-kind' ...
 ... testing 'kind_mismatch.ml' with line 2 (expect) => passed
Running tests from 'tests/typing-labeled-tuples' ...
 ... testing 'labeled_tuple_patterns.ml' with line 3 (expect) => passed
 ... testing 'labeled_tuples_and_constructors.ml' with line 3 (expect) => passed
 ... testing 'labeled_tuples_dsource.ml' with line 3 (expect) => passed
 ... testing 'labeledtuples.ml' with line 3 (expect) => passed
Running tests from 'tests/typing-labels' ...
 ... testing 'mixin.ml' with default (native) => passed
 ... testing 'mixin.ml' with default (bytecode) => passed
 ... testing 'mixin2.ml' with default (native) => passed
 ... testing 'mixin2.ml' with default (bytecode) => passed
 ... testing 'mixin3.ml' with default (native) => passed
 ... testing 'mixin3.ml' with default (bytecode) => passed
Running tests from 'tests/typing-layouts' ...
 ... testing 'allow_illegal_crossing.ml' with line 4 (expect) => passed
 ... testing 'annots-failing.ml' with line 3 (skip) => skipped (bugs not fixed yet)
 ... testing 'annots.ml' with line 4 (expect) => passed
 ... testing 'annots.ml' with line 7 (expect) => passed
 ... testing 'any_in_types.ml' with line 4 (native) => passed
 ... testing 'any_in_types.ml' with line 6 (bytecode) => passed
 ... testing 'basics.ml' with line 4 (expect) => passed
 ... testing 'basics.ml' with line 7 (expect) => passed
 ... testing 'basics_alpha.ml' with line 3 (expect) => passed
 ... testing 'datatypes.ml' with line 3 (expect) => passed
 ... testing 'datatypes.ml' with line 6 (expect) => passed
 ... testing 'datatypes_alpha.ml' with line 3 (expect) => passed
 ... testing 'erasable_annot.ml' with line 3 (expect) => passed
 ... testing 'error_message_attr.ml' with line 4 (expect) => passed
 ... testing 'generate.ml' with line 3 (setup-ocamlopt.opt-build-env) => passed
 ... testing 'generate.ml' with line 6 (ocamlopt.opt) => passed
 ... testing 'generate.ml' with line 8 (run) => passed
 ... testing 'generate.ml' with line 11 (check-program-output) => passed
 ... testing 'immediates.ml' with line 103 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'immediates.ml' with line 105 (native) => passed
 ... testing 'immediates.ml' with line 107 (bytecode) => passed
 ... testing 'immediates.ml' with line 110 (native) => passed
 ... testing 'immediates.ml' with line 113 (bytecode) => passed
 ... testing 'immediates.ml' with line 116 (native) => passed
 ... testing 'immediates.ml' with line 119 (bytecode) => passed
 ... testing 'immediates.ml' with line 122 (setup-ocamlc.byte-build-env) => passed
 ... testing 'immediates.ml' with line 125 (ocamlc.byte) => passed
 ... testing 'immediates.ml' with line 126 (check-ocamlc.byte-output) => passed
 ... testing 'invalid_integer_literals.ml' with line 3 (toplevel) => passed
 ... testing 'jkinds.ml' with line 3 (expect) => passed
 ... testing 'layout_poly.ml' with line 5 (expect) => passed
 ... testing 'layout_poly.ml' with line 8 (expect) => passed
 ... testing 'layout_poly_native.ml' with line 4 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'layout_poly_native.ml' with line 6 (native) => passed
 ... testing 'layout_poly_native.ml' with line 8 (bytecode) => passed
 ... testing 'literals.ml' with line 4 (expect) => passed
 ... testing 'literals_native.ml' with line 4 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'literals_native.ml' with line 6 (native) => passed
 ... testing 'literals_native.ml' with line 8 (bytecode) => passed
 ... testing 'mixed_constructor_arguments.ml' with line 4 (expect) => passed
 ... testing 'mixed_constructor_arguments.ml' with line 7 (expect) => passed
 ... testing 'mixed_constructor_arguments.ml' with line 9 (expect) => passed
 ... testing 'mixed_constructor_arguments_alpha.ml' with line 3 (expect) => passed
 ... testing 'mixed_records.ml' with line 4 (expect) => passed
 ... testing 'mixed_records.ml' with line 7 (expect) => passed
 ... testing 'mixed_records.ml' with line 9 (expect) => passed
 ... testing 'mixed_records_alpha.ml' with line 3 (expect) => passed
 ... testing 'modules.ml' with line 4 (expect) => passed
 ... testing 'modules.ml' with line 7 (expect) => passed
 ... testing 'modules_alpha.ml' with line 3 (expect) => passed
 ... testing 'or_null.ml' with line 3 (skip) => skipped (Unboxed types aren't implemented yet)
 ... testing 'parsing.ml' with line 4 (toplevel) => passed
 ... testing 'parsing.ml' with line 8 (toplevel) => passed
 ... testing 'parsing.ml' with line 12 (toplevel) => passed
 ... testing 'printing.ml' with line 3 (expect) => passed
 ... testing 'unboxed_bigstring_primitives.ml' with line 2 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'unboxed_bigstring_primitives.ml' with line 5 (native) => passed
 ... testing 'unboxed_bigstring_primitives.ml' with line 7 (bytecode) => passed
 ... testing 'unboxed_bigstring_primitives.ml' with line 10 (native) => passed
 ... testing 'unboxed_bigstring_primitives.ml' with line 13 (bytecode) => passed
 ... testing 'unboxed_bigstring_primitives.ml' with line 16 (native) => passed
 ... testing 'unboxed_bigstring_primitives.ml' with line 19 (bytecode) => passed
 ... testing 'unboxed_int_array_indexing.ml' with line 2 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'unboxed_int_array_indexing.ml' with line 5 (native) => passed
 ... testing 'unboxed_int_array_indexing.ml' with line 7 (bytecode) => passed
 ... testing 'unboxed_int_array_indexing.ml' with line 10 (native) => passed
 ... testing 'unboxed_int_array_indexing.ml' with line 13 (bytecode) => passed
 ... testing 'unboxed_int_array_indexing.ml' with line 16 (native) => passed
 ... testing 'unboxed_int_array_indexing.ml' with line 19 (bytecode) => passed
 ... testing 'unboxed_int_stringlike_indexing.ml' with line 2 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'unboxed_int_stringlike_indexing.ml' with line 6 (native) => passed
 ... testing 'unboxed_int_stringlike_indexing.ml' with line 9 (native) => passed
 ... testing 'unboxed_int_stringlike_indexing.ml' with line 11 (bytecode) => passed
 ... testing 'unboxed_int_stringlike_indexing.ml' with line 14 (native) => passed
 ... testing 'unboxed_int_stringlike_indexing.ml' with line 17 (native) => passed
 ... testing 'unboxed_int_stringlike_indexing.ml' with line 20 (bytecode) => passed
 ... testing 'unboxed_int_stringlike_indexing.ml' with line 23 (native) => passed
 ... testing 'unboxed_int_stringlike_indexing.ml' with line 26 (native) => passed
 ... testing 'unboxed_int_stringlike_indexing.ml' with line 29 (bytecode) => passed
 ... testing 'user_errors.ml' with line 3 (expect) => passed
 ... testing 'void.ml' with line 3 (expect) => passed
 ... testing 'void.ml' with line 6 (expect) => passed
 ... testing 'void_alpha.ml' with line 3 (expect) => passed
Running tests from 'tests/typing-layouts-arrays' ...
 ... testing 'basics.ml' with line 3 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'basics.ml' with line 6 (expect) => passed
 ... testing 'basics.ml' with line 9 (expect) => passed
 ... testing 'basics_alpha.ml' with line 3 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'basics_alpha.ml' with line 6 (expect) => passed
 ... testing 'exp_and_pat.ml' with line 5 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'exp_and_pat.ml' with line 8 (native) => passed
 ... testing 'exp_and_pat.ml' with line 11 (bytecode) => passed
 ... testing 'exp_and_pat.ml' with line 14 (native) => passed
 ... testing 'exp_and_pat.ml' with line 17 (bytecode) => passed
 ... testing 'exp_and_pat.ml' with line 20 (native) => passed
 ... testing 'exp_and_pat.ml' with line 23 (bytecode) => passed
 ... testing 'exp_and_pat_failing.ml' with line 5 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'exp_and_pat_failing.ml' with line 8 (expect) => passed
 ... testing 'exp_and_pat_failing.ml' with line 11 (expect) => passed
 ... testing 'exp_and_pat_failing.ml' with line 14 (expect) => passed
 ... testing 'test_float32_u_array.ml' with line 5 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'test_float32_u_array.ml' with line 7 (bytecode) => passed
 ... testing 'test_float32_u_array.ml' with line 9 (native) => passed
 ... testing 'test_float32_u_array.ml' with line 12 (bytecode) => passed
 ... testing 'test_float32_u_array.ml' with line 15 (native) => passed
 ... testing 'test_int32_u_array.ml' with line 5 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'test_int32_u_array.ml' with line 7 (bytecode) => passed
 ... testing 'test_int32_u_array.ml' with line 9 (native) => passed
 ... testing 'test_int32_u_array.ml' with line 12 (bytecode) => passed
 ... testing 'test_int32_u_array.ml' with line 15 (native) => passed
 ... testing 'test_int64_u_array.ml' with line 5 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'test_int64_u_array.ml' with line 7 (bytecode) => passed
 ... testing 'test_int64_u_array.ml' with line 9 (native) => passed
 ... testing 'test_int64_u_array.ml' with line 12 (bytecode) => passed
 ... testing 'test_int64_u_array.ml' with line 15 (native) => passed
 ... testing 'test_nativeint_u_array.ml' with line 5 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'test_nativeint_u_array.ml' with line 7 (bytecode) => passed
 ... testing 'test_nativeint_u_array.ml' with line 9 (native) => passed
 ... testing 'test_nativeint_u_array.ml' with line 12 (bytecode) => passed
 ... testing 'test_nativeint_u_array.ml' with line 15 (native) => passed
 ... testing 'test_stdlib_float_u_array.ml' with line 5 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'test_stdlib_float_u_array.ml' with line 7 (native) => passed
 ... testing 'test_stdlib_float_u_array.ml' with line 9 (bytecode) => passed
 ... testing 'test_stdlib_float_u_array.ml' with line 12 (native) => passed
 ... testing 'test_stdlib_float_u_array.ml' with line 15 (bytecode) => passed
Running tests from 'tests/typing-layouts-bits32' ...
 ... testing 'alloc.ml' with line 3 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'alloc.ml' with line 4 (native) => passed
 ... testing 'basics.ml' with line 3 (expect) => passed
 ... testing 'basics.ml' with line 6 (expect) => passed
 ... testing 'basics_alpha.ml' with line 4 (expect) => passed
 ... testing 'c_api.ml' with line 3 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'c_api.ml' with line 5 (native) => passed
 ... testing 'c_api.ml' with line 7 (bytecode) => passed
 ... testing 'c_api.ml' with line 10 (native) => passed
 ... testing 'c_api.ml' with line 13 (bytecode) => passed
 ... testing 'c_api.ml' with line 16 (native) => passed
 ... testing 'c_api.ml' with line 19 (bytecode) => passed
 ... testing 'parsing.ml' with line 2 (expect) => passed
 ... testing 'test_int32_u.ml' with default (native) => passed
 ... testing 'test_int32_u.ml' with default (bytecode) => passed
 ... testing 'unboxed_bits32s.ml' with line 3 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'unboxed_bits32s.ml' with line 5 (native) => passed
 ... testing 'unboxed_bits32s.ml' with line 7 (bytecode) => passed
 ... testing 'unboxed_bits32s.ml' with line 10 (native) => passed
 ... testing 'unboxed_bits32s.ml' with line 13 (bytecode) => passed
 ... testing 'unboxed_bits32s.ml' with line 16 (native) => passed
 ... testing 'unboxed_bits32s.ml' with line 19 (bytecode) => passed
 ... testing 'unboxed_bits32s_alpha.ml' with line 3 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'unboxed_bits32s_alpha.ml' with line 6 (native) => passed
 ... testing 'unboxed_bits32s_alpha.ml' with line 9 (bytecode) => passed
Running tests from 'tests/typing-layouts-bits64' ...
 ... testing 'alloc.ml' with line 3 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'alloc.ml' with line 4 (native) => passed
 ... testing 'basics.ml' with line 3 (expect) => passed
 ... testing 'basics.ml' with line 6 (expect) => passed
 ... testing 'basics_alpha.ml' with line 4 (expect) => passed
 ... testing 'c_api.ml' with line 3 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'c_api.ml' with line 5 (native) => passed
 ... testing 'c_api.ml' with line 7 (bytecode) => passed
 ... testing 'c_api.ml' with line 10 (native) => passed
 ... testing 'c_api.ml' with line 13 (bytecode) => passed
 ... testing 'c_api.ml' with line 16 (native) => passed
 ... testing 'c_api.ml' with line 19 (bytecode) => passed
 ... testing 'parsing.ml' with line 2 (expect) => passed
 ... testing 'test_int64_u.ml' with default (native) => passed
 ... testing 'test_int64_u.ml' with default (bytecode) => passed
 ... testing 'unboxed_bits64s.ml' with line 3 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'unboxed_bits64s.ml' with line 5 (native) => passed
 ... testing 'unboxed_bits64s.ml' with line 7 (bytecode) => passed
 ... testing 'unboxed_bits64s.ml' with line 10 (native) => passed
 ... testing 'unboxed_bits64s.ml' with line 13 (bytecode) => passed
 ... testing 'unboxed_bits64s.ml' with line 16 (native) => passed
 ... testing 'unboxed_bits64s.ml' with line 19 (bytecode) => passed
 ... testing 'unboxed_bits64s_alpha.ml' with line 3 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'unboxed_bits64s_alpha.ml' with line 6 (native) => passed
 ... testing 'unboxed_bits64s_alpha.ml' with line 9 (bytecode) => passed
Running tests from 'tests/typing-layouts-caml-modify' ...
 ... testing 'basics.ml' with line 4 (not-macos) => predicate "not on a MacOS system" is satisfied
 ... testing 'basics.ml' with line 6 (native) => passed
Running tests from 'tests/typing-layouts-err-msg' ...
 ... testing 'annots.ml' with line 3 (expect) => passed
 ... testing 'any.ml' with line 3 (expect) => passed
 ... testing 'any_missing_cmi.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'any_missing_cmi.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'any_missing_cmi.ml' with line 7 (ocamlc.byte) => passed
 ... testing 'any_missing_cmi.ml' with line 9 (script) => passed
 ... testing 'any_missing_cmi.ml' with line 10 (expect) => passed
 ... testing 'concrete.ml' with line 3 (expect) => passed
 ... testing 'concrete_struct_item_expr.ml' with line 3 (toplevel) => passed
 ... testing 'concrete_v1_check.ml' with line 3 (toplevel) => passed
 ... testing 'debug_printer.ml' with line 3 (toplevel) => passed
 ... testing 'float64.ml' with line 3 (expect) => passed
 ... testing 'gadt_existential.ml' with line 4 (setup-ocamlc.byte-build-env) => passed
 ... testing 'gadt_existential.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'gadt_existential.ml' with line 6 (check-ocamlc.byte-output) => passed
 ... testing 'immediate.ml' with line 3 (expect) => passed
 ... testing 'immediate64.ml' with line 3 (expect) => passed
 ... testing 'probe.ml' with line 2 (setup-ocamlopt.opt-build-env) => passed
 ... testing 'probe.ml' with line 3 (arch_amd64) => predicate "Target is AMD64 architecture" is satisfied
 ... testing 'probe.ml' with line 8 (ocamlopt.opt) => passed
 ... testing 'probe.ml' with line 9 (check-ocamlopt.opt-output) => passed
 ... testing 'test.ml' with line 4 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 6 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 7 (expect) => passed
 ... testing 'value.ml' with line 3 (expect) => passed
 ... testing 'void.ml' with line 3 (expect) => passed
Running tests from 'tests/typing-layouts-float32' ...
 ... testing 'alloc.ml' with line 2 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'alloc.ml' with line 5 (native) => passed
 ... testing 'basics.ml' with line 2 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'basics.ml' with line 5 (expect) => passed
 ... testing 'c_api.ml' with line 4 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'c_api.ml' with line 7 (native) => passed
 ... testing 'c_api.ml' with line 10 (bytecode) => passed
 ... testing 'c_api.ml' with line 13 (native) => passed
 ... testing 'c_api.ml' with line 16 (bytecode) => passed
 ... testing 'c_api.ml' with line 19 (native) => passed
 ... testing 'c_api.ml' with line 22 (bytecode) => passed
 ... testing 'parsing.ml' with line 5 (expect) => passed
 ... testing 'unboxed_float32s.ml' with line 4 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'unboxed_float32s.ml' with line 7 (native) => passed
 ... testing 'unboxed_float32s.ml' with line 10 (bytecode) => passed
 ... testing 'unboxed_float32s.ml' with line 13 (native) => passed
 ... testing 'unboxed_float32s.ml' with line 16 (bytecode) => passed
Running tests from 'tests/typing-layouts-float64' ...
 ... testing 'alloc.ml' with line 3 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'alloc.ml' with line 4 (native) => passed
 ... testing 'basics.ml' with line 2 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'basics.ml' with line 5 (expect) => passed
 ... testing 'c_api.ml' with line 4 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'c_api.ml' with line 6 (native) => passed
 ... testing 'c_api.ml' with line 8 (bytecode) => passed
 ... testing 'c_api.ml' with line 11 (native) => passed
 ... testing 'c_api.ml' with line 14 (bytecode) => passed
 ... testing 'c_api.ml' with line 17 (native) => passed
 ... testing 'c_api.ml' with line 20 (bytecode) => passed
 ... testing 'debug_events.ml' with line 4 (bytecode) => passed
 ... testing 'parsing.ml' with line 5 (expect) => passed
 ... testing 'parsing.ml' with line 7 (expect) => passed
 ... testing 'parsing_alpha.ml' with line 3 (expect) => passed
 ... testing 'stdlib_float_u.ml' with line 5 (native) => passed
 ... testing 'stdlib_float_u.ml' with line 8 (bytecode) => passed
 ... testing 'stdlib_float_u.ml' with line 11 (native) => passed
 ... testing 'stdlib_float_u.ml' with line 14 (bytecode) => passed
 ... testing 'unboxed_floats.ml' with line 4 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'unboxed_floats.ml' with line 6 (native) => passed
 ... testing 'unboxed_floats.ml' with line 8 (bytecode) => passed
 ... testing 'unboxed_floats.ml' with line 11 (native) => passed
 ... testing 'unboxed_floats.ml' with line 14 (bytecode) => passed
 ... testing 'unboxed_floats.ml' with line 17 (native) => passed
 ... testing 'unboxed_floats.ml' with line 20 (bytecode) => passed
 ... testing 'unboxed_floats.ml' with line 23 (native) => passed
 ... testing 'unboxed_floats.ml' with line 26 (bytecode) => passed
 ... testing 'unboxed_floats.ml' with line 29 (setup-ocamlc.byte-build-env) => passed
 ... testing 'unboxed_floats.ml' with line 32 (ocamlc.byte) => passed
 ... testing 'unboxed_floats.ml' with line 33 (check-ocamlc.byte-output) => passed
 ... testing 'unboxed_floats_beta.ml' with line 4 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'unboxed_floats_beta.ml' with line 7 (native) => passed
 ... testing 'unboxed_floats_beta.ml' with line 10 (bytecode) => passed
Running tests from 'tests/typing-layouts-gadt-sort-var' ...
 ... testing 'test.ml' with line 4 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 6 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 8 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 11 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 12 (check-ocamlc.byte-output) => passed
 ... testing 'test_extensible.ml' with line 4 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test_extensible.ml' with line 6 (ocamlc.byte) => passed
 ... testing 'test_extensible.ml' with line 8 (ocamlc.byte) => passed
 ... testing 'test_extensible.ml' with line 11 (ocamlc.byte) => passed
 ... testing 'test_extensible.ml' with line 12 (check-ocamlc.byte-output) => passed
Running tests from 'tests/typing-layouts-missing-cmi' ...
 ... testing 'c.ml' with line 4 (setup-ocamlc.byte-build-env) => passed
 ... testing 'c.ml' with line 6 (ocamlc.byte) => passed
 ... testing 'c.ml' with line 8 (ocamlc.byte) => passed
 ... testing 'c.ml' with line 10 (script) => passed
 ... testing 'c.ml' with line 11 (expect) => passed
 ... testing 'function_arg.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'function_arg.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'function_arg.ml' with line 7 (ocamlc.byte) => passed
 ... testing 'function_arg.ml' with line 9 (script) => passed
 ... testing 'function_arg.ml' with line 10 (expect) => passed
Running tests from 'tests/typing-layouts-or-null' ...
 ... testing 'array.ml' with line 3 (expect) => passed
 ... testing 'basics.ml' with line 3 (expect) => passed
 ... testing 'probe.ml' with line 2 (arch_amd64) => predicate "Target is AMD64 architecture" is satisfied
 ... testing 'probe.ml' with line 3 (not-macos) => predicate "not on a MacOS system" is satisfied
 ... testing 'probe.ml' with line 5 (native) => passed
 ... testing 'probe.ml' with line 6 (setup-ocamlopt.opt-build-env) => passed
 ... testing 'probe.ml' with line 7 (ocamlopt.opt) => passed
 ... testing 'probe.ml' with line 8 (check-ocamlopt.opt-output) => passed
 ... testing 'reexport.ml' with line 3 (expect) => passed
 ... testing 'reexport_attr_unused.ml' with line 4 (setup-ocamlc.byte-build-env) => passed
 ... testing 'reexport_attr_unused.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'reexport_attr_unused.ml' with line 6 (check-ocamlc.byte-output) => passed
 ... testing 'stdlib_or_null.ml' with line 4 (expect) => passed
 ... testing 'test_beta.ml' with line 3 (expect) => passed
 ... testing 'test_or_null.ml' with line 3 (expect) => passed
 ... testing 'test_stable.ml' with line 3 (expect) => passed
 ... testing 'variables.ml' with line 3 (expect) => passed
Running tests from 'tests/typing-layouts-products' ...
 ... testing 'basics.ml' with line 2 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'basics.ml' with line 6 (expect) => passed
 ... testing 'basics_alpha.ml' with line 2 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'basics_alpha.ml' with line 6 (expect) => passed
 ... testing 'maturity.ml' with line 3 (expect) => passed
 ... testing 'parsing_nullary_term.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'parsing_nullary_term.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'parsing_nullary_term.ml' with line 6 (check-ocamlc.byte-output) => passed
 ... testing 'parsing_nullary_type.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'parsing_nullary_type.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'parsing_nullary_type.ml' with line 6 (check-ocamlc.byte-output) => passed
 ... testing 'parsing_unary_term.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'parsing_unary_term.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'parsing_unary_term.ml' with line 6 (check-ocamlc.byte-output) => passed
 ... testing 'parsing_unary_type.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'parsing_unary_type.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'parsing_unary_type.ml' with line 6 (check-ocamlc.byte-output) => passed
 ... testing 'unboxed_tuples.ml' with line 4 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'unboxed_tuples.ml' with line 7 (setup-ocamlc.byte-build-env) => passed
 ... testing 'unboxed_tuples.ml' with line 9 (ocamlc.byte) => passed
 ... testing 'unboxed_tuples.ml' with line 10 (check-ocamlc.byte-output) => passed
 ... testing 'unboxed_tuples.ml' with line 13 (setup-ocamlc.byte-build-env) => passed
 ... testing 'unboxed_tuples.ml' with line 16 (ocamlc.byte) => passed
 ... testing 'unboxed_tuples.ml' with line 17 (check-ocamlc.byte-output) => passed
 ... testing 'unboxed_tuples.ml' with line 20 (setup-ocamlc.byte-build-env) => passed
 ... testing 'unboxed_tuples.ml' with line 23 (ocamlc.byte) => passed
 ... testing 'unboxed_tuples.ml' with line 24 (check-ocamlc.byte-output) => passed
 ... testing 'unboxed_tuples.ml' with line 27 (native) => passed
 ... testing 'unboxed_tuples.ml' with line 30 (native) => passed
 ... testing 'unboxed_tuples.ml' with line 33 (native) => passed
 ... testing 'unboxed_tuples.ml' with line 36 (bytecode) => passed
 ... testing 'unboxed_tuples.ml' with line 39 (native) => passed
 ... testing 'unboxed_tuples.ml' with line 42 (native) => passed
 ... testing 'unboxed_tuples.ml' with line 45 (native) => passed
 ... testing 'unboxed_tuples.ml' with line 48 (bytecode) => passed
Running tests from 'tests/typing-layouts-word' ...
 ... testing 'alloc.ml' with line 3 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'alloc.ml' with line 4 (native) => passed
 ... testing 'basics.ml' with line 3 (expect) => passed
 ... testing 'basics.ml' with line 6 (expect) => passed
 ... testing 'basics_alpha.ml' with line 4 (expect) => passed
 ... testing 'c_api.ml' with line 3 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'c_api.ml' with line 5 (native) => passed
 ... testing 'c_api.ml' with line 7 (bytecode) => passed
 ... testing 'c_api.ml' with line 10 (native) => passed
 ... testing 'c_api.ml' with line 13 (bytecode) => passed
 ... testing 'c_api.ml' with line 16 (native) => passed
 ... testing 'c_api.ml' with line 19 (bytecode) => passed
 ... testing 'parsing.ml' with line 2 (expect) => passed
 ... testing 'test_nativeint_u.ml' with default (native) => passed
 ... testing 'test_nativeint_u.ml' with default (bytecode) => passed
 ... testing 'unboxed_nativeints.ml' with line 3 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'unboxed_nativeints.ml' with line 5 (native) => passed
 ... testing 'unboxed_nativeints.ml' with line 7 (bytecode) => passed
 ... testing 'unboxed_nativeints.ml' with line 10 (native) => passed
 ... testing 'unboxed_nativeints.ml' with line 13 (bytecode) => passed
 ... testing 'unboxed_nativeints.ml' with line 16 (native) => passed
 ... testing 'unboxed_nativeints.ml' with line 19 (bytecode) => passed
 ... testing 'unboxed_nativeints_alpha.ml' with line 3 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'unboxed_nativeints_alpha.ml' with line 6 (native) => passed
 ... testing 'unboxed_nativeints_alpha.ml' with line 9 (bytecode) => passed
Running tests from 'tests/typing-local' ...
 ... testing 'alloc.ml' with line 4 (bytecode) => passed
 ... testing 'alloc.ml' with line 6 (stack-allocation) => predicate "Stack allocation enabled" is satisfied
 ... testing 'alloc.ml' with line 8 (native) => passed
 ... testing 'alloc.ml' with line 10 (no-stack-allocation) => predicate "Stack allocation disabled" is not satisfied
 ... testing 'alloc_arg_with_mli.ml' with line 2 (stack-allocation) => predicate "Stack allocation enabled" is satisfied
 ... testing 'alloc_arg_with_mli.ml' with line 3 (native) => passed
 ... testing 'alloc_arg_without_mli.ml' with line 3 (stack-allocation) => predicate "Stack allocation enabled" is satisfied
 ... testing 'alloc_arg_without_mli.ml' with line 7 (native) => passed
 ... testing 'aritybug.ml' with default (native) => passed
 ... testing 'aritybug.ml' with default (bytecode) => passed
 ... testing 'close_at_apply.ml' with line 2 (stack-allocation) => predicate "Stack allocation enabled" is satisfied
 ... testing 'close_at_apply.ml' with line 3 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'close_at_apply.ml' with line 6 (native) => passed
 ... testing 'close_at_apply.ml' with line 9 (native) => passed
 ... testing 'comballoc.ml' with default (native) => passed
 ... testing 'comballoc.ml' with default (bytecode) => passed
 ... testing 'crossing.ml' with line 2 (expect) => passed
 ... testing 'crossing_64.ml' with line 2 (arch64) => predicate "64-bit architecture" is satisfied
 ... testing 'crossing_64.ml' with line 3 (expect) => passed
 ... testing 'curry.ml' with line 4 (bytecode) => passed
 ... testing 'curry.ml' with line 6 (stack-allocation) => predicate "Stack allocation enabled" is satisfied
 ... testing 'curry.ml' with line 8 (native) => passed
 ... testing 'curry.ml' with line 10 (no-stack-allocation) => predicate "Stack allocation disabled" is not satisfied
 ... testing 'exceptions.ml' with line 2 (native) => passed
 ... testing 'exclave.ml' with line 2 (expect) => passed
 ... testing 'external.ml' with line 2 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'external.ml' with line 3 (native) => passed
 ... testing 'float_iarray.ml' with line 5 (bytecode) => passed
 ... testing 'float_iarray.ml' with line 7 (stack-allocation) => predicate "Stack allocation enabled" is satisfied
 ... testing 'float_iarray.ml' with line 9 (native) => passed
 ... testing 'float_iarray.ml' with line 11 (no-stack-allocation) => predicate "Stack allocation disabled" is not satisfied
 ... testing 'lifetime.ml' with default (native) => passed
 ... testing 'lifetime.ml' with default (bytecode) => passed
 ... testing 'local-layouts.ml' with line 3 (expect) => passed
 ... testing 'local.ml' with line 2 (expect) => passed
 ... testing 'local_floatarray_test.ml' with default (native) => passed
 ... testing 'local_floatarray_test.ml' with default (bytecode) => passed
 ... testing 'local_gadt.ml' with default (native) => passed
 ... testing 'local_gadt.ml' with default (bytecode) => passed
 ... testing 'local_optparam.ml' with default (native) => passed
 ... testing 'local_optparam.ml' with default (bytecode) => passed
 ... testing 'localgcbug.ml' with line 2 (native) => passed
 ... testing 'loop_regions.ml' with line 3 (stack-allocation) => predicate "Stack allocation enabled" is satisfied
 ... testing 'loop_regions.ml' with line 5 (native) => passed
 ... testing 'loop_regions.ml' with line 7 (no-stack-allocation) => predicate "Stack allocation disabled" is not satisfied
 ... testing 'match_with_exception.ml' with line 2 (native) => passed
 ... testing 'mutate.ml' with default (native) => passed
 ... testing 'mutate.ml' with default (bytecode) => passed
 ... testing 'partial.ml' with default (native) => passed
 ... testing 'partial.ml' with default (bytecode) => passed
 ... testing 'partial_app_bug.ml' with default (native) => passed
 ... testing 'partial_app_bug.ml' with default (bytecode) => passed
 ... testing 'partial_app_dead_gadt_case.ml' with line 3 (stack-allocation) => predicate "Stack allocation enabled" is satisfied
 ... testing 'partial_app_dead_gadt_case.ml' with line 5 (native) => passed
 ... testing 'partial_app_dead_gadt_case.ml' with line 7 (stack-allocation) => predicate "Stack allocation enabled" is satisfied
 ... testing 'partial_app_dead_gadt_case.ml' with line 9 (native) => passed
 ... testing 'partial_coerce.ml' with default (native) => passed
 ... testing 'partial_coerce.ml' with default (bytecode) => passed
 ... testing 'pr2848.ml' with default (native) => passed
 ... testing 'pr2848.ml' with default (bytecode) => passed
 ... testing 'pr902.ml' with line 2 (stack-allocation) => predicate "Stack allocation enabled" is satisfied
 ... testing 'pr902.ml' with line 3 (native) => passed
 ... testing 'regions.ml' with line 4 (stack-allocation) => predicate "Stack allocation enabled" is satisfied
 ... testing 'regions.ml' with line 5 (native) => passed
 ... testing 'regression_class_type.ml' with line 3 (setup-ocamlc.opt-build-env) => passed
 ... testing 'regression_class_type.ml' with line 5 (ocamlc.opt) => passed
 ... testing 'regression_class_type.ml' with line 8 (ocamlc.opt) => passed
 ... testing 'regression_cmm_unboxing.ml' with line 3 (stack-allocation) => predicate "Stack allocation enabled" is satisfied
 ... testing 'regression_cmm_unboxing.ml' with line 5 (native) => passed
 ... testing 'regression_cmm_unboxing.ml' with line 7 (no-stack-allocation) => predicate "Stack allocation disabled" is not satisfied
 ... testing 'regression_expr_size.ml' with default (native) => passed
 ... testing 'regression_expr_size.ml' with default (bytecode) => passed
 ... testing 'tailcalls.ml' with line 2 (stack-allocation) => predicate "Stack allocation enabled" is satisfied
 ... testing 'tailcalls.ml' with line 3 (native) => passed
 ... testing 'test_iarray.ml' with line 5 (bytecode) => passed
 ... testing 'test_iarray.ml' with line 7 (stack-allocation) => predicate "Stack allocation enabled" is satisfied
 ... testing 'test_iarray.ml' with line 9 (native) => passed
 ... testing 'test_iarray.ml' with line 11 (no-stack-allocation) => predicate "Stack allocation disabled" is not satisfied
 ... testing 'tmc.ml' with line 2 (stack-allocation) => predicate "Stack allocation enabled" is satisfied
 ... testing 'tmc.ml' with line 3 (setup-ocamlopt.opt-build-env) => passed
 ... testing 'tmc.ml' with line 5 (ocamlopt.opt) => passed
 ... testing 'tmc.ml' with line 6 (check-ocamlopt.opt-output) => passed
 ... testing 'type_arg_bug.ml' with default (native) => passed
 ... testing 'type_arg_bug.ml' with default (bytecode) => passed
Running tests from 'tests/typing-misc' ...
 ... testing 'apply_non_function.ml' with line 2 (expect) => passed
 ... testing 'build_as_type.ml' with line 2 (expect) => passed
 ... testing 'constraints.ml' with line 2 (expect) => passed
 ... testing 'datatype_manifests.ml' with line 2 (expect) => passed
 ... testing 'deep.ml' with line 2 (expect) => passed
 ... testing 'disambiguate_principality.ml' with line 2 (expect) => passed
 ... testing 'distant_errors.ml' with line 2 (expect) => passed
 ... testing 'empty_variant.ml' with line 2 (expect) => passed
 ... testing 'enrich_typedecl.ml' with line 2 (expect) => passed
 ... testing 'exotic_unifications.ml' with line 2 (expect) => passed
 ... testing 'external_arity.ml' with line 2 (expect) => passed
 ... testing 'filter_params.ml' with line 2 (expect) => passed
 ... testing 'gpr2277.ml' with line 2 (expect) => passed
 ... testing 'includeclass_errors.ml' with line 2 (expect) => passed
 ... testing 'injectivity.ml' with line 2 (expect) => passed
 ... testing 'inside_out.ml' with line 2 (expect) => passed
 ... testing 'is_expansive.ml' with line 2 (expect) => passed
 ... testing 'labels.ml' with line 2 (expect) => passed
 ... testing 'let_rec_approx.ml' with line 2 (expect) => passed
 ... testing 'normalize_type.ml' with line 2 (expect) => passed
 ... testing 'occur_check.ml' with line 2 (expect) => passed
 ... testing 'open.ml' with line 2 (expect) => passed
 ... testing 'optbinders.ml' with line 2 (expect) => passed
 ... testing 'pat_type_sharing.ml' with line 2 (expect) => passed
 ... testing 'pattern_open.ml' with line 2 (expect) => passed
 ... testing 'polyvars.ml' with line 2 (expect) => passed
 ... testing 'pr6416.ml' with line 3 (expect) => passed
 ... testing 'pr6634.ml' with line 2 (expect) => passed
 ... testing 'pr6939-flat-float-array.ml' with line 2 (flat-float-array) => predicate "compiler configured with --enable-flat-float-array" is satisfied
 ... testing 'pr6939-flat-float-array.ml' with line 3 (expect) => passed
 ... testing 'pr6939-no-flat-float-array.ml' with line 2 (no-flat-float-array) => predicate "compiler configured with --disable-flat-float-array" is not satisfied
 ... testing 'pr7103.ml' with line 2 (expect) => passed
 ... testing 'pr7228.ml' with line 2 (expect) => passed
 ... testing 'pr7668_bad.ml' with line 2 (expect) => passed
 ... testing 'pr7712.ml' with line 2 (expect) => passed
 ... testing 'pr7937.ml' with line 2 (expect) => passed
 ... testing 'pr8548.ml' with line 2 (expect) => passed
 ... testing 'pr8548_split.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr8548_split.ml' with line 7 (ocamlc.byte) => passed
 ... testing 'pr8548_split.ml' with line 11 (ocamlc.byte) => passed
 ... testing 'pr8548_split.ml' with line 15 (ocamlc.byte) => passed
 ... testing 'pr8548_split.ml' with line 19 (ocamlc.byte) => passed
 ... testing 'pr8548_split.ml' with line 23 (ocamlc.byte) => passed
 ... testing 'printing.ml' with line 2 (expect) => passed
 ... testing 'records.ml' with line 2 (expect) => passed
 ... testing 'scope_escape.ml' with line 2 (expect) => passed
 ... testing 'typecore_empty_polyvariant_error.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'typecore_empty_polyvariant_error.ml' with line 6 (ocamlc.byte) => passed
 ... testing 'typecore_empty_polyvariant_error.ml' with line 9 (toplevel) => passed
 ... testing 'typecore_errors.ml' with line 2 (expect) => passed
 ... testing 'typecore_errors.ml' with line 3 (expect) => passed
 ... testing 'typecore_nolabel_errors.ml' with line 3 (expect) => passed
 ... testing 'typetexp_errors.ml' with line 2 (expect) => passed
 ... testing 'unbound_type_variables.ml' with line 2 (expect) => passed
 ... testing 'unique_names_in_unification.ml' with line 2 (expect) => passed
 ... testing 'variance.ml' with line 2 (expect) => passed
 ... testing 'variant.ml' with line 2 (expect) => passed
 ... testing 'wellfounded.ml' with line 2 (expect) => passed
 ... testing 'wrong_kind.ml' with line 2 (expect) => passed
Running tests from 'tests/typing-misc-bugs' ...
 ... testing 'core_array_reduced_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'core_array_reduced_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'core_array_reduced_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'gadt_declaration_check.ml' with line 2 (expect) => passed
 ... testing 'pr6303_bad.ml' with line 16 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6303_bad.ml' with line 17 (ocamlc.byte) => passed
 ... testing 'pr6303_bad.ml' with line 18 (check-ocamlc.byte-output) => passed
 ... testing 'pr6946_bad.ml' with line 15 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6946_bad.ml' with line 16 (ocamlc.byte) => passed
 ... testing 'pr6946_bad.ml' with line 17 (check-ocamlc.byte-output) => passed
Running tests from 'tests/typing-missing-cmi' ...
 ... testing 'test.ml' with line 4 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 6 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 9 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 11 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 13 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 16 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 19 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 20 (check-ocamlc.byte-output) => passed
Running tests from 'tests/typing-missing-cmi-2' ...
 ... testing 'test.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 7 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 9 (script) => passed
 ... testing 'test.ml' with line 13 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 14 (check-ocamlc.byte-output) => passed
Running tests from 'tests/typing-missing-cmi-3' ...
 ... testing 'user.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'user.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'user.ml' with line 7 (ocamlc.byte) => passed
 ... testing 'user.ml' with line 9 (script) => passed
 ... testing 'user.ml' with line 10 (expect) => passed
Running tests from 'tests/typing-missing-cmi-indirections' ...
 ... testing 'test.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 8 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 10 (script) => passed
 ... testing 'test.ml' with line 14 (ocamlc.byte) => passed
 ... testing 'test.ml' with line 15 (check-ocamlc.byte-output) => passed
Running tests from 'tests/typing-modal-kinds' ...
 ... testing 'basics.ml' with line 3 (expect) => passed
 ... testing 'expected_mode.ml' with line 3 (expect) => passed
 ... testing 'principal.ml' with line 2 (expect) => passed
Running tests from 'tests/typing-modes' ...
 ... testing 'class.ml' with line 3 (expect) => passed
 ... testing 'crossing.ml' with line 2 (expect) => passed
 ... testing 'currying.ml' with line 3 (expect) => passed
 ... testing 'gadts.ml' with line 2 (expect) => passed
 ... testing 'lazy.ml' with line 3 (expect) => passed
 ... testing 'letop.ml' with line 2 (expect) => passed
 ... testing 'modes.ml' with line 2 (expect) => passed
 ... testing 'module.ml' with line 2 (expect) => passed
 ... testing 'mutable.ml' with line 3 (expect) => passed
 ... testing 'portable-contend.ml' with line 3 (expect) => passed
 ... testing 'pr2979.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr2979.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'pr2979.ml' with line 7 (ocamlc.byte) => passed
 ... testing 'pr2979.ml' with line 8 (check-ocamlc.byte-output) => passed
 ... testing 'probe.ml' with line 3 (expect) => passed
 ... testing 'rec.ml' with line 2 (expect) => passed
 ... testing 'stack.ml' with line 3 (expect) => passed
 ... testing 'syntax-error.ml' with line 2 (toplevel) => passed
 ... testing 'tuple_modes.ml' with line 3 (expect) => passed
 ... testing 'val_modalities.ml' with line 3 (expect) => passed
Running tests from 'tests/typing-modules' ...
 ... testing 'Test.ml' with line 2 (expect) => passed
 ... testing 'abbreviate_in_error_messages.ml' with line 2 (expect) => passed
 ... testing 'aliases.ml' with line 2 (expect) => passed
 ... testing 'anonymous.ml' with line 2 (expect) => passed
 ... testing 'applicative_functor_type.ml' with line 2 (expect) => passed
 ... testing 'extension_constructors_errors_test.ml' with line 2 (expect) => passed
 ... testing 'firstclass.ml' with line 2 (expect) => passed
 ... testing 'functors.ml' with line 2 (expect) => passed
 ... testing 'generative.ml' with line 2 (expect) => passed
 ... testing 'illegal_permutation.ml' with line 2 (expect) => passed
 ... testing 'include_functor.ml' with line 3 (expect) => passed
 ... testing 'include_functor_disabled_1.ml' with line 4 (setup-ocamlc.byte-build-env) => passed
 ... testing 'include_functor_disabled_1.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'include_functor_disabled_1.ml' with line 6 (check-ocamlc.byte-output) => passed
 ... testing 'include_functor_disabled_2.ml' with line 4 (setup-ocamlc.byte-build-env) => passed
 ... testing 'include_functor_disabled_2.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'include_functor_disabled_2.ml' with line 6 (check-ocamlc.byte-output) => passed
 ... testing 'include_functor_disabled_3.ml' with line 4 (setup-ocamlc.byte-build-env) => passed
 ... testing 'include_functor_disabled_3.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'include_functor_disabled_3.ml' with line 6 (check-ocamlc.byte-output) => passed
 ... testing 'include_functor_native.ml' with line 3 (native) => passed
 ... testing 'inclusion_errors.ml' with line 2 (expect) => passed
 ... testing 'inclusion_errors_elision.ml' with line 3 (expect) => passed
 ... testing 'merge_constraint.ml' with line 3 (expect) => passed
 ... testing 'module_type_substitution.ml' with line 2 (expect) => passed
 ... testing 'nondep.ml' with line 2 (expect) => passed
 ... testing 'nondep_private_abbrev.ml' with line 2 (expect) => passed
 ... testing 'nongen.ml' with line 2 (expect) => passed
 ... testing 'normalize_path.ml' with line 2 (expect) => passed
 ... testing 'package_constraint.ml' with line 2 (expect) => passed
 ... testing 'packed_module_levels.ml' with line 2 (expect) => passed
 ... testing 'pr10298.ml' with line 2 (expect) => passed
 ... testing 'pr10399.ml' with line 2 (expect) => passed
 ... testing 'pr5911.ml' with line 2 (expect) => passed
 ... testing 'pr6394.ml' with line 2 (expect) => passed
 ... testing 'pr6633.ml' with line 2 (expect) => passed
 ... testing 'pr7207.ml' with line 2 (expect) => passed
 ... testing 'pr7348.ml' with line 2 (expect) => passed
 ... testing 'pr7726.ml' with line 2 (expect) => passed
 ... testing 'pr7787.ml' with line 2 (expect) => passed
 ... testing 'pr7818.ml' with line 2 (expect) => passed
 ... testing 'pr7851.ml' with line 2 (expect) => passed
 ... testing 'pr8810.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr8810.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'pr9384.ml' with line 2 (expect) => passed
 ... testing 'pr9695.ml' with line 2 (expect) => passed
 ... testing 'printing.ml' with line 2 (expect) => passed
 ... testing 'private.ml' with line 2 (expect) => passed
 ... testing 'records_errors_test.ml' with line 2 (expect) => passed
 ... testing 'recursive.ml' with line 2 (expect) => passed
 ... testing 'strengthening.ml' with line 3 (expect) => passed
 ... testing 'struct_include_optimisation.ml' with line 2 (native) => passed
 ... testing 'unroll_private_abbrev.ml' with line 2 (expect) => passed
 ... testing 'variants_errors_test.ml' with line 2 (expect) => passed
 ... testing 'with_ghosts.ml' with line 2 (expect) => passed
Running tests from 'tests/typing-modules/pr13099' ...
 ... testing 'test.ml' with line 5 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'test.ml' with line 9 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 11 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 16 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 22 (ocamlopt.byte) => passed
 ... testing 'test.ml' with line 23 (check-ocamlopt.byte-output) => passed
Running tests from 'tests/typing-modules-bugs' ...
 ... testing 'gatien_baron_20131019_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'gatien_baron_20131019_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'gatien_baron_20131019_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr10661_ok.ml' with line 2 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr10661_ok.ml' with line 3 (ocamlc.byte) => passed
 ... testing 'pr10661_ok.ml' with line 4 (check-ocamlc.byte-output) => passed
 ... testing 'pr10693_bad.ml' with line 51 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr10693_bad.ml' with line 52 (ocamlc.byte) => passed
 ... testing 'pr10693_bad.ml' with line 53 (check-ocamlc.byte-output) => passed
 ... testing 'pr5164_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr5164_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr5164_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr51_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr51_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr51_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr5663_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr5663_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr5663_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr5914_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr5914_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr5914_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr6240_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6240_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr6240_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr6293_bad.ml' with line 15 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6293_bad.ml' with line 16 (ocamlc.byte) => passed
 ... testing 'pr6293_bad.ml' with line 17 (check-ocamlc.byte-output) => passed
 ... testing 'pr6427_bad.ml' with line 33 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6427_bad.ml' with line 34 (ocamlc.byte) => passed
 ... testing 'pr6427_bad.ml' with line 35 (check-ocamlc.byte-output) => passed
 ... testing 'pr6485_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6485_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr6485_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr6513_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6513_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr6513_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr6572_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6572_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr6572_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr6651_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6651_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr6651_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr6752_bad.ml' with line 59 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6752_bad.ml' with line 60 (ocamlc.byte) => passed
 ... testing 'pr6752_bad.ml' with line 61 (check-ocamlc.byte-output) => passed
 ... testing 'pr6752_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6752_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr6752_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr6899_first_bad.ml' with line 16 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6899_first_bad.ml' with line 17 (ocamlc.byte) => passed
 ... testing 'pr6899_first_bad.ml' with line 18 (check-ocamlc.byte-output) => passed
 ... testing 'pr6899_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6899_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr6899_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr6899_second_bad.ml' with line 18 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6899_second_bad.ml' with line 19 (ocamlc.byte) => passed
 ... testing 'pr6899_second_bad.ml' with line 20 (check-ocamlc.byte-output) => passed
 ... testing 'pr6944_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6944_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr6944_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr6954_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6954_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr6954_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr6981_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6981_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr6981_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr6982_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6982_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr6982_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr6985_extended.ml' with line 2 (expect) => passed
 ... testing 'pr6985_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6985_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr6985_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr6992_bad.ml' with line 28 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6992_bad.ml' with line 29 (ocamlc.byte) => passed
 ... testing 'pr6992_bad.ml' with line 30 (check-ocamlc.byte-output) => passed
 ... testing 'pr7036_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr7036_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr7036_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr7082_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr7082_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr7082_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr7112_bad.ml' with line 18 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr7112_bad.ml' with line 19 (ocamlc.byte) => passed
 ... testing 'pr7112_bad.ml' with line 20 (check-ocamlc.byte-output) => passed
 ... testing 'pr7112_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr7112_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr7112_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr7152_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr7152_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr7152_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr7182_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr7182_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr7182_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr7305_principal.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr7305_principal.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr7305_principal.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr7321_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr7321_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr7321_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr7414_2_bad.ml' with line 55 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr7414_2_bad.ml' with line 56 (ocamlc.byte) => passed
 ... testing 'pr7414_2_bad.ml' with line 57 (check-ocamlc.byte-output) => passed
 ... testing 'pr7414_bad.ml' with line 68 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr7414_bad.ml' with line 69 (ocamlc.byte) => passed
 ... testing 'pr7414_bad.ml' with line 70 (check-ocamlc.byte-output) => passed
 ... testing 'pr7519_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr7519_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr7519_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr7601_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr7601_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr7601_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr7601a_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr7601a_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr7601a_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr9695_bad.ml' with line 15 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr9695_bad.ml' with line 16 (ocamlc.byte) => passed
 ... testing 'pr9695_bad.ml' with line 17 (check-ocamlc.byte-output) => passed
Running tests from 'tests/typing-multifile' ...
 ... testing 'pr6372.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6372.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'pr6372.ml' with line 7 (ocamlc.byte) => passed
 ... testing 'pr6372.ml' with line 8 (check-ocamlc.byte-output) => passed
 ... testing 'pr7325.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr7325.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'pr7325.ml' with line 7 (ocamlc.byte) => passed
 ... testing 'pr7325.ml' with line 9 (script) => passed
 ... testing 'pr7325.ml' with line 11 (ocamlc.byte) => passed
 ... testing 'pr7325.ml' with line 12 (check-ocamlc.byte-output) => passed
 ... testing 'pr7563.ml' with default (native) => passed
 ... testing 'pr7563.ml' with default (bytecode) => passed
 ... testing 'pr9218.ml' with default (native) => passed
 ... testing 'pr9218.ml' with default (bytecode) => passed
Running tests from 'tests/typing-objects' ...
 ... testing 'Exemples.ml' with line 2 (expect) => passed
 ... testing 'Tests.ml' with line 2 (expect) => passed
 ... testing 'abstract_rows.ml' with line 2 (expect) => passed
 ... testing 'class_2.ml' with line 2 (expect) => passed
 ... testing 'dummy.ml' with line 2 (expect) => passed
 ... testing 'errors.ml' with line 2 (expect) => passed
 ... testing 'field_kind.ml' with line 2 (expect) => passed
 ... testing 'nongen.ml' with line 2 (expect) => passed
 ... testing 'open_in_classes.ml' with line 2 (expect) => passed
 ... testing 'pr11569.ml' with line 2 (expect) => passed
 ... testing 'pr5545.ml' with line 2 (expect) => passed
 ... testing 'pr5619_bad.ml' with line 2 (expect) => passed
 ... testing 'pr5858.ml' with line 2 (expect) => passed
 ... testing 'pr6123_bad.ml' with line 2 (expect) => passed
 ... testing 'pr6383.ml' with line 2 (expect) => passed
 ... testing 'pr6907_bad.ml' with line 2 (expect) => passed
 ... testing 'pr7711_ok.ml' with line 2 (expect) => passed
 ... testing 'self_cannot_be_closed.ml' with line 2 (expect) => passed
 ... testing 'self_cannot_escape_pr7865.ml' with line 2 (expect) => passed
 ... testing 'unbound-type-var.ml' with line 2 (expect) => passed
Running tests from 'tests/typing-objects-bugs' ...
 ... testing 'pr3968_bad.ml' with line 34 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr3968_bad.ml' with line 35 (ocamlc.byte) => passed
 ... testing 'pr3968_bad.ml' with line 36 (check-ocamlc.byte-output) => passed
 ... testing 'pr4018_bad.ml' with line 58 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr4018_bad.ml' with line 59 (ocamlc.byte) => passed
 ... testing 'pr4018_bad.ml' with line 60 (check-ocamlc.byte-output) => passed
 ... testing 'pr4435_bad.ml' with line 24 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr4435_bad.ml' with line 25 (ocamlc.byte) => passed
 ... testing 'pr4435_bad.ml' with line 26 (check-ocamlc.byte-output) => passed
 ... testing 'pr4766_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr4766_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr4766_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr4824_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr4824_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr4824_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr4824a_bad.ml' with line 19 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr4824a_bad.ml' with line 20 (ocamlc.byte) => passed
 ... testing 'pr4824a_bad.ml' with line 21 (check-ocamlc.byte-output) => passed
 ... testing 'pr5156_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr5156_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr5156_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr7284_bad.ml' with line 46 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr7284_bad.ml' with line 47 (ocamlc.byte) => passed
 ... testing 'pr7284_bad.ml' with line 48 (check-ocamlc.byte-output) => passed
 ... testing 'pr7293_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr7293_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr7293_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'woodyatt_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'woodyatt_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'woodyatt_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'yamagata021012_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'yamagata021012_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'yamagata021012_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
Running tests from 'tests/typing-ocamlc-i' ...
 ... testing 'local.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'local.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'local.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pervasives_leitmotiv.ml' with line 18 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pervasives_leitmotiv.ml' with line 19 (ocamlc.byte) => passed
 ... testing 'pervasives_leitmotiv.ml' with line 20 (check-ocamlc.byte-output) => passed
 ... testing 'pr4791.ml' with line 17 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr4791.ml' with line 18 (ocamlc.byte) => passed
 ... testing 'pr4791.ml' with line 19 (check-ocamlc.byte-output) => passed
 ... testing 'pr6323.ml' with line 21 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6323.ml' with line 22 (ocamlc.byte) => passed
 ... testing 'pr6323.ml' with line 23 (check-ocamlc.byte-output) => passed
 ... testing 'pr7402.ml' with line 23 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr7402.ml' with line 24 (ocamlc.byte) => passed
 ... testing 'pr7402.ml' with line 25 (check-ocamlc.byte-output) => passed
 ... testing 'pr7620_bad.ml' with line 16 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr7620_bad.ml' with line 17 (ocamlc.byte) => passed
 ... testing 'pr7620_bad.ml' with line 18 (check-ocamlc.byte-output) => passed
Running tests from 'tests/typing-poly' ...
 ... testing 'error_messages.ml' with line 2 (expect) => passed
 ... testing 'poly.ml' with line 2 (expect) => passed
 ... testing 'poly_params.ml' with line 2 (expect) => passed
 ... testing 'pr11544.ml' with line 2 (expect) => passed
 ... testing 'pr7636.ml' with line 2 (expect) => passed
 ... testing 'pr9603.ml' with line 2 (expect) => passed
Running tests from 'tests/typing-poly-bugs' ...
 ... testing 'pr5322_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr5322_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr5322_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr5673_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr5673_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr5673_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr6922_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6922_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr6922_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
Running tests from 'tests/typing-polyvariants-bugs' ...
 ... testing 'pr10664.ml' with default (native) => passed
 ... testing 'pr10664.ml' with default (bytecode) => passed
 ... testing 'pr10664a.ml' with line 2 (expect) => passed
 ... testing 'pr4775_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr4775_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr4775_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr4933_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr4933_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr4933_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr5057_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr5057_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr5057_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr5057a_bad.ml' with line 20 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr5057a_bad.ml' with line 21 (ocamlc.byte) => passed
 ... testing 'pr5057a_bad.ml' with line 22 (check-ocamlc.byte-output) => passed
 ... testing 'pr7199_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr7199_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr7199_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 'pr7817_bad.ml' with line 2 (expect) => passed
 ... testing 'pr7824.ml' with line 2 (expect) => passed
 ... testing 'pr8575.ml' with line 2 (expect) => passed
 ... testing 'privrowsabate_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'privrowsabate_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'privrowsabate_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
Running tests from 'tests/typing-polyvariants-bugs-2' ...
 ... testing 'pr3918c.ml' with line 29 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr3918c.ml' with line 31 (ocamlc.byte) => passed
 ... testing 'pr3918c.ml' with line 33 (ocamlc.byte) => passed
 ... testing 'pr3918c.ml' with line 35 (script) => passed
 ... testing 'pr3918c.ml' with line 39 (ocamlc.byte) => passed
 ... testing 'pr3918c.ml' with line 41 (check-ocamlc.byte-output) => passed
Running tests from 'tests/typing-private' ...
 ... testing 'invalid_private_row.ml' with line 2 (expect) => passed
 ... testing 'private.ml' with line 3 (toplevel) => passed
 ... testing 'private.ml' with line 5 (toplevel) => passed
Running tests from 'tests/typing-private-bugs' ...
 ... testing 'pr5026_bad.ml' with line 24 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr5026_bad.ml' with line 25 (ocamlc.byte) => passed
 ... testing 'pr5026_bad.ml' with line 26 (check-ocamlc.byte-output) => passed
 ... testing 'pr5469_ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr5469_ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 'pr5469_ok.ml' with line 5 (check-ocamlc.byte-output) => passed
Running tests from 'tests/typing-recmod' ...
 ... testing 'gpr1626.ml' with line 2 (expect) => passed
 ... testing 'pr6491.ml' with line 2 (expect) => passed
 ... testing 'pr9494.ml' with default (native) => passed
 ... testing 'pr9494.ml' with default (bytecode) => passed
 ... testing 't01bad.ml' with line 15 (setup-ocamlc.byte-build-env) => passed
 ... testing 't01bad.ml' with line 16 (ocamlc.byte) => passed
 ... testing 't01bad.ml' with line 17 (check-ocamlc.byte-output) => passed
 ... testing 't02bad.ml' with line 16 (setup-ocamlc.byte-build-env) => passed
 ... testing 't02bad.ml' with line 17 (ocamlc.byte) => passed
 ... testing 't02bad.ml' with line 18 (check-ocamlc.byte-output) => passed
 ... testing 't03ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 't03ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 't03ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 't04bad.ml' with line 15 (setup-ocamlc.byte-build-env) => passed
 ... testing 't04bad.ml' with line 16 (ocamlc.byte) => passed
 ... testing 't04bad.ml' with line 17 (check-ocamlc.byte-output) => passed
 ... testing 't05bad.ml' with line 16 (setup-ocamlc.byte-build-env) => passed
 ... testing 't05bad.ml' with line 17 (ocamlc.byte) => passed
 ... testing 't05bad.ml' with line 18 (check-ocamlc.byte-output) => passed
 ... testing 't06ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 't06ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 't06ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 't07bad.ml' with line 16 (setup-ocamlc.byte-build-env) => passed
 ... testing 't07bad.ml' with line 17 (ocamlc.byte) => passed
 ... testing 't07bad.ml' with line 18 (check-ocamlc.byte-output) => passed
 ... testing 't08bad.ml' with line 17 (setup-ocamlc.byte-build-env) => passed
 ... testing 't08bad.ml' with line 18 (ocamlc.byte) => passed
 ... testing 't08bad.ml' with line 19 (check-ocamlc.byte-output) => passed
 ... testing 't09bad.ml' with line 18 (setup-ocamlc.byte-build-env) => passed
 ... testing 't09bad.ml' with line 19 (ocamlc.byte) => passed
 ... testing 't09bad.ml' with line 20 (check-ocamlc.byte-output) => passed
 ... testing 't10ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 't10ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 't10ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 't11bad.ml' with line 18 (setup-ocamlc.byte-build-env) => passed
 ... testing 't11bad.ml' with line 19 (ocamlc.byte) => passed
 ... testing 't11bad.ml' with line 20 (check-ocamlc.byte-output) => passed
 ... testing 't12bad.ml' with line 26 (setup-ocamlc.byte-build-env) => passed
 ... testing 't12bad.ml' with line 27 (ocamlc.byte) => passed
 ... testing 't12bad.ml' with line 28 (check-ocamlc.byte-output) => passed
 ... testing 't13ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 't13ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 't13ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 't14bad.ml' with line 30 (setup-ocamlc.byte-build-env) => passed
 ... testing 't14bad.ml' with line 31 (ocamlc.byte) => passed
 ... testing 't14bad.ml' with line 32 (check-ocamlc.byte-output) => passed
 ... testing 't15bad.ml' with line 16 (setup-ocamlc.byte-build-env) => passed
 ... testing 't15bad.ml' with line 17 (ocamlc.byte) => passed
 ... testing 't15bad.ml' with line 18 (check-ocamlc.byte-output) => passed
 ... testing 't16ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 't16ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 't16ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 't17ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 't17ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 't17ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 't18ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 't18ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 't18ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 't20ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 't20ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 't20ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 't21ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 't21ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 't21ok.ml' with line 5 (check-ocamlc.byte-output) => passed
 ... testing 't22ok.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 't22ok.ml' with line 4 (ocamlc.byte) => passed
 ... testing 't22ok.ml' with line 5 (check-ocamlc.byte-output) => passed
Running tests from 'tests/typing-recordarg' ...
 ... testing 'recordarg.ml' with line 2 (toplevel) => passed
Running tests from 'tests/typing-rectypes-bugs' ...
 ... testing 'pr5343_bad.ml' with line 26 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr5343_bad.ml' with line 27 (ocamlc.byte) => passed
 ... testing 'pr5343_bad.ml' with line 28 (check-ocamlc.byte-output) => passed
 ... testing 'pr6174_bad.ml' with line 16 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6174_bad.ml' with line 17 (ocamlc.byte) => passed
 ... testing 'pr6174_bad.ml' with line 18 (check-ocamlc.byte-output) => passed
 ... testing 'pr6870_bad.ml' with line 15 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr6870_bad.ml' with line 16 (ocamlc.byte) => passed
 ... testing 'pr6870_bad.ml' with line 17 (check-ocamlc.byte-output) => passed
Running tests from 'tests/typing-safe-linking' ...
 ... testing 'b_bad.ml' with line 22 (setup-ocamlc.byte-build-env) => passed
 ... testing 'b_bad.ml' with line 24 (ocamlc.byte) => passed
 ... testing 'b_bad.ml' with line 28 (ocamlc.byte) => passed
 ... testing 'b_bad.ml' with line 29 (check-ocamlc.byte-output) => passed
Running tests from 'tests/typing-shadowing-of-pervasives-submodules' ...
 ... testing 'redefine_largefile.ml' with default (native) => passed
 ... testing 'redefine_largefile.ml' with default (bytecode) => passed
 ... testing 'redefine_largefile_top.ml' with line 3 (setup-ocaml-build-env) => passed
 ... testing 'redefine_largefile_top.ml' with line 6 (ocamlc.byte) => passed
 ... testing 'redefine_largefile_top.ml' with line 8 (script) => passed
 ... testing 'redefine_largefile_top.ml' with line 10 (script) => passed
 ... testing 'redefine_largefile_top.ml' with line 11 (ocaml) => passed
 ... testing 'redefine_largefile_top.ml' with line 12 (check-ocaml-output) => passed
Running tests from 'tests/typing-short-paths' ...
 ... testing 'errors.ml' with line 3 (expect) => passed
 ... testing 'gpr1223.ml' with line 4 (toplevel) => passed
 ... testing 'pr5918.ml' with line 16 (toplevel) => passed
 ... testing 'pr6836.ml' with line 3 (toplevel) => passed
 ... testing 'pr7543.ml' with line 3 (toplevel) => passed
 ... testing 'short-paths.ml' with line 3 (toplevel) => passed
Running tests from 'tests/typing-signatures' ...
 ... testing 'els.ml' with line 2 (toplevel) => passed
 ... testing 'nondep_regression.ml' with line 2 (expect) => passed
 ... testing 'pr6371.ml' with line 2 (toplevel) => passed
 ... testing 'pr6672.ml' with line 2 (toplevel) => passed
 ... testing 'regression_tsubst_error.ml' with line 2 (expect) => passed
Running tests from 'tests/typing-sigsubst' ...
 ... testing 'sig_local_aliases.ml' with line 2 (expect) => passed
 ... testing 'sig_local_aliases_syntax_errors.ml' with line 39 (toplevel) => passed
 ... testing 'sigsubst.ml' with line 2 (expect) => passed
 ... testing 'test_locations.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'test_locations.ml' with line 6 (ocamlc.byte) => passed
 ... testing 'test_locations.ml' with line 10 (ocamlc.byte) => passed
 ... testing 'test_locations.ml' with line 14 (ocamlc.byte) => passed
 ... testing 'test_locations.ml' with line 18 (ocamlc.byte) => passed
 ... testing 'test_locations.ml' with line 22 (ocamlc.byte) => passed
 ... testing 'test_locations.ml' with line 24 (check-ocamlc.byte-output) => passed
 ... testing 'test_locations.ml' with line 29 (ocamlc.byte) => passed
 ... testing 'test_locations.ml' with line 31 (check-ocamlc.byte-output) => passed
Running tests from 'tests/typing-simd' ...
 ... testing 'test_disabled.ml' with line 3 (expect) => passed
 ... testing 'test_enabled.ml' with line 2 (expect) => passed
 ... testing 'test_upstream_compatible.ml' with line 3 (expect) => passed
Running tests from 'tests/typing-small-numbers' ...
 ... testing 'test_disabled.ml' with line 3 (expect) => passed
 ... testing 'test_enabled.ml' with line 3 (expect) => passed
 ... testing 'test_upstream_compatible.ml' with line 3 (expect) => passed
Running tests from 'tests/typing-typeparam' ...
 ... testing 'newtype.ml' with line 2 (toplevel) => passed
Running tests from 'tests/typing-unboxed' ...
 ... testing 'test.ml' with line 3 (expect) => passed
Running tests from 'tests/typing-unboxed-types' ...
 ... testing 'test.ml' with line 3 (expect) => passed
 ... testing 'test_flat.ml' with line 2 (flat-float-array) => predicate "compiler configured with --enable-flat-float-array" is satisfied
 ... testing 'test_flat.ml' with line 3 (expect) => passed
 ... testing 'test_no_flat.ml' with line 2 (no-flat-float-array) => predicate "compiler configured with --disable-flat-float-array" is not satisfied
Running tests from 'tests/typing-unique' ...
 ... testing 'pr3038.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'pr3038.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'pr3038.ml' with line 6 (check-ocamlc.byte-output) => passed
 ... testing 'unique.ml' with line 3 (expect) => passed
 ... testing 'unique_analysis.ml' with line 3 (expect) => passed
 ... testing 'unique_mod_class.ml' with line 3 (expect) => passed
 ... testing 'unique_typedecl.ml' with line 3 (expect) => passed
Running tests from 'tests/typing-warnings' ...
 ... testing 'ambiguous_guarded_disjunction.ml' with line 3 (expect) => passed
 ... testing 'application.ml' with line 3 (expect) => passed
 ... testing 'coercions.ml' with line 3 (expect) => passed
 ... testing 'disable_warnings_classes.ml' with line 3 (expect) => passed
 ... testing 'exhaustiveness.ml' with line 3 (expect) => passed
 ... testing 'fragile_matching.ml' with default (native) => passed
 ... testing 'fragile_matching.ml' with default (bytecode) => passed
 ... testing 'never_returns.ml' with line 3 (expect) => passed
 ... testing 'open_warnings.ml' with line 3 (expect) => passed
 ... testing 'pr5892.ml' with line 3 (expect) => passed
 ... testing 'pr6587.ml' with line 3 (expect) => passed
 ... testing 'pr6872.ml' with line 3 (expect) => passed
 ... testing 'pr7085.ml' with line 3 (expect) => passed
 ... testing 'pr7115.ml' with line 3 (expect) => passed
 ... testing 'pr7261.ml' with line 13 (toplevel) => passed
 ... testing 'pr7297.ml' with line 3 (expect) => passed
 ... testing 'pr7553.ml' with line 3 (expect) => passed
 ... testing 'pr9244.ml' with line 3 (expect) => passed
 ... testing 'records.ml' with line 3 (expect) => passed
 ... testing 'unused_functor_parameter.ml' with line 3 (expect) => passed
 ... testing 'unused_rec.ml' with line 2 (expect) => passed
 ... testing 'unused_recmodule.ml' with line 2 (expect) => passed
 ... testing 'unused_types.ml' with line 3 (expect) => passed
 ... testing 'warning16.ml' with line 2 (expect) => passed
Running tests from 'tests/typing-zero-alloc' ...
 ... testing 'cmi_test.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'cmi_test.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'cmi_test.ml' with line 7 (expect) => passed
 ... testing 'signatures.ml' with line 2 (expect) => passed
 ... testing 'signatures_native.ml' with line 2 (native) => passed
Running tests from 'tests/unboxed-primitive-args' ...
 ... testing 'test.ml' with line 3 (flambda2) => predicate "support for flambda2 enabled" is satisfied
 ... testing 'test.ml' with line 4 (arch_amd64) => predicate "Target is AMD64 architecture" is satisfied
 ... testing 'test.ml' with line 5 (setup-ocamlopt.opt-build-env) => passed
 ... testing 'test.ml' with line 10 (ocaml) => passed
 ... testing 'test.ml' with line 13 (ocaml) => passed
 ... testing 'test.ml' with line 16 (ocamlopt.opt) => passed
 ... testing 'test.ml' with line 17 (run) => passed
 ... testing 'test.ml' with line 18 (check-program-output) => passed
Running tests from 'tests/unwind' ...
 ... testing 'driver.ml' with line 3 (skip) => skipped (Test is broken w.r.t. Flambda 2 name mangling etc.)
Running tests from 'tests/utils' ...
 ... testing 'edit_distance.ml' with line 5 (bytecode) => passed
 ... testing 'find_first_mono.ml' with line 5 (bytecode) => passed
 ... testing 'magic_number.ml' with line 4 (bytecode) => passed
 ... testing 'overflow_detection.ml' with line 5 (bytecode) => passed
 ... testing 'test_strongly_connected_components.ml' with line 5 (bytecode) => passed
Running tests from 'tests/warnings' ...
 ... testing 'deprecated_module.ml' with line 21 (bytecode) => passed
 ... testing 'deprecated_module_assigment.ml' with line 90 (bytecode) => passed
 ... testing 'deprecated_module_use.ml' with line 27 (setup-ocamlc.byte-build-env) => passed
 ... testing 'deprecated_module_use.ml' with line 30 (ocamlc.byte) => passed
 ... testing 'deprecated_module_use.ml' with line 32 (ocamlc.byte) => passed
 ... testing 'deprecated_module_use.ml' with line 35 (ocamlc.byte) => passed
 ... testing 'deprecated_module_use.ml' with line 36 (check-ocamlc.byte-output) => passed
 ... testing 'deprecated_mutable.ml' with line 17 (bytecode) => passed
 ... testing 'deprecated_warning_specs.ml' with line 2 (expect) => passed
 ... testing 'mnemonics.mll' with default (native) => passed
 ... testing 'mnemonics.mll' with default (bytecode) => passed
 ... testing 'w01.ml' with line 58 (setup-ocamlc.byte-build-env) => passed
 ... testing 'w01.ml' with line 60 (ocamlc.byte) => passed
 ... testing 'w01.ml' with line 61 (check-ocamlc.byte-output) => passed
 ... testing 'w03.ml' with line 28 (setup-ocamlc.byte-build-env) => passed
 ... testing 'w03.ml' with line 30 (ocamlc.byte) => passed
 ... testing 'w03.ml' with line 31 (check-ocamlc.byte-output) => passed
 ... testing 'w04.ml' with line 27 (setup-ocamlc.byte-build-env) => passed
 ... testing 'w04.ml' with line 29 (ocamlc.byte) => passed
 ... testing 'w04.ml' with line 30 (check-ocamlc.byte-output) => passed
 ... testing 'w04_failure.ml' with line 43 (setup-ocamlc.byte-build-env) => passed
 ... testing 'w04_failure.ml' with line 45 (ocamlc.byte) => passed
 ... testing 'w04_failure.ml' with line 46 (check-ocamlc.byte-output) => passed
 ... testing 'w06.ml' with line 21 (setup-ocamlc.byte-build-env) => passed
 ... testing 'w06.ml' with line 23 (ocamlc.byte) => passed
 ... testing 'w06.ml' with line 24 (check-ocamlc.byte-output) => passed
 ... testing 'w190.ml' with line 18 (setup-ocamlc.byte-build-env) => passed
 ... testing 'w190.ml' with line 20 (ocamlc.byte) => passed
 ... testing 'w190.ml' with line 21 (check-ocamlc.byte-output) => passed
 ... testing 'w26_alias.ml' with line 2 (expect) => passed
 ... testing 'w32.ml' with line 86 (setup-ocamlc.byte-build-env) => passed
 ... testing 'w32.ml' with line 88 (ocamlc.byte) => passed
 ... testing 'w32.ml' with line 90 (ocamlc.byte) => passed
 ... testing 'w32.ml' with line 91 (check-ocamlc.byte-output) => passed
 ... testing 'w32b.ml' with line 17 (setup-ocamlc.byte-build-env) => passed
 ... testing 'w32b.ml' with line 19 (ocamlc.byte) => passed
 ... testing 'w32b.ml' with line 20 (check-ocamlc.byte-output) => passed
 ... testing 'w33.ml' with line 31 (setup-ocamlc.byte-build-env) => passed
 ... testing 'w33.ml' with line 33 (ocamlc.byte) => passed
 ... testing 'w33.ml' with line 34 (check-ocamlc.byte-output) => passed
 ... testing 'w44.ml' with line 3 (expect) => passed
 ... testing 'w45.ml' with line 31 (setup-ocamlc.byte-build-env) => passed
 ... testing 'w45.ml' with line 33 (ocamlc.byte) => passed
 ... testing 'w45.ml' with line 34 (check-ocamlc.byte-output) => passed
 ... testing 'w47_inline.ml' with line 45 (setup-ocamlc.byte-build-env) => passed
 ... testing 'w47_inline.ml' with line 47 (ocamlc.byte) => passed
 ... testing 'w47_inline.ml' with line 48 (check-ocamlc.byte-output) => passed
 ... testing 'w47_ppwarning.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'w47_ppwarning.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'w47_ppwarning.ml' with line 6 (check-ocamlc.byte-output) => passed
 ... testing 'w50.ml' with line 22 (setup-ocamlc.byte-build-env) => passed
 ... testing 'w50.ml' with line 24 (ocamlc.byte) => passed
 ... testing 'w50.ml' with line 25 (check-ocamlc.byte-output) => passed
 ... testing 'w51.ml' with line 3 (expect) => passed
 ... testing 'w51_bis.ml' with line 20 (setup-ocamlc.byte-build-env) => passed
 ... testing 'w51_bis.ml' with line 22 (ocamlc.byte) => passed
 ... testing 'w51_bis.ml' with line 23 (check-ocamlc.byte-output) => passed
 ... testing 'w52.ml' with line 3 (expect) => passed
 ... testing 'w53.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'w53.ml' with line 5 (ocamlc.byte) => passed
 ... testing 'w53.ml' with line 6 (check-ocamlc.byte-output) => passed
 ... testing 'w53_across_cmi.ml' with line 3 (setup-ocamlc.byte-build-env) => passed
 ... testing 'w53_across_cmi.ml' with line 7 (ocamlc.byte) => passed
 ... testing 'w53_across_cmi.ml' with line 10 (ocamlc.byte) => passed
 ... testing 'w53_across_cmi.ml' with line 11 (check-ocamlc.byte-output) => passed
 ... testing 'w53_marshalled.ml' with line 4 (setup-ocamlc.byte-build-env) => passed
 ... testing 'w53_marshalled.ml' with line 8 (ocamlc.byte) => passed
 ... testing 'w53_marshalled.ml' with line 9 (run) => passed
 ... testing 'w53_marshalled.ml' with line 14 (ocamlc.byte) => passed
 ... testing 'w53_marshalled.ml' with line 15 (check-ocamlc.byte-output) => passed
 ... testing 'w53_marshalled.ml' with line 17 (setup-ocamlc.byte-build-env) => passed
 ... testing 'w53_marshalled.ml' with line 21 (ocamlc.byte) => passed
 ... testing 'w53_marshalled.ml' with line 22 (check-ocamlc.byte-output) => passed
 ... testing 'w53_mli.mli' with line 20 (setup-ocamlc.byte-build-env) => passed
 ... testing 'w53_mli.mli' with line 22 (ocamlc.byte) => passed
 ... testing 'w53_mli.mli' with line 23 (check-ocamlc.byte-output) => passed
 ... testing 'w53_with_ppx.ml' with line 4 (setup-ocamlc.byte-build-env) => passed
 ... testing 'w53_with_ppx.ml' with line 7 (ocamlc.byte) => passed
 ... testing 'w53_with_ppx.ml' with line 10 (ocamlc.byte) => passed
 ... testing 'w53_with_ppx.ml' with line 11 (check-ocamlc.byte-output) => passed
 ... testing 'w53_zero_alloc_all.ml' with line 83 (setup-ocamlc.byte-build-env) => passed
 ... testing 'w53_zero_alloc_all.ml' with line 85 (ocamlc.byte) => passed
 ... testing 'w53_zero_alloc_all.ml' with line 86 (check-ocamlc.byte-output) => passed
 ... testing 'w54.ml' with line 23 (setup-ocamlc.byte-build-env) => passed
 ... testing 'w54.ml' with line 25 (ocamlc.byte) => passed
 ... testing 'w54.ml' with line 26 (check-ocamlc.byte-output) => passed
 ... testing 'w55.ml' with line 60 (setup-ocamlc.byte-build-env) => passed
 ... testing 'w55.ml' with line 61 (ocamlc.byte) => passed
 ... testing 'w55.ml' with line 62 (check-ocamlc.byte-output) => passed
 ... testing 'w55.ml' with line 64 (no-flambda) => predicate "support for flambda disabled" is not satisfied
 ... testing 'w55.ml' with line 70 (flambda) => predicate "support for flambda enabled" is satisfied
 ... testing 'w55.ml' with line 71 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'w55.ml' with line 72 (ocamlopt.byte) => passed
 ... testing 'w55.ml' with line 73 (check-ocamlopt.byte-output) => passed
 ... testing 'w58.ml' with line 5 (setup-ocamlc.byte-build-env) => passed
 ... testing 'w58.ml' with line 7 (ocamlc.byte) => passed
 ... testing 'w58.ml' with line 9 (ocamlc.byte) => passed
 ... testing 'w58.ml' with line 10 (check-ocamlc.byte-output) => passed
 ... testing 'w58.ml' with line 12 (setup-ocamlopt.byte-build-env) => passed
 ... testing 'w58.ml' with line 14 (ocamlopt.byte) => passed
 ... testing 'w58.ml' with line 16 (ocamlopt.byte) => passed
 ... testing 'w58.ml' with line 17 (check-ocamlopt.byte-output) => passed
 ... testing 'w60.ml' with line 63 (setup-ocamlc.byte-build-env) => passed
 ... testing 'w60.ml' with line 65 (ocamlc.byte) => passed
 ... testing 'w60.ml' with line 66 (check-ocamlc.byte-output) => passed
Running tests from 'tests/weak-ephe-final' ...
 ... testing 'ephe_infix.ml' with default (native) => passed
 ... testing 'ephe_infix.ml' with default (bytecode) => passed
 ... testing 'ephetest.ml' with default (native) => passed
 ... testing 'ephetest.ml' with default (bytecode) => passed
 ... testing 'ephetest2.ml' with default (native) => passed
 ... testing 'ephetest2.ml' with default (bytecode) => passed
 ... testing 'ephetest3.ml' with default (native) => passed
 ... testing 'ephetest3.ml' with default (bytecode) => passed
 ... testing 'ephetest_par.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'finaliser.ml' with default (native) => passed
 ... testing 'finaliser.ml' with default (bytecode) => passed
 ... testing 'finaliser2.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'finaliser_handover.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
 ... testing 'pr12001.ml' with default (native) => passed
 ... testing 'pr12001.ml' with default (bytecode) => passed
 ... testing 'weaklifetime.ml' with default (native) => passed
 ... testing 'weaklifetime.ml' with default (bytecode) => passed
 ... testing 'weaklifetime2.ml' with default (native) => passed
 ... testing 'weaklifetime2.ml' with default (bytecode) => passed
 ... testing 'weaktest.ml' with default (native) => passed
 ... testing 'weaktest.ml' with default (bytecode) => passed
 ... testing 'weaktest_par_load.ml' with line 3 (skip) => skipped (CR ocaml 5 domains: re-enable this test)
Running tests from 'tests/win-unicode' ...
 ... testing 'mltest.ml' with line 3 (hasunix) => predicate "unix library available" is satisfied
 ... testing 'mltest.ml' with line 5 (windows-unicode) => predicate "Windows Unicode support available" is not satisfied


List of skipped tests:
    tests/afl-instrumentation/'afl-fuzz-test.ml' with line 3 (skip) 
    tests/arch-power
    tests/asmcomp
    tests/asmgen/'integr.cmm' with line 5 (skip) 
    tests/backtrace/'backtrace2.ml' with line 86 (skip) 
    tests/backtrace/'backtrace_c_exn.ml' with line 48 (runtime5) 
    tests/backtrace/'backtrace_effects.ml' with line 49 (skip) 
    tests/backtrace/'backtrace_effects_nested.ml' with line 53 (skip) 
    tests/backtrace/'callstack.ml' with line 37 (no-flambda) 
    tests/backtrace/'lazy.ml' with line 29 (no-flambda) 
    tests/backtrace/'print_location.ml' with line 2 (runtime5) 
    tests/basic-modules/'anonymous.ml' with line 68 (no-flambda) 
    tests/c-api/'aligned_alloc.ml' with line 5 (skip) 
    tests/c-api/'aligned_alloc.ml' with line 7 (runtime5) 
    tests/c-api/'test_c_thread_has_lock.ml' with line 3 (runtime5) 
    tests/c-api/'test_c_thread_has_lock_systhread.ml' with line 3 (runtime5) 
    tests/callback/'callback_effects_gc.ml' with line 4 (skip) 
    tests/callback/'nested_fiber.ml' with line 4 (skip) 
    tests/callback/'stack_overflow.ml' with line 4 (skip) 
    tests/callback/'test7.ml' with line 4 (skip) 
    tests/capsule-api
    tests/effects
    tests/ephe-c-api
    tests/frame-pointers/'c_call.ml' with line 2 (runtime5) 
    tests/frame-pointers/'effects.ml' with line 4 (skip) 
    tests/frame-pointers/'effects.ml' with line 7 (skip) 
    tests/frame-pointers/'exception_handler.ml' with line 2 (runtime5) 
    tests/frame-pointers/'reperform.ml' with line 3 (skip) 
    tests/frame-pointers/'reperform.ml' with line 6 (skip) 
    tests/frame-pointers/'stack_realloc.ml' with line 3 (skip) 
    tests/frame-pointers/'stack_realloc.ml' with line 6 (skip) 
    tests/frame-pointers/'stack_realloc2.ml' with line 3 (skip) 
    tests/frame-pointers/'stack_realloc2.ml' with line 6 (skip) 
    tests/gc-roots/'globroots_parallel.ml' with line 5 (skip) 
    tests/gc-roots/'globroots_parallel_spawn_burn.ml' with line 5 (skip) 
    tests/generalized-open/'clambda_optim.ml' with line 3 (no-flambda) 
    tests/lazy/'lazy2.ml' with line 4 (skip) 
    tests/lazy/'lazy3.ml' with line 4 (skip) 
    tests/lazy/'lazy5.ml' with line 4 (skip) 
    tests/lazy/'lazy6.ml' with line 4 (skip) 
    tests/lazy/'lazy7.ml' with line 4 (skip) 
    tests/lazy/'lazy8.ml' with line 4 (skip) 
    tests/lazy/'minor_major_force.ml' with line 3 (runtime5) 
    tests/letrec-check/'no_flat_float_array.ml' with line 2 (no-flat-float-array) 
    tests/lf_skiplist/'test.ml' with line 3 (runtime5) 
    tests/lf_skiplist/'test_parallel.ml' with line 5 (skip) 
    tests/lib-channels/'close_in.ml' with line 2 (runtime5) 
    tests/lib-channels/'refcounting.ml' with line 3 (skip) 
    tests/lib-dynlink-csharp
    tests/lib-dynlink-domains
    tests/lib-dynlink-initializers/'test10_main.ml' with line 83 (no-flambda) 
    tests/lib-format/'domains.ml' with line 3 (skip) 
    tests/lib-format/'mc_pr586_par.ml' with line 3 (skip) 
    tests/lib-format/'mc_pr586_par2.ml' with line 3 (skip) 
    tests/lib-marshal/'intext_par.ml' with line 5 (skip) 
    tests/lib-obj/'get_header.ml' with line 7 (no-stack-allocation) 
    tests/lib-random/'parallel.ml' with line 4 (skip) 
    tests/lib-random/'testvectors.ml' with line 2 (runtime5) 
    tests/lib-runtime-events/'test.ml' with line 4 (skip) 
    tests/lib-runtime-events/'test.ml' with line 7 (skip) 
    tests/lib-runtime-events/'test_caml.ml' with line 4 (skip) 
    tests/lib-runtime-events/'test_caml.ml' with line 7 (skip) 
    tests/lib-runtime-events/'test_caml_counters.ml' with line 4 (skip) 
    tests/lib-runtime-events/'test_caml_counters.ml' with line 7 (runtime5) 
    tests/lib-runtime-events/'test_caml_exception.ml' with line 4 (runtime5) 
    tests/lib-runtime-events/'test_caml_exception.ml' with line 9 (skip) 
    tests/lib-runtime-events/'test_caml_parallel.ml' with line 4 (skip) 
    tests/lib-runtime-events/'test_caml_reentry.ml' with line 4 (runtime5) 
    tests/lib-runtime-events/'test_caml_reentry.ml' with line 9 (skip) 
    tests/lib-runtime-events/'test_caml_runparams.ml' with line 4 (skip) 
    tests/lib-runtime-events/'test_caml_runparams.ml' with line 8 (runtime5) 
    tests/lib-runtime-events/'test_caml_slot_reuse.ml' with line 4 (skip) 
    tests/lib-runtime-events/'test_caml_stubs_gc.ml' with line 4 (skip) 
    tests/lib-runtime-events/'test_caml_stubs_gc.ml' with line 7 (runtime5) 
    tests/lib-runtime-events/'test_compact.ml' with line 4 (skip) 
    tests/lib-runtime-events/'test_compact.ml' with line 6 (runtime5) 
    tests/lib-runtime-events/'test_dropped_events.ml' with line 6 (skip) 
    tests/lib-runtime-events/'test_env_start.ml' with line 4 (skip) 
    tests/lib-runtime-events/'test_env_start.ml' with line 8 (runtime5) 
    tests/lib-runtime-events/'test_external.ml' with line 4 (skip) 
    tests/lib-runtime-events/'test_external.ml' with line 8 (runtime5) 
    tests/lib-runtime-events/'test_external_preserve.ml' with line 4 (skip) 
    tests/lib-runtime-events/'test_external_preserve.ml' with line 9 (runtime5) 
    tests/lib-runtime-events/'test_fork.ml' with line 4 (skip) 
    tests/lib-runtime-events/'test_fork.ml' with line 8 (runtime5) 
    tests/lib-runtime-events/'test_instrumented.ml' with line 4 (skip) 
    tests/lib-runtime-events/'test_instrumented.ml' with line 8 (runtime5) 
    tests/lib-runtime-events/'test_user_event.ml' with line 4 (skip) 
    tests/lib-runtime-events/'test_user_event.ml' with line 7 (runtime5) 
    tests/lib-runtime-events/'test_user_event_signal.ml' with line 2 (runtime5) 
    tests/lib-runtime-events/'test_user_event_unknown.ml' with line 4 (skip) 
    tests/lib-runtime-events/'test_user_event_unknown.ml' with line 9 (runtime5) 
    tests/lib-str/'parallel.ml' with line 3 (skip) 
    tests/lib-sync
    tests/lib-systhreads/'boundscheck.ml' with line 3 (runtime5) 
    tests/lib-systhreads/'multicore_lifecycle.ml' with line 3 (skip) 
    tests/lib-threads/'beat.ml' with line 9 (macos) 
    tests/lib-unix/common/'multicore_fork_domain_alone.ml' with line 4 (skip) 
    tests/lib-unix/common/'multicore_fork_domain_alone2.ml' with line 4 (skip) 
    tests/lib-unix/isatty/'isatty_tty.ml' with line 3 (libwin32unix) 
    tests/lib-unix/unix-execvpe/'exec.ml' with line 6 (script) 
    tests/lib-unix/win-channel-of
    tests/lib-unix/win-createprocess
    tests/lib-unix/win-env
    tests/lib-unix/win-socketpair
    tests/lib-unix/win-stat
    tests/lib-unix/win-symlink
    tests/manual-intf-c
    tests/memory-model
    tests/misc/'gctweaks.ml' with line 2 (runtime5) 
    tests/mixed-blocks/'closure_padding_float32.ml' with line 2 (runtime5) 
    tests/parallel/'atomics.ml' with line 3 (skip) 
    tests/parallel/'backup_thread.ml' with line 3 (skip) 
    tests/parallel/'backup_thread_pipe.ml' with line 3 (skip) 
    tests/parallel/'catch_break.ml' with line 3 (skip) 
    tests/parallel/'constpromote.ml' with line 3 (skip) 
    tests/parallel/'deadcont.ml' with line 3 (skip) 
    tests/parallel/'domain_dls.ml' with line 3 (skip) 
    tests/parallel/'domain_dls2.ml' with line 3 (skip) 
    tests/parallel/'domain_id.ml' with line 3 (skip) 
    tests/parallel/'domain_parallel_spawn_burn.ml' with line 3 (skip) 
    tests/parallel/'domain_parallel_spawn_burn_gc_set.ml' with line 3 (skip) 
    tests/parallel/'domain_serial_spawn_burn.ml' with line 3 (skip) 
    tests/parallel/'fib_threads.ml' with line 3 (skip) 
    tests/parallel/'join.ml' with line 3 (skip) 
    tests/parallel/'major_gc_wait_backup.ml' with line 3 (skip) 
    tests/parallel/'mctest.ml' with line 3 (skip) 
    tests/parallel/'multicore_systhreads.ml' with line 3 (skip) 
    tests/parallel/'pingpong.ml' with line 4 (skip) 
    tests/parallel/'poll.ml' with line 3 (skip) 
    tests/parallel/'prodcons_domains.ml' with line 3 (skip) 
    tests/parallel/'recommended_domain_count.ml' with line 4 (skip) 
    tests/parallel/'recommended_domain_count_unix.ml' with line 3 (skip) 
    tests/parallel/'tak.ml' with line 3 (skip) 
    tests/parallel/'test_c_thread_register.ml' with line 4 (skip) 
    tests/parallel/'test_issue_11094.ml' with line 3 (skip) 
    tests/runtime-errors/'syserror.ml' with line 13 (libwin32unix) 
    tests/runtime-errors/'syserror.ml' with line 27 (libwin32unix) 
    tests/statmemprof/'callstacks.ml' with line 120 (no-flat-float-array) 
    tests/statmemprof/'discard_in_callback.ml' with line 2 (runtime5) 
    tests/statmemprof/'start_stop.ml' with line 2 (runtime5) 
    tests/statmemprof/'stop_start_in_callback.ml' with line 2 (runtime5) 
    tests/statmemprof/'thread_exit_in_callback.ml' with line 3 (skip) 
    tests/templates/basic/'test.ml' with line 209 (skip) 
    tests/tool-ocamlobjinfo/'question.ml' with line 18 (runtime5) 
    tests/tool-ocamlopt-stop-after/'stop_after_lambda.ml' with line 2 (no-flambda) 
    tests/translprim/'array_spec.ml' with line 12 (no-stack-allocation) 
    tests/translprim/'array_spec.ml' with line 17 (no-flat-float-array) 
    tests/translprim/'comparison_table.ml' with line 10 (no-stack-allocation) 
    tests/translprim/'module_coercion.ml' with line 10 (no-flat-float-array) 
    tests/translprim/'ref_spec.ml' with line 10 (no-stack-allocation) 
    tests/tsan
    tests/typing-layouts/'annots-failing.ml' with line 3 (skip) 
    tests/typing-layouts/'or_null.ml' with line 3 (skip) 
    tests/typing-local/'alloc.ml' with line 10 (no-stack-allocation) 
    tests/typing-local/'curry.ml' with line 10 (no-stack-allocation) 
    tests/typing-local/'float_iarray.ml' with line 11 (no-stack-allocation) 
    tests/typing-local/'loop_regions.ml' with line 7 (no-stack-allocation) 
    tests/typing-local/'regression_cmm_unboxing.ml' with line 7 (no-stack-allocation) 
    tests/typing-local/'test_iarray.ml' with line 11 (no-stack-allocation) 
    tests/typing-misc/'pr6939-no-flat-float-array.ml' with line 2 (no-flat-float-array) 
    tests/typing-unboxed-types/'test_no_flat.ml' with line 2 (no-flat-float-array) 
    tests/unwind
    tests/warnings/'w55.ml' with line 64 (no-flambda) 
    tests/weak-ephe-final/'ephetest_par.ml' with line 3 (skip) 
    tests/weak-ephe-final/'finaliser2.ml' with line 3 (skip) 
    tests/weak-ephe-final/'finaliser_handover.ml' with line 3 (skip) 
    tests/weak-ephe-final/'weaktest_par_load.ml' with line 3 (skip) 
    tests/win-unicode/'mltest.ml' with line 5 (windows-unicode) 

Summary:
  4145 tests passed
   212 tests skipped
     0 tests failed
     0 tests not started (parent test skipped or failed)
     0 unexpected errors
  4357 tests considered
